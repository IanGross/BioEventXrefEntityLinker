# ::snt Medium-Chain Acyl-CoA Dehydrogenase Deficiency in Gene-Targeted Mice .
# ::tok Medium-Chain Acyl-CoA Dehydrogenase Deficiency in Gene-Targeted Mice .
# ::alignments 6-7|0 5-6|0.1 0-4|0.0.0.3+0.0.0.2+0.0.0.1+0.0.0.0+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:43.439
(m / mouse 
      :location-of (o / organization 
            :name (n / name 
                  :op1 "Medium-Chain" 
                  :op2 "Acyl-CoA" 
                  :op3 "Dehydrogenase" 
                  :op4 "Deficiency")) 
      :mod (g / gene-target))

# ::snt Medium-chain acyl-CoA dehydrogenase ( MCAD ) deficiency is the most common inherited disorder of mitochondrial fatty acid -oxidation in humans .
# ::tok Medium-chain acyl-CoA dehydrogenase ( MCAD ) deficiency is the most common inherited disorder of mitochondrial fatty acid -oxidation in humans .
# ::alignments 19-20|0.0.0 16-17|0.3 15-16|0.3.0 12-13|0 11-12|0.0 10-11|0.2 9-10|0.2.0 6-7|0.1 2-3|0.1.0 0-2|0.1.0.0.0.1+0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:44.546
(d / disord 
      :ARG1-of (i / inherit-01 
            :ARG0 (h / human)) 
      :domain (d2 / deficiency 
            :mod (d3 / dehydrogenase 
                  :mod (t / thing 
                        :name (n / name 
                              :op1 (m2 / Medium-chain) 
                              :op2 (a2 / acyl-CoA))))) 
      :mod (c / common 
            :degree (m / most)) 
      :mod (a / acid 
            :mod (f / fatty)))

# ::snt To better understand the pathogenesis of this disease , we developed a mouse model for MCAD deficiency ( MCAD  /  ) by gene targeting in embryonic stem ( ES ) cells .
# ::tok To better understand the pathogenesis of this disease , we developed a mouse model for MCAD deficiency ( MCAD  /  ) by gene targeting in embryonic stem ( ES ) cells .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:44.550
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The MCAD  /  mice developed an organic aciduria and fatty liver , and showed profound cold intolerance at 4 C with prior fasting .
# ::tok The MCAD  /  mice developed an organic aciduria and fatty liver , and showed profound cold intolerance at 4 C with prior fasting .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:44.562
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The sporadic cardiac lesions seen in MCAD  /  mice have not been reported in human MCAD patients .
# ::tok The sporadic cardiac lesions seen in MCAD  /  mice have not been reported in human MCAD patients .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:44.565
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt There was significant neonatal mortality of MCAD  /  pups demonstrating similarities to patterns of clinical episodes and mortality in MCAD-deficient patients .
# ::tok There was significant neonatal mortality of MCAD  /  pups demonstrating similarities to patterns of clinical episodes and mortality in MCAD-deficient patients .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:44.570
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The MCAD-deficient mouse reproduced important aspects of human MCAD deficiency and is a valuable model for further analysis of the roles of fatty acid oxidation and pathogenesis of human diseases involving fatty acid oxidation .
# ::tok The MCAD-deficient mouse reproduced important aspects of human MCAD deficiency and is a valuable model for further analysis of the roles of fatty acid oxidation and pathogenesis of human diseases involving fatty acid oxidation .
# ::alignments 33-34|0.1.2.0.0 32-33|0.1.2.0.0.0 31-32|0.0.0.0.0.0.0.1 30-31|0.1.2.0 29-30|0.1.2 28-29|0.0.0.0.0.0.0.0 26-27|0.2 25-26|0 24-25|0.1 23-24|0.1.0 22-23|0.1.1 20-21|0.0 17-18|0.0.0 16-17|0.0.0.1 14-15|0.0.0.0.0.1.0 13-14|0.0.0.0.0.1.0.0 10-11|0.0.0.0.0.1 9-10|0.0.0.0.0.0.1 7-8|0.0.0.0.0.0.1.0 5-6|0.0.0.0.0.0 4-5|0.0.0.0.0.0.0 3-4|0.0.0.0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:45.817
(a2 / and 
      :op1 (r / role 
            :ARG1-of (a4 / analyze-01 
                  :ARG0 (m2 / mouse 
                        :ARG0-of (r2 / reproduce-01 
                              :ARG1 (a6 / aspect 
                                    :mod (i2 / important 
                                          :mod (h / human) 
                                          :mod (f / fatty)) 
                                    :poss (d2 / deficiency 
                                          :mod (h2 / human))) 
                              :op1-of (a5 / and 
                                    :op2 (m / model 
                                          :ARG1-of (v / value-02))))) 
                  :mod (f3 / further))) 
      :op2 (o2 / oxidation 
            :mod (a3 / acid) 
            :mod (f2 / fatty) 
            :poss (d / disease 
                  :ARG2-of (i / involve-01 
                        :ARG1 (o / oxidation 
                              :mod (a / acid))))) 
      :op3 (p / pathogenesi))

# ::snt Medium-chain acyl-CoA dehydrogenase ( MCAD ) deficiency is one of the most common inherited disorders of metabolism .
# ::tok Medium-chain acyl-CoA dehydrogenase ( MCAD ) deficiency is one of the most common inherited disorders of metabolism .
# ::alignments 16-17|0.0.0.0.1 14-15|0.0.0.0 13-14|0.0.0 12-13|0.0.0.0.0 11-12|0.0.0.0.0.0 6-7|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:45.918
(d2 / deficiency 
      :mod (d3 / dehydrogenase 
            :ARG0-of (i / inherit-01 
                  :ARG1 (d / disorder 
                        :mod (c / common 
                              :degree (m2 / most)) 
                        :mod (m / metabolism)))))

# ::snt This defect in fatty acid oxidation can lead to severe and sometimes fatal disease , especially in young children because they are unable to tolerate a fasting episode .
# ::tok This defect in fatty acid oxidation can lead to severe and sometimes fatal disease , especially in young children because they are unable to tolerate a fasting episode .
# ::alignments 27-28|0.1.1 26-27|0.1.1.0 24-25|0.1 20-21|0.1.0 19-20|0.0.1 18-19|0.0.1.0.0 17-18|0.0.1.0 15-16|0.0.1.1 13-14|0.0.2.2 12-13|0.0.2.1 11-12|0.0.2.1.0 10-11|0.0.2 9-10|0.0.2.0 7-8|0.0 6-7|0 5-6|0.0.0.0 4-5|0.0.0.0.0 3-4|0.0.0.0.1 1-2|0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:47.217
(p / possible-01 
      :ARG1 (l / lead-03 
            :ARG0 (d2 / defect-01 
                  :ARG1 (o / oxidation 
                        :mod (a2 / acid) 
                        :mod (f3 / fatty)) 
                  :mod (t3 / this)) 
            :ARG1-of (c / cause-01 
                  :ARG0 (y / young 
                        :mod-of (c2 / child)) 
                  :mod (e2 / especially)) 
            :ARG2 (a / and 
                  :op1 (s2 / severe) 
                  :op2 (f2 / fatal 
                        :time (s / sometimes)) 
                  :op3 (d / disease))) 
      :ARG2 (t / tolerate-01 
            :ARG0 (t2 / they) 
            :ARG1 (e / episode 
                  :mod (f / fast))))

# ::snt Metabolic complications include very low blood glucose concentrations and generation of toxic by-products .
# ::tok Metabolic complications include very low blood glucose concentrations and generation of toxic by-products .
# ::alignments 12-13|0.0.0.2 11-12|0.0.0.2.0 9-10|0.0.1 8-9|0.0 7-8|0.0.0 6-7|0.0.0.1 5-6|0.0.0.0 4-5|0.0.0.1.0 3-4|0.0.0.1.0.0 2-3|0 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:47.960
(i / include-01 
      :ARG1 (a / and 
            :op1 (c / concentration 
                  :mod (b2 / blood) 
                  :mod (g2 / glucose 
                        :ARG1-of (l / low-04 
                              :degree (v / very))) 
                  :poss (b / by-product 
                        :mod (t / toxic))) 
            :op2 (g / generation)) 
      :ARG2 (c2 / complication 
            :mod (m / metabolic)))

# ::snt This disorder can result in sudden infant death .
# ::tok This disorder can result in sudden infant death .
# ::alignments 7-8|0.2 6-7|0.2.1 5-6|0.2.0 3-4|0 2-3|0.1 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:48.002
(r / result-01 
      :ARG1 (d2 / disord 
            :mod (t / this)) 
      :ARG1-of (p / possible-01) 
      :ARG2 (d / die-01 
            :manner (s / sudden) 
            :mod (i / infant)))

# ::snt Using a process known as gene targeting in mouse embryonic stem cells , the authors have developed a mouse model with the same enzyme deficiency .
# ::tok Using a process known as gene targeting in mouse embryonic stem cells , the authors have developed a mouse model with the same enzyme deficiency .
# ::alignments 24-25|0.0.0.0.1.0.0.0.1 23-24|0.0.0.0.1.0.0.0.1.1 22-23|0.0.0.0.1.0.0.0.1.0 19-20|0.0.0.0.1.0.0.0 18-19|0.0.0.0.1.0.0.0.0 16-17|0.0.0.0.1.0.0 14-15|0.0.0.0.1.0 11-12|0.0 10-11|0.0.2 9-10|0 8-9|0.0.1 6-7|0.0.0 5-6|0.0.0.0.0.0 3-4|0.0.0.0.0 2-3|0.0.0.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:48.336
(e2 / embryonic 
      :mod-of (c / cell 
            :ARG1-of (t / target-01 
                  :ARG1-of (p / process-02 
                        :ARG1-of (k / know-02 
                              :ARG2 (g / gene)) 
                        :ARG1-of (u / use-01 
                              :ARG0 (a / author-01 
                                    :ARG0-of (d2 / develop-02 
                                          :ARG1 (m / model 
                                                :mod (m2 / mouse) 
                                                :prep-with (d / deficiency 
                                                      :ARG1-of (s / same-01) 
                                                      :mod (e / enzyme)))))))) 
            :location (m3 / mouse) 
            :mod (s2 / stem)))

# ::snt This mouse model of MCAD deficiency develops many of the same disease characteristics found in affected children .
# ::tok This mouse model of MCAD deficiency develops many of the same disease characteristics found in affected children .
# ::alignments 16-17|0.0 15-16|0 13-14|0.1 12-13|0.1.0.2+0.1.0 11-12|0.1.0.2.0 10-11|0.1.0.0 7-8|0.1.0.3 6-7|0.1.0.1 5-6|0.1.0.1.0.2 4-5|0.1.0.1.0.2.0 2-3|0.1.0.1.0 1-2|0.1.0.1.0.1 0-1|0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:49.140
(a / affect-01 
      :ARG1 (c / child) 
      :ARG2-of (f / find-01 
            :ARG1 (t / thing 
                  :ARG1-of (s / same-01) 
                  :ARG1-of (d2 / develop-02 
                        :ARG0 (m3 / model 
                              :mod (t2 / this) 
                              :mod (m4 / mouse) 
                              :mod (d3 / deficiency 
                                    :mod (m2 / MCAD)))) 
                  :ARG2-of (c2 / characteristic-02 
                        :ARG1 (d / disease)) 
                  :quant (m / many))))

# ::snt The MCAD-deficient mouse model shows a high rate of newborn loss , intolerance to cold , and the characteristic biochemical changes in the blood , tissues , and urine that are very similar to those found in the human disease counterpart .
# ::tok The MCAD-deficient mouse model shows a high rate of newborn loss , intolerance to cold , and the characteristic biochemical changes in the blood , tissues , and urine that are very similar to those found in the human disease counterpart .
# ::alignments 40-41|0.2.0.3.1.2+0.2.0.3.1 39-40|0.2.0.3.1.0 38-39|0.2.0.3.1.1 35-36|0.2.0.3 32-33|0.2.1.0.0.0 31-32|0.2.1.0.0.0.0 28-29|0.2.1 27-28|0.2.1.0 25-26|0.2.1.0.1 23-24|0.2.1.0.0 20-21|0.2.0 19-20|0.2.0.1 18-19|0.2.0.2 16-17|0.2 14-15|0.2.0.3.0 12-13|0.2.0.0 10-11|0.1.1 9-10|0.1.1.0 7-8|0.1 6-7|0.1.0 4-5|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:50.683
(s / show-01 
      :ARG0 (m / model 
            :mod (m2 / mouse)) 
      :ARG1 (r2 / rate 
            :ARG1-of (h2 / high-02) 
            :mod (l / loss 
                  :mod (n / newborn))) 
      :op1-of (a2 / and 
            :op2 (c2 / change-01 
                  :ARG0 (i / intolerance) 
                  :ARG1 (b2 / biochemical) 
                  :ARG1-of (c3 / characteristic-02) 
                  :ARG1-of (f / find-01 
                        :ARG0 (c4 / cold) 
                        :location (c / counterpart 
                              :mod (d / disease) 
                              :mod (h / human) 
                              :wiki "Abdel_Rahman_Shalgham"))) 
            :op3 (u / urine 
                  :op3-of (a / and 
                        :op1 (b / blood 
                              :ARG1-of (r / resemble-01 
                                    :degree (v / very))) 
                        :op2 (t / tissue)))))

# ::snt The MCAD-deficient mouse model will allow researchers to better understand disease mechanisms so that new preventive measures or therapies can be developed .
# ::tok The MCAD-deficient mouse model will allow researchers to better understand disease mechanisms so that new preventive measures or therapies can be developed .
# ::alignments 21-22|0.1 19-20|0.1.0 18-19|0.3.0 17-18|0.3 16-17|0 15-16|0.0 14-15|0.2 12-13|0.1.0.0 11-12|0.1.0.0.0.1 10-11|0.1.0.0.0.1.0 9-10|0.1.0.0.0 8-9|0.1.0.0.0.3 6-7|0.1.0.0.0.0.0+0.1.0.0.0.0 5-6|0.1.0.0.0.2 3-4|0.1.0.0.0.2.0 2-3|0.1.0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:51.296
(m / measure-02 
      :ARG1 (p2 / prevent-01) 
      :ARG1-of (d / develop-02 
            :ARG1-of (p / possible-01 
                  :ARG1-of (c / cause-01 
                        :ARG0 (u / understand-01 
                              :ARG0 (p3 / person 
                                    :ARG0-of (r / research-01)) 
                              :ARG1 (m2 / mechanism 
                                    :mod (d2 / disease)) 
                              :ARG1-of (a / allow-01 
                                    :ARG0 (m3 / model 
                                          :mod (m4 / mouse))) 
                              :degree (g / good))))) 
      :mod (n / new) 
      :op1-of (o / or 
            :op2 (t / therapi)))

# ::snt Mitochondrial -oxidation of fatty acids provides energy , especially during fasting conditions .
# ::tok Mitochondrial -oxidation of fatty acids provides energy , especially during fasting conditions .
# ::alignments 11-12|0.0.0.1 10-11|0.0.0.1.0 8-9|0.1 6-7|0.0.0.0 5-6|0.0.0 4-5|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:51.396
(f2 / fatty 
      :mod-of (a / acid 
            :ARG0-of (p / provide-01 
                  :ARG1 (e2 / energy) 
                  :time (c / condition 
                        :mod (f / fast)))) 
      :op1-of (e / especially))

# ::snt Fatty acid oxidation occurs in mitochondria and consists of a repeating circuit of four sequential steps .
# ::tok Fatty acid oxidation occurs in mitochondria and consists of a repeating circuit of four sequential steps .
# ::alignments 15-16|0.0 14-15|0.0.0 13-14|0.1.0 11-12|0.2.1 10-11|0.2.1.0 7-8|0.2 6-7|0 5-6|0.1.1 3-4|0.1 2-3|0.2.0 1-2|0.2.0.0 0-1|0.2.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:51.572
(a / and 
      :ARG2-of (s / step-01 
            :ARG1 (s2 / sequential)) 
      :op1 (o / occur-01 
            :ARG0 4 
            :ARG1 (m / mitochondrion)) 
      :op2 (c2 / consist-01 
            :ARG1 (o2 / oxidation 
                  :mod (a2 / acid) 
                  :mod (f / fatty)) 
            :ARG2 (c / circuit 
                  :ARG1-of (r / repeat-01))))

# ::snt There are four straight-chain acyl-CoA dehydrogenases involved in the initial step .
# ::tok There are four straight-chain acyl-CoA dehydrogenases involved in the initial step .
# ::alignments 10-11|0.0.0 9-10|0.0.0.0 6-7|0.0 5-6|0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:51.607
(d / dehydrogenas 
      :ARG1-of (i2 / involve-01 
            :ARG2 (s / step 
                  :mod (i / initial))) 
      :quant 4)

# ::snt Medium-chain acyl-CoA dehydrogenase ( MCAD ) ( the mouse gene is Acadm , whereas the protein is MCAD ) , specifically , is responsible for catalyzing the dehydrogenation of medium-chain length ( C6 -- C12 ) fatty acid thioesters [ 1 ] .
# ::tok Medium-chain acyl-CoA dehydrogenase ( MCAD ) ( the mouse gene is Acadm , whereas the protein is MCAD ) , specifically , is responsible for catalyzing the dehydrogenation of medium-chain length ( C6 -- C12 ) fatty acid thioesters [ 1 ] .
# ::alignments 40-41|0.0.1.1 38-39|0.0.2 37-38|0.0.1.2 36-37|0.0.1.2.0 30-31|0.0.1.0.1.0 27-28|0.0.1.0.1 25-26|0.0.1.0 23-24|0.0.1 20-21|0.0 15-16|0 13-14|0.0.0 11-12|0.0.1.0.2.0.0.0.0+0.0.1.0.2.0.0.0+0.0.1.0.2.0.0 9-10|0.0.1.0.2.0 8-9|0.0.1.0.2 2-3|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:52.073
(p / protein 
      :ARG1-of (s / specific-02 
            :ARG2 (w / whereas) 
            :manner-of (r / responsible-01 
                  :ARG1 (c / catalyze-01 
                        :ARG0 (d2 / dehydrogenase) 
                        :ARG1 (d / dehydrogenation 
                              :mod (l / length)) 
                        :op1-of (m / mouse 
                              :mod-of (g / gene 
                                    :domain-of (t2 / thing 
                                          :name (n / name 
                                                :op1 "Acadm"))))) 
                  :op1-of 1 
                  :op1-of (a / acid 
                        :degree (f / fatty))) 
            :op1-of (t / thioester)))

# ::snt Acadm is transcribed in the nucleus , translated in the cytosol , and translocated into the mitochondrial matrix [ 2 -- 4 ] .
# ::tok Acadm is transcribed in the nucleus , translated in the cytosol , and translocated into the mitochondrial matrix [ 2 -- 4 ] .
# ::alignments 21-22|0.0.1.0.1 19-20|0.0.1.0.0 17-18|0.0.0 12-13|0 10-11|0.0.2 7-8|0.0 5-6|0.0.1.0.2 2-3|0.0.1.0 0-1|0.0.1.1.0+0.0.1.1+0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:52.499
(a / and 
      :op1 (t / translate-01 
            :ARG0 (m / matrix) 
            :ARG1 (t3 / thing 
                  :ARG1-of (t2 / transcribe-01 
                        :ARG0 2 
                        :ARG2 4 
                        :location (n / nucleus)) 
                  :name (n2 / name 
                        :op1 "Acadm")) 
            :location (c / cytosol)))

# ::snt Once inside the mitochondrial matrix , the MCAD monomers are assembled into homotetramers to gain enzymatic activity [ 4 ] .
# ::tok Once inside the mitochondrial matrix , the MCAD monomers are assembled into homotetramers to gain enzymatic activity [ 4 ] .
# ::alignments 18-19|0.0.1 16-17|0.3.0 15-16|0.3.0.0 14-15|0.3 12-13|0.2 10-11|0 8-9|0.1 4-5|0.0.0 3-4|0.0.0.0 1-2|0.0 0-1|0.4 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:52.644
(a2 / assemble-01 
      :ARG0 (i / inside 
            :op1 (m2 / matrix 
                  :mod (m3 / mitochondrial)) 
            :poss-of 4) 
      :ARG1 (m / monomer) 
      :ARG2 (h / homotetramer) 
      :purpose (g / gain-02 
            :ARG1 (a / activity-06 
                  :ARG0 (e / enzymatic))) 
      :time (o / once))

# ::snt MCAD activity is essential for complete fatty acid oxidation .
# ::tok MCAD activity is essential for complete fatty acid oxidation .
# ::alignments 8-9|0.0.1 7-8|0.0.1.1 6-7|0.0.1.1.0 5-6|0.0.1.0 3-4|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:52.714
(e / essential 
      :domain (a2 / activity-06 
            :ARG0 (m / MCAD) 
            :ARG1 (o / oxidation 
                  :ARG1-of (c / complete-02) 
                  :mod (a / acid 
                        :mod (f / fatty)))))

# ::snt Inherited MCAD deficiency exists in humans as an autosomal recessive disorder .
# ::tok Inherited MCAD deficiency exists in humans as an autosomal recessive disorder .
# ::alignments 10-11|0.1.1 9-10|0.1.1.0 8-9|0.1.1.1 5-6|0.1.0 3-4|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:52.834
(d2 / deficiency 
      :ARG1-of (i / inherit-01) 
      :ARG1-of (e / exist-01 
            :location (h / human) 
            :prep-as (d / disord 
                  :mod (r / recessive) 
                  :mod (a / autosomal))))

# ::snt MCAD deficiency was first described in 1982 -- 1983 [ 5 -- 7 ] and has been described in numerous patients [ 1,8 -- 11 ] .
# ::tok MCAD deficiency was first described in 1982 -- 1983 [ 5 -- 7 ] and has been described in numerous patients [ 1,8 -- 11 ] .
# ::alignments 24-25|0.0.0 20-21|0.1.1.0.1+0.1.1.0+0.1.1 19-20|0.1.1.1 17-18|0.1 14-15|0 12-13|0.1.1.0.0 10-11|0.1.2 8-9|0.1.0.0+0.1.0 6-7|0.0.2.0+0.0.2 4-5|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:53.202
(a / and 
      :op1 (d4 / describe-01 
            :ARG0 11 
            :ARG1 (d5 / deficiency) 
            :time (d3 / date-entity 
                  :year 1982)) 
      :op2 (d / describe-01 
            :ARG0 (d2 / date-entity 
                  :year 1983) 
            :ARG1 (p / person 
                  :ARG0-of (h / have-rel-role-91 
                        :ARG1 7 
                        :ARG2 (p2 / patient)) 
                  :quant (n / numerous)) 
            :ARG2 5))

# ::snt The carrier frequency in the Caucasian population has been estimated to be between 1 in 50 to 80 with an incidence of clinical disease expected at around 1 in 15,000 [ 1,9,12 ] .
# ::tok The carrier frequency in the Caucasian population has been estimated to be between 1 in 50 to 80 with an incidence of clinical disease expected at around 1 in 15,000 [ 1,9,12 ] .
# ::alignments 27-28|0.3.2 26-27|0.3.3 24-25|0 23-24|0.1 22-23|0.1.0 20-21|0.1.1 17-18|0.3.0 15-16|0.2 13-14|0.0 9-10|0.3 6-7|0.3.1.0 5-6|0.3.1.0.0.1+0.3.1.0.0.0.0+0.3.1.0.0.0+0.3.1.0.0 2-3|0.3.1 1-2|0.3.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:53.593
(e / expect-01 
      :ARG0 1 
      :ARG1 (d / disease 
            :mod (c / clinical) 
            :poss-of (i / incidence)) 
      :ARG2 50 
      :purpose (e2 / estimate-01 
            :ARG0 80 
            :ARG1 (f / frequency 
                  :location (p / population 
                        :mod (e3 / ethnic-group 
                              :name (n / name 
                                    :op1 "Caucasian") 
                              :wiki "Caucasian_race")) 
                  :mod (c2 / carrier)) 
            :ARG2 1 
            :op1-of (a / around)))

# ::snt MCAD-deficient patients exhibit clinical episodes often associated with fasting .
# ::tok MCAD-deficient patients exhibit clinical episodes often associated with fasting .
# ::alignments 8-9|0.1.0.0 6-7|0.1.0 5-6|0.1.0.1 4-5|0.1 3-4|0.1.1 2-3|0 1-2|0.0.0.0+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:53.657
(e2 / exhibit-01 
      :ARG0 (p / person 
            :ARG0-of (h / have-rel-role-91 
                  :ARG2 (p2 / patient))) 
      :ARG1 (e / episod 
            :ARG1-of (a / associate-01 
                  :ARG2 (f / fast) 
                  :frequency (o / often)) 
            :mod (c / clinical)))

# ::snt Patients manifest disease usually during the first two years of life .
# ::tok Patients manifest disease usually during the first two years of life .
# ::alignments 10-11|0.2 8-9|0.2.0.1+0.2.0 7-8|0.2.0.0 3-4|0.3 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:53.722
(m / manifest-01 
      :ARG0 (p / patient) 
      :ARG1 (d / disease) 
      :duration (l / life 
            :duration (t / temporal-quantity 
                  :quant 2 
                  :unit (y / year))) 
      :mod (u / usual))

# ::snt Symptoms include hypoketotic hypoglycemia and Reye-like episodes [ 1 ] .
# ::tok Symptoms include hypoketotic hypoglycemia and Reye-like episodes [ 1 ] .
# ::alignments 8-9|0.0 6-7|0.1.1 4-5|0.1 3-4|0.1.0 1-2|0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:54.262
(i / include-01 
      :ARG0 1 
      :ARG1 (a / and 
            :op1 (h / hypoglycemia) 
            :op2 (e / episod)) 
      :ARG2 (s / symptom))

# ::snt It is estimated that approximately 59 % of patients presenting clinically between 15 to 26 mo of age die during their first clinical episode [ 1 ] .
# ::tok It is estimated that approximately 59 % of patients presenting clinically between 15 to 26 mo of age die during their first clinical episode [ 1 ] .
# ::alignments 25-26|0.0 23-24|0.3 22-23|0.1 18-19|0.2 17-18|0 14-15|0.2.1.1.1.0 12-13|0.2.1.1.1.2 10-11|0.2.1.1.0 9-10|0.2.1.1 8-9|0.2.1.0.0+0.2.1.0+0.2.1 6-7|0.2.0.1 5-6|0.2.0.0 4-5|0.2.0 2-3|0.2.1.1.1 0-1|0.2.1.1.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:55.776
(a / age-01 
      :ARG0 1 
      :ARG1 (c / clinical) 
      :manner-of (d / die-01 
            :ARG0 (a2 / approximately 
                  :op1 59 
                  :op2 (p4 / percentage-entity)) 
            :ARG1 (p2 / person 
                  :ARG0-of (h / have-rel-role-91 
                        :ARG2 (p3 / patient)) 
                  :ARG0-of (p / present-01 
                        :ARG1 (c2 / clinically) 
                        :ARG2 (e2 / estimate-01 
                              :ARG0 26 
                              :ARG1 (i / it) 
                              :ARG2 15)))) 
      :poss-of (e / episode))

# ::snt The pathogenesis of the wide range of metabolic disturbances in MCAD deficiency is poorly understood and certain aspects of patient management are controversial .
# ::tok The pathogenesis of the wide range of metabolic disturbances in MCAD deficiency is poorly understood and certain aspects of patient management are controversial .
# ::alignments 22-23|0.3.0 20-21|0.2.0.0.0 19-20|0.2.0.0.0.0.0.0+0.2.0.0.0.0.0+0.2.0.0.0.0 17-18|0.2.0.0 16-17|0.2.0 15-16|0.3 14-15|0 13-14|0.2 11-12|0.0.0.1 8-9|0.0 7-8|0.0.1 5-6|0.0.0 4-5|0.0.0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:56.374
(u / understand-01 
      :ARG0 (d2 / disturbanc 
            :ARG1-of (r / range-01 
                  :ARG2 (w / wide-02) 
                  :location (d / deficiency)) 
            :mod (m2 / metabolic)) 
      :ARG1 (p4 / pathogenesi) 
      :manner (p3 / poor 
            :mod-of (c2 / certain 
                  :mod-of (a / aspect 
                        :domain (m / manage-01 
                              :ARG1 (p / person 
                                    :ARG0-of (h / have-rel-role-91 
                                          :ARG2 (p2 / patient))))))) 
      :op1-of (a2 / and 
            :op2 (c / controversy)))

# ::snt An animal model for MCAD deficiency is essential to better understand the pathogenesis of MCAD deficiency and to develop better management regimens for human patients .
# ::tok An animal model for MCAD deficiency is essential to better understand the pathogenesis of MCAD deficiency and to develop better management regimens for human patients .
# ::alignments 24-25|0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 23-24|0.1.0.0.1 21-22|0.1.0 20-21|0.0.1.0 19-20|0.1.0.1 18-19|0.1 16-17|0 15-16|0.0.1.1 12-13|0.0.1 10-11|0.0 9-10|0.0.3 7-8|0.0.2 5-6|0.0.0 2-3|0.0.2.0 1-2|0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:57.328
(a / and 
      :op1 (u / understand-01 
            :ARG0 (d3 / deficiency) 
            :ARG1 (p3 / pathogenesi 
                  :ARG1-of (m / manage-01) 
                  :mod (d2 / deficiency)) 
            :domain-of (e / essential 
                  :domain (m2 / model 
                        :mod (a2 / animal))) 
            :manner (g2 / good)) 
      :op2 (d / develop-02 
            :ARG1 (r / regimen 
                  :beneficiary (p / person 
                        :ARG0-of (h / have-rel-role-91 
                              :ARG2 (p2 / patient)) 
                        :mod (h2 / human)) 
                  :mod (g / good))))

# ::snt To gain further insight into the mechanisms of this disease , we developed a mouse model of MCAD deficiency by gene targeting in embryonic stem ( ES ) cells ( for reviews [ 13,14 ] ) .
# ::tok To gain further insight into the mechanisms of this disease , we developed a mouse model of MCAD deficiency by gene targeting in embryonic stem ( ES ) cells ( for reviews [ 13,14 ] ) .
# ::alignments 31-32|0.0.2.3.1.0 28-29|0.0.2.3.1 26-27|0 24-25|0.0.2.3.1.1 23-24|0.0.2.2 21-22|0.0.2.3 20-21|0.0.2.3.0 18-19|0.0.2.1.1 15-16|0.0.2.1 14-15|0.0.2.1.0 12-13|0.0.2 11-12|0.0.2.0 9-10|0.0.1.0 8-9|0.0.1.0.0 6-7|0.0.1 3-4|0.0.0 2-3|0.0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:58.123
(e / e 
      :ARG0-of (g2 / gain-02 
            :ARG1 (i / insight 
                  :mod (f / further)) 
            :ARG2 (m3 / mechanism 
                  :poss (d3 / disease 
                        :mod (t2 / this))) 
            :purpose-of (d2 / develop-02 
                  :ARG0 (w / we) 
                  :ARG1 (m / model 
                        :mod (m2 / mouse) 
                        :mod (d / deficiency)) 
                  :ARG2 (e2 / embryonic) 
                  :manner (t / target-01 
                        :ARG0 (g / gene) 
                        :time (c / cell 
                              :ARG2-of (r / review-02) 
                              :mod (s / stem))))))

# ::snt The mutant mice had many relevant features characteristic of the disease found in human MCAD-deficient patients , along with some unexpected findings .
# ::tok The mutant mice had many relevant features characteristic of the disease found in human MCAD-deficient patients , along with some unexpected findings .
# ::alignments 21-22|0.2.0.0.0.0+0.2.0.0.0.0.0 20-21|0.2.0.0.0.0.0.0.0+0.2.0.0.0.0.0.0 19-20|0.2.0.0.0.0.0.1 17-18|0.3 15-16|0.2.0.0.0.1.0+0.2.0.0.0.1+0.2.0.0.0 13-14|0.2.0.0.0.2 11-12|0.2.0.0 10-11|0.2.0 7-8|0.2 6-7|0 5-6|0.1 4-5|0.4 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:58.731
(f3 / feature-01 
      :ARG1 (m2 / mouse 
            :mod (m3 / mutant)) 
      :ARG1-of (r / relevant-01) 
      :ARG1-of (c / characteristic-02 
            :ARG2 (d / disease 
                  :ARG0-of (f2 / find-01 
                        :ARG1 (p / person 
                              :ARG0-of (f / find-01 
                                    :ARG1 (t / thing 
                                          :ARG1-of (e / expect-01 
                                                :polarity -) 
                                          :quant (s / some))) 
                              :ARG0-of (h / have-rel-role-91 
                                    :ARG2 (p2 / patient)) 
                              :mod (h2 / human))))) 
      :location (a / along) 
      :quant (m / many))

# ::snt Gene Targeting and Generation of MCAD-Deficient Mice .
# ::tok Gene Targeting and Generation of MCAD-Deficient Mice .
# ::alignments 5-7|0.2.0.1+0.2.0.0+0.2.0+0.2 3-4|0.1 2-3|0 0-2|0.0.0.1+0.0.0.0+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:58.791
(a / and 
      :op1 (p / person 
            :name (n2 / name 
                  :op1 "Gene" 
                  :op2 "Targeting")) 
      :op2 (g / generation) 
      :op3 (t / thing 
            :name (n / name 
                  :op1 (m / MCAD-Deficient) 
                  :op2 (m2 / Mice))))

# ::snt MCAD insertion vector ( MCAD IV2 ) was designed to undergo gap repair of the 1.3-kb deleted region upon homologous recombination in 129P2 ( 129P2/OlaHsd ) ES cells E14 -- 1 .
# ::tok MCAD insertion vector ( MCAD IV2 ) was designed to undergo gap repair of the 1.3-kb deleted region upon homologous recombination in 129P2 ( 129P2/OlaHsd ) ES cells E14 -- 1 .
# ::alignments 30-31|0.0.0.0.0 28-29|0.0.0.0.1.0 27-28|0.0.0.0.1.0.0 26-27|0.0.0.0.1.0.0.0 20-21|0.0.0.0.1.1 19-20|0 17-18|0.0.0.0.1.2.0 16-17|0.0.0.0.1.2.0.0 12-13|0.0.0.0.1.2 11-12|0.0.0.0.1.2.1 10-11|0.0.0.0.1 8-9|0.0.0.0 4-6|0.0.0.0.1.2.0.0.0.0.1+0.0.0.0.1.2.0.0.0.0.0+0.0.0.0.1.2.0.0.0.0+0.0.0.0.1.2.0.0.0 2-3|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:44:59.267
(h / homologou 
      :ARG0-of (i2 / insert-01 
            :ARG1 (v / vector 
                  :ARG1-of (d2 / design-01 
                        :ARG0 1 
                        :ARG3 (u / undergo-28 
                              :ARG0 (e / E14 
                                    :mod (c / cell 
                                          :mod (e2 / e))) 
                              :ARG1 (r / recombination) 
                              :ARG2 (r3 / repair-01 
                                    :ARG0 (r2 / region 
                                          :ARG1-of (d / delete-01 
                                                :ARG0 (t / thing 
                                                      :name (n / name 
                                                            :op1 (m / MCAD) 
                                                            :op2 (i / IV2))))) 
                                    :ARG1 (g / gap)))))))

# ::snt Correct targeting of the MCAD locus resulted in a duplication of exons 8 , 9 , and 10 and integration of flanking plasmid and Neo sequences ( Figure 1A ) .
# ::tok Correct targeting of the MCAD locus resulted in a duplication of exons 8 , 9 , and 10 and integration of flanking plasmid and Neo sequences ( Figure 1A ) .
# ::alignments 27-28|0.1.1.0.0.1.0 25-26|0.1.1.0.0.1.1.0.0.0 24-25|0.1.1.0.0.1.1.0.0.1.0+0.1.1.0.0.1.1.0.0.1+0.1.1.0.0.1.1.0.0 23-24|0.1.1.0.0.1.1.0 22-23|0.1.1.0.0.1.1 21-22|0.1.1.0.0.0 19-20|0.1.1.0.0.1 18-19|0.1.1.0.0 17-18|0.1.1.1 16-17|0.1.0 14-15|0.1.1.0.0.0.1 12-13|0.1.1.0.0.0.0 11-12|0.1.1.0 9-10|0.2 6-7|0 5-6|0.0 1-2|0.1 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:00.446
(r / result-01 
      :ARG0 (l / locu) 
      :ARG1 (t2 / target-01 
            :ARG1 (a3 / and) 
            :ARG1-of (c / correct-01 
                  :ARG0 (e / exon 
                        :op1-of (a2 / and 
                              :ARG1-of (f2 / flank-01 
                                    :ARG0 8 
                                    :ARG2 9) 
                              :op2 (i / integrate-01 
                                    :ARG0 (f / figure) 
                                    :ARG1 (p / plasmid 
                                          :op1-of (a / and 
                                                :op2 (t / thing 
                                                      :mod-of (s / sequence) 
                                                      :name (n / name 
                                                            :op1 "Neo"))))))) 
                  :op1-of 10)) 
      :ARG2 (d / duplication))

# ::snt The insertion vector was designed to duplicate exon 8 , 9 , and 10 at the MCAD locus .
# ::tok The insertion vector was designed to duplicate exon 8 , 9 , and 10 at the MCAD locus .
# ::alignments 17-18|0.0.1.0.1.1 13-14|0.0.2 12-13|0 10-11|0.0.1.0.0 8-9|0.0.0 7-8|0.0.1.0.1.0 6-7|0.0.1.0.1 4-5|0.0.1.0 2-3|0.0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:00.598
(a / and 
      :op1 (i / insert-01 
            :ARG2 8 
            :mod-of (v / vector 
                  :ARG1-of (d2 / design-01 
                        :ARG0 9 
                        :ARG3 (d / duplicate-01 
                              :ARG1 (e / exon) 
                              :time (l / locu)))) 
            :op1-of 10))

# ::snt Translation of the duplicated exon 8 region results in the formation of premature stop codons resulting in truncation of the MCAD monomer .
# ::tok Translation of the duplicated exon 8 region results in the formation of premature stop codons resulting in truncation of the MCAD monomer .
# ::alignments 21-22|0.1.1 17-18|0.1.0.1 15-16|0.1.0 14-15|0.1.0.0 13-14|0.1.0.0.0 12-13|0.1.0.0.0.0 10-11|0.1 7-8|0 6-7|0.0.0 5-6|0.0.0.0 4-5|0.1.2.0 3-4|0.1.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:00.849
(r2 / result-01 
      :ARG1 (t2 / translate-01 
            :ARG0 (r3 / region 
                  :quant 8)) 
      :ARG2 (f / form-01 
            :ARG0 (r / result-01 
                  :ARG1 (c / codon 
                        :ARG1-of (s / stop-01 
                              :ARG0 (p / premature))) 
                  :ARG2 (t / truncation)) 
            :ARG1 (m / monom) 
            :ARG2-of (d / duplicate-01 
                  :ARG1 (e / exon))))

# ::snt Specifically , the first premature stop codon arises after translation of only seven amino acids from the duplicated exon 8 .
# ::tok Specifically , the first premature stop codon arises after translation of only seven amino acids from the duplicated exon 8 .
# ::alignments 19-20|0.0 18-19|0.2.0.0 17-18|0.2.0 14-15|0.3.0.0.0 13-14|0.3.0.0.0.0 12-13|0.3.0.0.0.1 11-12|0.3.0.0.0.2 9-10|0.3.0.0+0.3.0 8-9|0.3 7-8|0 6-7|0.1 5-6|0.1.0 4-5|0.1.0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:01.025
(a4 / arise-02 
      :ARG0 8 
      :ARG1 (c / codon 
            :ARG1-of (s / stop-01 
                  :ARG0 (p / premature))) 
      :manner (s2 / specific-02 
            :ARG1 (d / duplicate-01 
                  :ARG1 (e / exon))) 
      :time (a3 / after 
            :op1 (t / thing 
                  :ARG2-of (t2 / translate-01 
                        :ARG1 (a / acid 
                              :mod (a2 / amino) 
                              :quant 7 
                              :quant (o / only))))))

# ::snt The resulting MCAD monomer is missing the C-terminal domain -helixes that are responsible for making intersubunit contacts to generate the functional MCAD homotetramer .
# ::tok The resulting MCAD monomer is missing the C-terminal domain -helixes that are responsible for making intersubunit contacts to generate the functional MCAD homotetramer .
# ::alignments 22-23|0.1.1.0 20-21|0.1.1.0.0 18-19|0.1.1 16-17|0.1 15-16|0.1.0 12-13|0 9-10|0.0 8-9|0.1.1.1.0.0.0 5-6|0.1.1.1.0.0 3-4|0.1.1.1.0 1-2|0.1.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:01.239
(r / responsible-01 
      :ARG1 (- / -helix) 
      :ARG2 (c / contact-01 
            :ARG0 (i / intersubunit) 
            :ARG1 (g / generate-01 
                  :ARG1 (h / homotetram 
                        :mod (f / functional)) 
                  :ARG2 (r2 / result-01 
                        :ARG1 (m2 / monom 
                              :ARG0-of (m / miss-01 
                                    :ARG1 (d / domain)))))))

# ::snt Strategy for Disruption of the Mouse Acadm Gene .
# ::tok Strategy for Disruption of the Mouse Acadm Gene .
# ::alignments 5-8|0.0.0.0.2+0.0.0.0.1+0.0.0.0.0+0.0.0.0+0.0.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:01.260
(s / strategy 
      :beneficiary (d / disruption 
            :poss (p / person 
                  :name (n / name 
                        :op1 "Mouse" 
                        :op2 "Acadm" 
                        :op3 "Gene"))))

# ::snt ( A ) The MCAD IV2 insertion targeting vector with a deleted 1.3-kb region encompassing exon 10 and flanking sequences .
# ::tok ( A ) The MCAD IV2 insertion targeting vector with a deleted 1.3-kb region encompassing exon 10 and flanking sequences .
# ::alignments 19-20|0.1.0 18-19|0.1 17-18|0 16-17|0.0.0.1.0.1 15-16|0.0.1 14-15|0.0 13-14|0.0.0 11-12|0.0.0.0 8-9|0.0.0.1.1 7-8|0.0.0.1 6-7|0.0.0.1.0 4-6|0.0.0.1.0.0.0.1+0.0.0.1.0.0.0.0+0.0.0.1.0.0.0+0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:01.858
(a / and 
      :op1 (e2 / encompass-01 
            :ARG0 (r / region 
                  :ARG1-of (d / delete-01) 
                  :ARG2-of (t / target-01 
                        :ARG0 (i / insert-01 
                              :ARG1 (t2 / thing 
                                    :name (n / name 
                                          :op1 (m / MCAD) 
                                          :op2 (i2 / IV2))) 
                              :op1-of 10) 
                        :ARG1 (v / vector))) 
            :ARG1 (e / exon)) 
      :op2 (f / flank-01 
            :ARG1 (s / sequence)))

# ::snt MCAD IV2 undergoes gap repair upon homologous recombination at the endogenous Acadm locus resulting in a duplication of exons 8 , 9 , and 10 at the disrupted allele .
# ::tok MCAD IV2 undergoes gap repair upon homologous recombination at the endogenous Acadm locus resulting in a duplication of exons 8 , 9 , and 10 at the disrupted allele .
# ::alignments 28-29|0.0.0.0.0.1.2.1 27-28|0.0.0.0.0.1.2 24-25|0.0.0.0.0.3 23-24|0 21-22|0.0.0.0.0.1.0 19-20|0.0.0.0.0.2 18-19|0.1 16-17|0.0 13-14|0.0.0 12-13|0.0.0.1 11-12|0.0.0.1.0.0.0+0.0.0.1.0.0+0.0.0.1.0 10-11|0.0.0.1.1 7-8|0.0.0.0 6-7|0.0.0.0.0.1.2.0 4-5|0.0.0.0.0.1 3-4|0.0.0.0.0.1.1 2-3|0.0.0.0.0 0-2|0.0.0.0.0.0.0.1+0.0.0.0.0.0.0.0+0.0.0.0.0.0.0+0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:02.447
(a2 / and 
      :op1 (d2 / duplication 
            :ARG2-of (r / result-01 
                  :ARG0 (r2 / recombination 
                        :time-of (u / undergo-28 
                              :ARG1 (t2 / thing 
                                    :name (n2 / name 
                                          :op1 (m / MCAD) 
                                          :op2 (i / IV2))) 
                              :ARG2 (r3 / repair-01 
                                    :ARG0 9 
                                    :ARG1 (g / gap) 
                                    :ARG2 (d / disrupt-01 
                                          :ARG0 (h / homologou) 
                                          :ARG1 (a / allele))) 
                              :op1-of 8 
                              :op1-of 10)) 
                  :ARG1 (l / locu 
                        :mod (t / thing 
                              :name (n / name 
                                    :op1 "Acadm")) 
                        :mod (e2 / endogenou)))) 
      :op2 (e / exon))

# ::snt ( B ) Southern blot analysis of EcoRI-digested genomic DNA from ES cells screened by PCR .
# ::tok ( B ) Southern blot analysis of EcoRI-digested genomic DNA from ES cells screened by PCR .
# ::alignments 13-14|0 12-13|0.1.1.1 11-12|0.1.1.1.0 9-10|0.1.1 7-8|0.1.1.0.0.0+0.1.1.0.0+0.1.1.0 5-6|0.1 4-5|0.1.2 3-4|0.1.0.0.0+0.1.0.0+0.1.0 1-2|0.0.1+0.0.0.0+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:02.828
(s / screen-01 
      :ARG0 (l / location 
            :name (n3 / name 
                  :op1 "B") 
            :wiki -) 
      :ARG1 (a / analyze-01 
            :ARG0 (t2 / thing 
                  :name (n2 / name 
                        :op1 "Southern")) 
            :ARG1 (d / DNA 
                  :quant (t / thing 
                        :name (n / name 
                              :op1 "EcoRI-digested")) 
                  :source (c / cell 
                        :mod (e / e))) 
            :ARG1-of (b / blot-01)))

# ::snt Probe A , a DNA fragment consisting of a portion of exon 10 that is not present in the targeting vector , hybridizes to an endogenous 3.1-kb fragment and , upon homologous recombination , to a 13.2-kb fragment .
# ::tok Probe A , a DNA fragment consisting of a portion of exon 10 that is not present in the targeting vector , hybridizes to an endogenous 3.1-kb fragment and , upon homologous recombination , to a 13.2-kb fragment .
# ::alignments 37-38|0.0 32-33|0.0.1.2.0.2 31-32|0.0.1.0 28-29|0 27-28|0.0.1.2.1 25-26|0.0.1.2.1.1 22-23|0.0.1.2 20-21|0.0.1.1 19-20|0.0.1 16-17|0.0.1.1.0 15-16|0.0.1.1.0.0 12-13|0.0.0 11-12|0.0.1.2.0.1.0 9-10|0.0.1.2.0.1 6-7|0.0.1.2.0 5-6|0.0.1.2.0.0 4-5|0.0.1.2.0.0.0 0-2|0.0.1.2.1.0.0.1+0.0.1.2.1.0.0.0+0.0.1.2.1.0.0+0.0.1.2.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:04.001
(a / and 
      :op1 (f / fragment-01 
            :ARG0 10 
            :ARG1 (t / target-01 
                  :ARG0 (h / homologou) 
                  :ARG1 (v / vector 
                        :compared-to-of (p / present 
                              :polarity -)) 
                  :condition (h2 / hybridize-01 
                        :ARG0 (c / consist-01 
                              :ARG1 (f3 / fragment-01 
                                    :ARG1 (d / DNA)) 
                              :ARG2 (p2 / portion 
                                    :quant-of (e2 / exon)) 
                              :op1-of (r / recombination)) 
                        :ARG1 (f2 / fragment-01 
                              :ARG0 (t2 / thing 
                                    :name (n / name 
                                          :op1 (p3 / Probe) 
                                          :op2 (a2 / A))) 
                              :mod (e / endogenou))))))

# ::snt Lane 1 represents a wild-type ES cell line , and Lane 2 and 3 represent targeted ES cell lines .
# ::tok Lane 1 represents a wild-type ES cell line , and Lane 2 and 3 represent targeted ES cell lines .
# ::alignments 18-19|0.0.1 17-18|0.0.1.1 15-16|0.0.1.0 14-15|0.0 13-14|0.0.0 12-13|0 11-12|0.0.1.0.0 9-10|0.0.2 7-8|0.0.2.1.1 6-7|0.0.2.1.1.0 5-6|0.0.2.1.1.1 2-3|0.0.2.1 1-2|0.0.2.1.0 0-1|0.0.2.0.0.0+0.0.2.0.0+0.0.2.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:04.286
(a / and 
      :op1 (r / represent-01 
            :ARG0 3 
            :ARG1 (l / line 
                  :ARG1-of (t / target-01 
                        :ARG0 2) 
                  :mod (c / cell)) 
            :op3-of (a2 / and 
                  :op1 (o / organization 
                        :name (n / name 
                              :op1 "Lane")) 
                  :op2 (r2 / represent-01 
                        :ARG0 1 
                        :ARG1 (l2 / line 
                              :mod (c2 / cell) 
                              :mod (e / e))))))

# ::snt ES cell clones were screened by PCR ( data not shown ) and confirmed by Southern blot analysis .
# ::tok ES cell clones were screened by PCR ( data not shown ) and confirmed by Southern blot analysis .
# ::alignments 17-18|0.1.0.0 16-17|0.1.0.0.0 15-16|0.1.0.0.1.0.0+0.1.0.0.1.0+0.1.0.0.1 13-14|0.1.0 12-13|0.1 10-11|0.1.0.0.0.0 9-10|0.1.0.0.0.0.1 8-9|0.1.0.0.0.0.0 4-5|0 2-3|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:04.481
(s2 / screen-01 
      :ARG1 (c2 / clone-01 
            :ARG1 (c3 / cell 
                  :mod (e / e))) 
      :op1-of (a2 / and 
            :op2 (c / confirm-01 
                  :ARG0 (a / analyze-01 
                        :ARG1 (b / blot-01 
                              :ARG1 (s / show-01 
                                    :ARG1 (d / data) 
                                    :polarity -)) 
                        :manner (t / thing 
                              :name (n / name 
                                    :op1 "Southern"))))))

# ::snt Southern blot analysis used an exon 10 probe ( probe A ) , not present in the targeting vector , hybridized to a 13.2-kb band in addition to the 3.1-kb endogenous band indicating targeted insertion of the vector at the Acadm locus ( Figure 1B ) .
# ::tok Southern blot analysis used an exon 10 probe ( probe A ) , not present in the targeting vector , hybridized to a 13.2-kb band in addition to the 3.1-kb endogenous band indicating targeted insertion of the vector at the Acadm locus ( Figure 1B ) .
# ::alignments 43-44|0.0.0.0.1.0.1.0 41-42|0.0.1.0.0.4.0 40-41|0.0.1.0.0.4.1.0+0.0.1.0.0.4.1+0.0.1.0.0.4 37-38|0.0.1.0 34-35|0.0.1 33-34|0.0.1.1 32-33|0.0 31-32|0.0.0 30-31|0.0.1.0.0.2 26-27|0.0.1.0.0.3 24-25|0.0.0.0.1.0.1.1 20-21|0.0.0.0.1.0.1 18-19|0.0.1.0.0 17-18|0.0.1.0.0.0 14-15|0.0.1.0.0.1 13-14|0.0.1.0.0.1.0 9-10|0 7-8|0.0.0.0 6-7|0.0.1.1.0 5-6|0.0.0.0.0 3-4|0.0.0.0.1 2-3|0.0.0.0.1.0 1-2|0.0.0.0.1.0.0 0-1|0.0.0.0.1.0.2.0.0+0.0.0.0.1.0.2.0+0.0.0.0.1.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:05.477
(p2 / probe-01 
      :ARG1 (i2 / indicate-01 
            :ARG0 (b / band 
                  :ARG1-of (p3 / probe-01 
                        :ARG0 (e2 / exon) 
                        :ARG1-of (u / use-01 
                              :ARG0 (a2 / analyze-01 
                                    :ARG1 (b3 / blot-01) 
                                    :ARG1-of (h / hybridize-01 
                                          :ARG0 (f / figure) 
                                          :ARG2 (b2 / band)) 
                                    :manner (t4 / thing 
                                          :name (n2 / name 
                                                :op1 "Southern")))))) 
            :ARG1 (i / insert-01 
                  :ARG1 (v / vector 
                        :op1 (v2 / vector 
                              :ARG1-of (t3 / target-01) 
                              :compared-to-of (p / present 
                                    :polarity -) 
                              :op1-of (e / endogenou) 
                              :op1-of (a / addition) 
                              :op1-of (t / thing 
                                    :mod-of (l / locu) 
                                    :name (n / name 
                                          :op1 "Acadm")))) 
                  :ARG1-of (t2 / target-01 
                        :ARG0 10))))

# ::snt Correctly targeted ES cell clones were microinjected into B6 ( C57BL/6NTac ) blastocysts to generate chimeric mice .
# ::tok Correctly targeted ES cell clones were microinjected into B6 ( C57BL/6NTac ) blastocysts to generate chimeric mice .
# ::alignments 16-17|0.0.0.1.1 15-16|0.0.0.1.1.0 14-15|0.0.0.1 12-13|0.0.0.1.0 4-5|0.0.0 3-4|0.0.0.0 2-3|0.0.0.2 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:05.811
(c4 / correctly 
      :mod-of (t / target-01 
            :ARG1 (c2 / clone-01 
                  :ARG1 (c3 / cell) 
                  :ARG2-of (g / generate-01 
                        :ARG0 (b / blastocyst) 
                        :ARG1 (m / mouse 
                              :mod (c / chimeric))) 
                  :mod (e / e))))

# ::snt Chimeric mice were backcrossed to both 129P2 and B6 inbred mice to produce MCAD + /  and eventually MCAD  /  mice on a B6/129 mixed background .
# ::tok Chimeric mice were backcrossed to both 129P2 and B6 inbred mice to produce MCAD + /  and eventually MCAD  /  mice on a B6/129 mixed background .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:05.813
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The studies described here were conducted exclusively on the B6/129 mixed background compared with littermate controls or B6/129 control groups maintained by intercrosses as were the mutants .
# ::tok The studies described here were conducted exclusively on the B6/129 mixed background compared with littermate controls or B6/129 control groups maintained by intercrosses as were the mutants .
# ::alignments 26-27|0.0.0.0.0 22-23|0 20-21|0.0 19-20|0.0.0 18-19|0.0.0.0 16-17|0.0.0.1 15-16|0.0.0.1.0 12-13|0.0.0.1.0.1 11-12|0.0.0.1.0.0 10-11|0.0.0.1.0.0.1.0 9-10|0.0.0.1.0.0.1.1.0+0.0.0.1.0.0.1.1+0.0.0.1.0.0.1 6-7|0.0.0.1.0.0.0.2 5-6|0.0.0.1.0.0.0 3-4|0.0.0.1.0.0.0.0 2-3|0.0.0.1.0.0.0.1 1-2|0.0.0.1.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:06.361
(i / intercross 
      :ARG0-of (m2 / maintain-01 
            :ARG1 (g / group 
                  :ARG0-of (c / control-01 
                        :ARG1 (m / mutant)) 
                  :op2-of (o / or 
                        :op1 (c2 / control-01 
                              :ARG0 (b / background 
                                    :ARG0-of (c4 / conduct-01 
                                          :ARG1 (h / here) 
                                          :ARG1-of (d / describe-01 
                                                :ARG0 (s / study-01)) 
                                          :manner (e / exclusive-02)) 
                                    :mod (t / thing 
                                          :ARG1-of (m3 / mix-01) 
                                          :name (n / name 
                                                :op1 "B6/129"))) 
                              :ARG2-of (c3 / compare-01))))))

# ::snt Perpetuating this mutation as a congenic mutant line on the 129P2 background proved impractical .
# ::tok Perpetuating this mutation as a congenic mutant line on the 129P2 background proved impractical .
# ::alignments 13-14|0.1 12-13|0 11-12|0.2 10-11|0.2.0 7-8|0.0.1 6-7|0.0.1.0 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:06.595
(p / prove-01 
      :ARG0 (p2 / perpetuate-01 
            :ARG1 (m2 / mutation 
                  :mod (t / this)) 
            :manner (l / line 
                  :mod (m / mutant))) 
      :ARG1 (i / impractical) 
      :manner (b / background 
            :mod 129P2))

# ::snt The 129P2 mice were poor breeders as wild-types , and when introduced , the Acadm mutation was nearly lost on this background because of the high rate of neonatal death .
# ::tok The 129P2 mice were poor breeders as wild-types , and when introduced , the Acadm mutation was nearly lost on this background because of the high rate of neonatal death .
# ::alignments 29-30|0.0.1 28-29|0.0.1.1 26-27|0.0 25-26|0.0.0 22-23|0 21-22|0.1.4.0 20-21|0.1.4.0.0 18-19|0.1 17-18|0.1.2 15-16|0.1.1 14-15|0.1.1.0.0.0+0.1.1.0.0+0.1.1.0 11-12|0.1.4 9-10|0.1.3 7-8|0.0.1.0 5-6|0.1.3.0 4-5|0.1.3.0.0 2-3|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:06.964
(c / cause-01 
      :ARG0 (r / rate 
            :ARG1-of (h / high-02) 
            :mod (d / die-01 
                  :ARG1 (w / wild-typ) 
                  :mod (n / neonatal))) 
      :ARG1 (l / lose-02 
            :ARG0 (m2 / mouse) 
            :ARG1 (m / mutation 
                  :mod (t2 / thing 
                        :name (n3 / name 
                              :op1 "Acadm"))) 
            :mod (n2 / nearly) 
            :op2-of (a / and 
                  :op1 (b2 / breeder 
                        :mod (p / poor))) 
            :time (i / introduce-02 
                  :ARG1 (b / background 
                        :mod (t / this)))))

# ::snt Because of the molecular structure of the targeted allele , it proved virtually impossible to distinguish all three potential genotypes .
# ::tok Because of the molecular structure of the targeted allele , it proved virtually impossible to distinguish all three potential genotypes .
# ::alignments 19-20|0.0.0 18-19|0.0.0.0 17-18|0.0.0.2 16-17|0.0.0.1 15-16|0.0 12-13|0.1.1 11-12|0 8-9|0.1.0.1 7-8|0.1.0.1.0 4-5|0.1.0 3-4|0.1.0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:07.291
(p2 / prove-01 
      :ARG1 (d / distinguish-01 
            :ARG1 (g / genotyp 
                  :mod (p / potential) 
                  :quant (a / all) 
                  :quant 3)) 
      :ARG1-of (c / cause-01 
            :ARG0 (s / structure 
                  :mod (m / molecule) 
                  :poss (a2 / allele 
                        :ARG1-of (t / target-01))) 
            :ARG2 (v / virtual)))

# ::snt We could clearly detect the presence or absence of the targeted allele , however , whether a particular mouse was MCAD  /  or MCAD + /  could not be determined by Southern blot or PCR of genomic DNA .
# ::tok We could clearly detect the presence or absence of the targeted allele , however , whether a particular mouse was MCAD  /  or MCAD + /  could not be determined by Southern blot or PCR of genomic DNA .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:07.293
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Ultimately MCAD  /  mice were ascertained by immunoblot analysis of offspring with subsequent perpetuation of MCAD  /  and MCAD + / + mice as separate groups .
# ::tok Ultimately MCAD  /  mice were ascertained by immunoblot analysis of offspring with subsequent perpetuation of MCAD  /  and MCAD + / + mice as separate groups .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:07.297
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt RT-PCR amplification from exon 7 to 11 from total heart RNA amplified the expected 600-base pair ( bp ) fragment in MCAD + / + and MCAD + /  mice , and a 1.5-kb fragment in MCAD  /  mice ( data not shown ) .
# ::tok RT-PCR amplification from exon 7 to 11 from total heart RNA amplified the expected 600-base pair ( bp ) fragment in MCAD + / + and MCAD + /  mice , and a 1.5-kb fragment in MCAD  /  mice ( data not shown ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:07.305
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Sequence analysis of the 1.5-kb fragment revealed that the amplified fragment consisted of exon 7 to exon 10 with 280 bp of pGEM plasmid sequence followed by exons 8 -- 11 .
# ::tok Sequence analysis of the 1.5-kb fragment revealed that the amplified fragment consisted of exon 7 to exon 10 with 280 bp of pGEM plasmid sequence followed by exons 8 -- 11 .
# ::alignments 30-31|0.1.0.1.0 28-29|0.1.0.0 27-28|0.2.1 25-26|0.2 24-25|0.2.0 23-24|0.2.0.0 17-18|0.0.1.0 16-17|0.1.2 14-15|0.0.0 13-14|0.1.1 11-12|0.1 10-11|0.1.0 9-10|0.1.0.1 6-7|0 5-6|0.0.1 1-2|0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:07.988
(r / reveal-01 
      :ARG0 (a2 / analyze-01 
            :ARG0 7 
            :ARG1 (f3 / fragment-01 
                  :ARG1 10) 
            :manner (s2 / sequence)) 
      :ARG1 (c / consist-01 
            :ARG1 (f2 / fragment-01 
                  :ARG1 8 
                  :ARG1-of (a / amplify-01 
                        :ARG0 11)) 
            :ARG2 (e3 / exon) 
            :ARG4 (e2 / exon)) 
      :ARG2-of (f / follow-01 
            :ARG0 (s / sequence 
                  :mod (p / plasmid)) 
            :ARG1 (e / exon)))

# ::snt Some of the plasmid sequences , along with the pPGKNEOpA sequence , were deleted from this spliced mRNA .
# ::tok Some of the plasmid sequences , along with the pPGKNEOpA sequence , were deleted from this spliced mRNA .
# ::alignments 17-18|0.0.0.1 16-17|0.0.0.1.0 15-16|0.0.0.1.1 13-14|0.0.0 10-11|0.0.0.1.0.0 6-7|0.0.0.0 4-5|0.0 3-4|0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:08.151
(p / plasmid 
      :mod-of (s3 / sequence 
            :ARG1-of (d / delete-01 
                  :ARG0 (a / along) 
                  :ARG2 (m / mrna 
                        :ARG1-of (s / splice-01 
                              :ARG0 (s2 / sequence)) 
                        :mod (t / this))) 
            :quant (s4 / some)))

# ::snt Northern blot analysis revealed Acadm was normally expressed in all tissues analyzed from MCAD + / + mice with the most robust expression occurring in brown fat , kidney , heart , skeletal muscle , and liver with minimal expression in the brain , white fat , and testes ( Figure 2 ) .
# ::tok Northern blot analysis revealed Acadm was normally expressed in all tissues analyzed from MCAD + / + mice with the most robust expression occurring in brown fat , kidney , heart , skeletal muscle , and liver with minimal expression in the brain , white fat , and testes ( Figure 2 ) .
# ::alignments 51-52|0.1.3.0.0.0.0 50-51|0.1.3.1.0.1.0 48-49|0.1.3.0.2 47-48|0.1.3.0 45-46|0.1.3.0.1 44-45|0.1.3.0.1.0 42-43|0.1.3.0.0 39-40|0.1.3.0.0.0 38-39|0.1.3.0.0.0.1 36-37|0.1.3.1.0.2 35-36|0.1.3.1.0 33-34|0.1.3.1.0.1 32-33|0.1.3.1.0.1.1 30-31|0.1.3.0.0.0.1.0 28-29|0.1.3.1.0.0 26-27|0.1.3.1.1 25-26|0.1.3.1.1.0 23-24|0.1.3.1 22-23|0.1.3 21-22|0.1.3.2 20-21|0.1.3.2.0 17-18|0.1.2.0.0 15-16|0.1.2.0.0.0 11-12|0.1.2.0 10-11|0.1.2 9-10|0.1.2.1 7-8|0.1 6-7|0.1.1 4-5|0.1.0.0.0+0.1.0.0+0.1.0 3-4|0 2-3|0.0 1-2|0.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:09.390
(r2 / reveal-01 
      :ARG0 (a5 / analyze-01 
            :ARG1 (b3 / blot-01) 
            :manner "Northern_Ireland") 
      :ARG1 (e3 / express-01 
            :ARG1 (t3 / thing 
                  :name (n2 / name 
                        :op1 "Acadm")) 
            :ARG1-of (n / normal-02) 
            :manner (t2 / tissue 
                  :ARG1-of (a3 / analyze-01 
                        :ARG2 (m4 / mouse 
                              :op1-of (s2 / slash))) 
                  :quant (a4 / all)) 
            :manner (e2 / express-01 
                  :ARG1 (a / and 
                        :op1 (b / brain 
                              :ARG1-of (e / express-01 
                                    :ARG0 2 
                                    :ARG1-of (m / minimal-02 
                                          :ARG2 (h / heart)))) 
                        :op2 (f2 / fat 
                              :mod (w / white)) 
                        :op3 (t / testes)) 
                  :ARG1-of (o / occur-01 
                        :ARG0 (a2 / and 
                              :op1 (k / kidney) 
                              :op2 (m2 / muscle-01 
                                    :ARG0 (f / figure) 
                                    :mod (s / skeletal)) 
                              :op3 (l / liver)) 
                        :ARG2 (f3 / fat 
                              :mod (b2 / brown))) 
                  :mod (r / robust 
                        :degree (m3 / most)))))

# ::snt Interestingly , although RT-PCR amplified an incorrectly spliced Acadm transcript , no Acadm transcripts were detected by northern blot analysis from MCAD  /  mice .
# ::tok Interestingly , although RT-PCR amplified an incorrectly spliced Acadm transcript , no Acadm transcripts were detected by northern blot analysis from MCAD  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:09.393
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These results strongly suggest that the mutant RNA is unstable and degraded rapidly or , alternatively , undergoes nonsense mediated RNA decay .
# ::tok These results strongly suggest that the mutant RNA is unstable and degraded rapidly or , alternatively , undergoes nonsense mediated RNA decay .
# ::alignments 21-22|0.1.2.0.1 19-20|0.1.2.0 18-19|0.1.2.0.0 17-18|0.1.2.0.0.0 15-16|0.2.0 13-14|0.1.2.0.0.1 12-13|0.1.2.0.2 11-12|0.1.0 10-11|0.1.2 9-10|0.1.3+0.1 7-8|0.1.1 6-7|0.1.1.0 3-4|0 2-3|0.2 1-2|0.0.0+0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:09.783
(s2 / suggest-01 
      :ARG0 (t / thing 
            :ARG2-of (r3 / result-01) 
            :mod (t2 / this)) 
      :ARG1 (s / stable-03 
            :ARG0-of (d2 / degrade-01) 
            :ARG1 (r2 / rna 
                  :mod (m2 / mutant)) 
            :op1-of (a2 / and 
                  :op2 (m / mediate-01 
                        :ARG0 (n / nonsense 
                              :ARG1-of (u / undergo-28) 
                              :op1-of (o / or)) 
                        :ARG1 (d / decay-01) 
                        :manner (r / rapid))) 
            :polarity -) 
      :ARG1-of (s3 / strong-02 
            :ARG0 (a / alternatively)))

# ::snt Northern Blot Analysis from MCAD  /  ( n = 2 ) and MCAD + / + ( n = 2 ) Mice .
# ::tok Northern Blot Analysis from MCAD  /  ( n = 2 ) and MCAD + / + ( n = 2 ) Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:09.785
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Acadm message was detected from the heart , liver , brown fat , brain , kidney , and muscle ( and white fat and testes , data not shown ) of only MCAD + / + mice .
# ::tok Acadm message was detected from the heart , liver , brown fat , brain , kidney , and muscle ( and white fat and testes , data not shown ) of only MCAD + / + mice .
# ::alignments 36-37|0.0.0.3.1.0.0 34-35|0.0.0.3.1.0.0.0 31-32|0.0.0.3.0.1 28-29|0 27-28|0.1 26-27|0.0 24-25|0.0.0.3.1.1 23-24|0.0.0 22-23|0.0.0.3.2 21-22|0.0.0.3.2.0 20-21|0.0.0.3.1 18-19|0.0.0.3.1.0 17-18|0.0.0.3 15-16|0.0.0.4 13-14|0.0.0.2 11-12|0.0.0.1 10-11|0.0.0.1.0 8-9|0.0.0.0 6-7|0.0.0.3.0.2 3-4|0.0.0.3.0 1-2|0.0.0.3.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.182
(s2 / show-01 
      :ARG1 (d / data 
            :op5-of (a / and 
                  :op1 (l / liver) 
                  :op2 (f2 / fat 
                        :mod (b2 / brown)) 
                  :op3 (b / brain) 
                  :op3-of (a3 / and 
                        :ARG0-of (d2 / detect-01 
                              :ARG1 (m3 / message) 
                              :op1-of (o / only) 
                              :source (h / heart)) 
                        :op1 (a2 / and 
                              :op1 (m2 / muscle-01 
                                    :ARG1 (m / mouse 
                                          :op1-of (s / slash))) 
                              :op2 (t / testes)) 
                        :op2 (f / fat 
                              :mod (w / white))) 
                  :op4 (k / kidney))) 
      :polarity -)

# ::snt Most robust expression occurred in brown fat , kidney , heart , and skeletal muscle .
# ::tok Most robust expression occurred in brown fat , kidney , heart , and skeletal muscle .
# ::alignments 14-15|0.0.0.2 13-14|0.0.0.2.0 12-13|0.0.0 10-11|0.0.0.1 8-9|0.0.0.0 6-7|0.0.1 5-6|0.0.1.0 3-4|0.0 2-3|0 1-2|0.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.294
(e / express-01 
      :ARG0-of (o / occur-01 
            :ARG1 (a / and 
                  :op1 (k / kidney) 
                  :op2 (h / heart) 
                  :op3 (m / muscle-01 
                        :mod (s / skeletal))) 
            :ARG2 (f / fat 
                  :mod (b / brown))) 
      :ARG1 (r / robust) 
      :mod (m2 / most))

# ::snt MCAD  /  mice had no detectable message in all tissues examined .
# ::tok MCAD  /  mice had no detectable message in all tissues examined .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.295
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Immunoblot analyses of liver homogenates with anti-MCAD antisera demonstrated that the 42 kDa MCAD monomer was present in MCAD + / + mice , but not in MCAD  /  mice ( Figure 3 ) .
# ::tok Immunoblot analyses of liver homogenates with anti-MCAD antisera demonstrated that the 42 kDa MCAD monomer was present in MCAD + / + mice , but not in MCAD  /  mice ( Figure 3 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.300
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt As a control analysis , anti -- short-chain acyl-CoA dehydrogenase ( SCAD ) antisera revealed no differences in levels of expression of SCAD protein between MCAD + / + and MCAD  /  mice ( Figure 3 ) .
# ::tok As a control analysis , anti -- short-chain acyl-CoA dehydrogenase ( SCAD ) antisera revealed no differences in levels of expression of SCAD protein between MCAD + / + and MCAD  /  mice ( Figure 3 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.305
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Immunoblots of Liver Homogenates from MCAD + / + and MCAD  /  Mice .
# ::tok Immunoblots of Liver Homogenates from MCAD + / + and MCAD  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.309
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These were probed with anti-MCAD antibody or anti-SCAD antibody .
# ::tok These were probed with anti-MCAD antibody or anti-SCAD antibody .
# ::alignments 8-9|0.1.1 6-7|0.1 5-6|0.1.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.332
(p / probe-01 
      :ARG1 (t / this) 
      :ARG2 (o / or 
            :op1 (a2 / antibody) 
            :op2 (a / antibody)))

# ::snt Homozygous MCAD  /  mice had no detectable MCAD protein .
# ::tok Homozygous MCAD  /  mice had no detectable MCAD protein .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.333
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt MCAD protein is only detectable under the MCAD protein -- spiked ( positive control ) lane .
# ::tok MCAD protein is only detectable under the MCAD protein -- spiked ( positive control ) lane .
# ::alignments 15-16|0 13-14|0.0 12-13|0.0.1 10-11|0.0.0.0.0.0 8-9|0.0.0.0.0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.430
(l / lane-01 
      :ARG1-of (c / control-01 
            :ARG0 (p3 / protein 
                  :domain-of (d / detectable 
                        :mod (o / only 
                              :ARG0-of (s / spike-01 
                                    :ARG1 (p2 / protein))))) 
            :manner (p / positive)))

# ::snt As a control analysis , liver homogenates probed with anti-SCAD antibody revealed that SCAD protein was present in both MCAD + / + and MCAD  /  mice .
# ::tok As a control analysis , liver homogenates probed with anti-SCAD antibody revealed that SCAD protein was present in both MCAD + / + and MCAD  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.433
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt No MCAD positive-control protein is detected by anti-SCAD antibodies ( MCAD lane ) .
# ::tok No MCAD positive-control protein is detected by anti-SCAD antibodies ( MCAD lane ) .
# ::alignments 11-12|0.1.0 8-9|0.0 5-6|0 3-4|0.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.458
(d / detect-01 
      :ARG0 (a / antibodi) 
      :ARG1 (p / protein 
            :ARG1-of (l / lane-01)) 
      :polarity -)

# ::snt mw , molecular weight standards .
# ::tok mw , molecular weight standards .
# ::alignments 4-5|0 3-4|0.0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:10.470
(s / standard 
      :mod (w / weight) 
      :mod (m / molecule))

# ::snt Enzyme activity was analyzed in mouse liver homogenates using the electron transport flavoprotein ( ETF ) reduction assay with octanoyl-CoA ( C8 : 0 ) and palmitoyl-CoA ( C16 : 0 ) as substrates .
# ::tok Enzyme activity was analyzed in mouse liver homogenates using the electron transport flavoprotein ( ETF ) reduction assay with octanoyl-CoA ( C8 : 0 ) and palmitoyl-CoA ( C16 : 0 ) as substrates .
# ::alignments 33-34|0.0.1.1 30-31|0.0.1.0.0.0 25-26|0.0.2.0 23-24|0.0.0 17-18|0.0.1.0 16-17|0.0.1.0.0 14-15|0 11-12|0.0.2.1.0 10-11|0.0.2.1.0.0 8-9|0.0.1 7-8|0.0.2.1 6-7|0.0.2.1.1 5-6|0.0.2.1.1.0 3-4|0.0.2 1-2|0.0 0-1|0.0.3 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.284
(e / etf 
      :ARG1-of (a4 / activity-06 
            :ARG0 0 
            :ARG0-of (u / use-01 
                  :ARG1 (a2 / assay 
                        :ARG1-of (r / reduce-01 
                              :ARG0 0)) 
                  :ARG2 (s / substrat)) 
            :ARG1-of (a3 / analyze-01 
                  :ARG0 (a / and) 
                  :ARG2 (h / homogenat 
                        :manner-of (t / transport-01 
                              :ARG1 (e2 / electron)) 
                        :mod (l / liver 
                              :mod (m / mouse)))) 
            :mod (e3 / enzyme)))

# ::snt MCAD  /  mice had a significant reduction in ability to dehydrogenate octanoyl-CoA and a modest reduction in activity toward palmitoyl-CoA compared to MCAD + / + mice ( Table 1 ) .
# ::tok MCAD  /  mice had a significant reduction in ability to dehydrogenate octanoyl-CoA and a modest reduction in activity toward palmitoyl-CoA compared to MCAD + / + mice ( Table 1 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.285
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Specifically , the dehydrogenation of octanoyl-CoA and palmitoyl-CoA substrates were reduced by 75 % and by 30 % , respectively , in MCAD  /  mice as compared to MCAD + / + controls .
# ::tok Specifically , the dehydrogenation of octanoyl-CoA and palmitoyl-CoA substrates were reduced by 75 % and by 30 % , respectively , in MCAD  /  mice as compared to MCAD + / + controls .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.289
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Characteristics of MCAD-Deficient Mice .
# ::tok Characteristics of MCAD-Deficient Mice .
# ::alignments 2-4|0.0.0.1+0.0.0.0+0.0.0+0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.312
(c / characteristic 
      :poss (t / thing 
            :name (n / name 
                  :op1 (m / MCAD-Deficient) 
                  :op2 (m2 / Mice))))

# ::snt Values given are mean  SD .
# ::tok Values given are mean  SD .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.313
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt aMCAD + / + n = 5 and MCAD  /  n = 5 .
# ::tok aMCAD + / + n = 5 and MCAD  /  n = 5 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.317
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt bMCAD + / + n = 8 litters and MCAD  /  n = 10 litters .
# ::tok bMCAD + / + n = 8 litters and MCAD  /  n = 10 litters .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.326
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt cMCAD + / + n = 5 and MCAD  /  n = 6 .
# ::tok cMCAD + / + n = 5 and MCAD  /  n = 6 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.329
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt dMCAD + / + n = 4 and MCAD  /  n = 5 .
# ::tok dMCAD + / + n = 4 and MCAD  /  n = 5 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.332
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt eExpressed as a ratio relative to the internal standard .
# ::tok eExpressed as a ratio relative to the internal standard .
# ::alignments 8-9|0.0.0 7-8|0.0.0.0 4-5|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.354
(r2 / ratio 
      :mod (r / relative 
            :beneficiary (s / standard 
                  :mod (i / internal-02))))

# ::snt Significant neonatal mortality was noted in MCAD  /  pups .
# ::tok Significant neonatal mortality was noted in MCAD  /  pups .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.358
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Although equal numbers of pups were born from MCAD + / + and MCAD  /  mice , only 41 % of MCAD  /  mice survived to weaning as compared to 98 % of MCAD + / + mice ( Table 1 ) .
# ::tok Although equal numbers of pups were born from MCAD + / + and MCAD  /  mice , only 41 % of MCAD  /  mice survived to weaning as compared to 98 % of MCAD + / + mice ( Table 1 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.362
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The mechanism of neonatal loss remains undetermined .
# ::tok The mechanism of neonatal loss remains undetermined .
# ::alignments 6-7|0.1 5-6|0 4-5|0.0.0 3-4|0.0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.398
(r / remain-01 
      :ARG1 (m / mechanism 
            :mod (l / loss 
                  :mod (n / neonatal))) 
      :ARG3 (u / undetermin))

# ::snt The MCAD  /  pups are abandoned more frequently than MCAD + / + pups for unknown reasons .
# ::tok The MCAD  /  pups are abandoned more frequently than MCAD + / + pups for unknown reasons .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.399
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt They are likely more prone to hypothermia than MCAD + / + .
# ::tok They are likely more prone to hypothermia than MCAD + / + .
# ::alignments 10-11|0.1.0 6-7|0.3 4-5|0 3-4|0.1 2-3|0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.428
(p / prone 
      :ARG1-of (l / likely-01) 
      :degree (m / more 
            :compared-to (s / slash)) 
      :domain (t / they) 
      :prep-to (h / hypothermia))

# ::snt Because of the difficulty of distinguishing the MCAD  /  mutants from the MCAD + /  heterozygous pups by molecular analysis due to the insertion mutation , we could only compare MCAD + / +  MCAD + / + matings with MCAD  /   MCAD  /  matings .
# ::tok Because of the difficulty of distinguishing the MCAD  /  mutants from the MCAD + /  heterozygous pups by molecular analysis due to the insertion mutation , we could only compare MCAD + / +  MCAD + / + matings with MCAD  /   MCAD  /  matings .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.430
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Thus , we were unable to evaluate the pedigrees from heterozygous matings .
# ::tok Thus , we were unable to evaluate the pedigrees from heterozygous matings .
# ::alignments 11-12|0.0 10-11|0 8-9|0.0.0.1 6-7|0.0.0 2-3|0.0.0.0 0-1|0.0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.484
(h / heterozygou 
      :mod-of (m / mating 
            :ARG2-of (e / evaluate-01 
                  :ARG0 (w / we) 
                  :ARG1 (p / pedigre) 
                  :mod (t / thu))))

# ::snt Fasting and Cold Intolerance .
# ::tok Fasting and Cold Intolerance .
# ::alignments 2-4|0.1.0.1+0.1.0.0+0.1.0+0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.498
(a / and 
      :op1 (f / fast) 
      :op2 (o / organization 
            :name (n / name 
                  :op1 "Cold" 
                  :op2 "Intolerance")))

# ::snt In order to examine the stress effects of fasting on MCAD-deficient mice , they were fasted for 24 h prior to analysis .
# ::tok In order to examine the stress effects of fasting on MCAD-deficient mice , they were fasted for 24 h prior to analysis .
# ::alignments 21-22|0 19-20|0.1 18-19|0.0.1.0.0 17-18|0.0.1.0.0.0 13-14|0.0.0 11-12|0.0.2 8-9|0.0.1.1 6-7|0.0.1 5-6|0.0.1.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.680
(a / analyze-01 
      :ARG1 (e2 / examine-01 
            :ARG0 (t / they) 
            :ARG1 (e / effect 
                  :mod (s / stress-02 
                        :ARG1 (h / h 
                              :quant 24)) 
                  :poss (f / fast)) 
            :beneficiary (m / mouse)) 
      :op1-of (p / prior))

# ::snt MCAD  /  mice displayed lower serum glucose and elevated serum free fatty acid levels although neither result was significant , as compared to MCAD + / + mice ( Table 1 ) .
# ::tok MCAD  /  mice displayed lower serum glucose and elevated serum free fatty acid levels although neither result was significant , as compared to MCAD + / + mice ( Table 1 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.682
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To determine the effects of cold stress , mice were fasted for 18 h and placed in 4 C environment for a 3-h period .
# ::tok To determine the effects of cold stress , mice were fasted for 18 h and placed in 4 C environment for a 3-h period .
# ::alignments 23-24|0.1.2 19-20|0.1.1 18-19|0.1.1.0 17-18|0.1.1.1 15-16|0.1 14-15|0 13-14|0.0.1 12-13|0.0.0.0.0 8-9|0.1.0 6-7|0.0.0.0 5-6|0.0.0.0.1 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.948
(a / and 
      :condition (d / determine-01 
            :ARG1 (e2 / effect 
                  :ARG1-of (s / stress-02 
                        :ARG0 18 
                        :mod (c2 / cold))) 
            :op1-of (h / h)) 
      :op1 (p2 / place-01 
            :ARG1 (m / mouse) 
            :ARG2 (e / environment 
                  :mod (c / C) 
                  :quant 4) 
            :duration (p / period)))

# ::snt The MCAD  /  mice were significantly compromised within this short period of cold stress , some severe enough to result in fatalities .
# ::tok The MCAD  /  mice were significantly compromised within this short period of cold stress , some severe enough to result in fatalities .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.950
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt After 1 h of the cold challenge , the average rectal temperature of MCAD  /  mice ( n = 5 ) was 23.4 C as compared with 35 C for MCAD + / + mice ( n = 4 ) .
# ::tok After 1 h of the cold challenge , the average rectal temperature of MCAD  /  mice ( n = 5 ) was 23.4 C as compared with 35 C for MCAD + / + mice ( n = 4 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.953
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Rectal temperatures declined to unrecoverable temperatures of 16.7 -- 19.2 C in three of the five MCAD  /  mice .
# ::tok Rectal temperatures declined to unrecoverable temperatures of 16.7 -- 19.2 C in three of the five MCAD  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.956
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt By the end of the 1.5-h mark , the two surviving MCAD  /  mice averaged 22.7 C .
# ::tok By the end of the 1.5-h mark , the two surviving MCAD  /  mice averaged 22.7 C .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:11.965
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In contrast , all four MCAD + / + mice survived the 3-h cold stress , ending with an average rectal temperature of 33.6 C .
# ::tok In contrast , all four MCAD + / + mice survived the 3-h cold stress , ending with an average rectal temperature of 33.6 C .
# ::alignments 24-25|0.0.0.0.0.2 21-22|0.0.0.0.0 20-21|0.0.0.0.0.1 19-20|0.0.0.0.0.0 16-17|0.0.0.0 14-15|0.0.1 13-14|0.0.1.0 10-11|0.0 9-10|0.0.0 7-8|0.0.0.1 4-5|0.0.0.0.0.0.1 3-4|0.0.0.0.0.0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:12.190
(c3 / contrast-01 
      :ARG1 (s2 / survive-01 
            :ARG0 (m / mouse 
                  :ARG0-of (e / end-01 
                        :ARG2 (t / temperature 
                              :ARG1-of (a / average-01 
                                    :ARG0 (a2 / all) 
                                    :ARG2 4) 
                              :mod (r / rectal) 
                              :quant-of (c / C))) 
                  :op1-of (s3 / slash)) 
            :ARG1 (s / stress-02 
                  :mod (c2 / cold))))

# ::snt Organic Acid and Acylcarnitine Analysis .
# ::tok Organic Acid and Acylcarnitine Analysis .
# ::alignments 3-5|0.1.0.1+0.1.0.0+0.1.0+0.1 2-3|0 0-2|0.0.0.1+0.0.0.0+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:12.222
(a3 / and 
      :op1 (t2 / thing 
            :name (n2 / name 
                  :op1 (o / Organic) 
                  :op2 (a4 / Acid))) 
      :op2 (t / thing 
            :name (n / name 
                  :op1 (a / Acylcarnitine) 
                  :op2 (a2 / Analysis))))

# ::snt Urine organic acid analysis revealed that MCAD  /  mice developed an organic acid profile similar to MCAD-deficient human patients .
# ::tok Urine organic acid analysis revealed that MCAD  /  mice developed an organic acid profile similar to MCAD-deficient human patients .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:12.224
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Specifically , when fasted for 18 h , MCAD  /  mice developed significantly elevated concentrations of adipic , suberic , and sebacic acids and hexanoylglycine as compared to MCAD + / + controls , which showed trace to no detectable amounts of the same organic acids ( Table 1 ) .
# ::tok Specifically , when fasted for 18 h , MCAD  /  mice developed significantly elevated concentrations of adipic , suberic , and sebacic acids and hexanoylglycine as compared to MCAD + / + controls , which showed trace to no detectable amounts of the same organic acids ( Table 1 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:12.227
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Adipic acid is not specific to MCAD deficiency .
# ::tok Adipic acid is not specific to MCAD deficiency .
# ::alignments 7-8|0.1 4-5|0 3-4|0.2 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:12.281
(s / specific-02 
      :ARG1 (a / acid) 
      :ARG2 (d / deficiency) 
      :polarity -)

# ::snt We also evaluated -hydroxybutyric and acetoacetic concentrations and found no significant differences between MCAD genotypes ( data not shown ) .
# ::tok We also evaluated -hydroxybutyric and acetoacetic concentrations and found no significant differences between MCAD genotypes ( data not shown ) .
# ::alignments 18-19|0 17-18|0.2 16-17|0.1 13-15|0.0.0.0.0.0.1+0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0 11-12|0.0.0.0 10-11|0.0.0.0.1 9-10|0.0.0.2 8-9|0.0.0 7-8|0.0.0.1 6-7|0.0.0.1.0.1 4-5|0.0 2-3|0.0.0.1.0 1-2|0.0.0.1.0.2 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:12.580
(s / show-01 
      :ARG0 (a2 / and 
            :op1 (f / find-01 
                  :ARG1 (d2 / differ-01 
                        :ARG1 (t / thing 
                              :name (n / name 
                                    :op1 (m / MCAD) 
                                    :op2 (g / genotypes))) 
                        :ARG1-of (s2 / significant-02)) 
                  :op2-of (a / and 
                        :op1 (e / evaluate-01 
                              :ARG0 (w / we) 
                              :ARG1 (c / concentration) 
                              :mod (a3 / also))) 
                  :polarity -)) 
      :ARG1 (d / data) 
      :polarity -)

# ::snt Comparison of MCAD + / + and MCAD  /  mice revealed no significant differences in total serum carnitine concentrations between MCAD + / + and MCAD  /  mice , but MCAD  /  mice had a 5 - to 6-fold elevation of serum decenoylcarnitine evident in the acylcarnitine profile ( Figure 4A ) .
# ::tok Comparison of MCAD + / + and MCAD  /  mice revealed no significant differences in total serum carnitine concentrations between MCAD + / + and MCAD  /  mice , but MCAD  /  mice had a 5 - to 6-fold elevation of serum decenoylcarnitine evident in the acylcarnitine profile ( Figure 4A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:12.582
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Bile acylcarnitine analysis revealed a similar acylcarnitine pattern as in serum ( Figure 4B ) .
# ::tok Bile acylcarnitine analysis revealed a similar acylcarnitine pattern as in serum ( Figure 4B ) .
# ::alignments 12-13|0.1.0.0 10-11|0.0.0 7-8|0.1 5-6|0.1.0 3-4|0 2-3|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:12.650
(r2 / reveal-01 
      :ARG0 (a / analyze-01 
            :ARG1 (s / serum) 
            :mod (b / bile)) 
      :ARG1 (p / pattern 
            :ARG1-of (r / resemble-01 
                  :ARG0 (f / figure))))

# ::snt However , the acylcarnitine profiles of the MCAD  /  mice are different from those of human MCAD-deficient patients ( Figure 4C ) .
# ::tok However , the acylcarnitine profiles of the MCAD  /  mice are different from those of human MCAD-deficient patients ( Figure 4C ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:12.652
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Human patients present with elevated levels of C6 , C8 , and C10 : 1 acylcarnitines , as did the mutant mice ; however , the predominant peak was C8 acylcarnitine in humans , whereas in the mouse it was C10 : 1 acylcarnitine .
# ::tok Human patients present with elevated levels of C6 , C8 , and C10 : 1 acylcarnitines , as did the mutant mice ; however , the predominant peak was C8 acylcarnitine in humans , whereas in the mouse it was C10 : 1 acylcarnitine .
# ::alignments 42-43|0.2.2 37-38|0.2.1.0.0.3 34-35|0.2.0 32-33|0.2.1.0.1.0.0 30-31|0.2.1.0.1.0 27-28|0 26-27|0.3 22-23|0.2.1.0.1 21-22|0.2.1.0.0.4 20-21|0.2.1.0.0.4.0 15-16|0.0 14-15|0.1 12-13|0.2.1.0.2.0.0+0.2.1.0.2.0+0.2.1.0.2 11-12|0.2.1.0 5-6|0.2.1 4-5|0.2 2-3|0.2.1.0.0.1 1-2|0.2.1.0.0.0.0+0.2.1.0.0.0+0.2.1.0.0 0-1|0.2.1.0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.005
(p / peak-01 
      :ARG0 (a3 / acylcarnitin) 
      :ARG1 1 
      :ARG2 (e / elevate-01 
            :ARG0 (w / whereas) 
            :ARG1 (l / level 
                  :extent-of (a4 / and 
                        :op1 (p4 / person 
                              :ARG0-of (h2 / have-rel-role-91 
                                    :ARG2 (p5 / patient)) 
                              :ARG0-of (p3 / present) 
                              :mod (h3 / human) 
                              :mod (m / mouse) 
                              :part (m2 / mouse 
                                    :mod (m3 / mutant))) 
                        :op1-of (a2 / and 
                              :op2 (a / acylcarnitine 
                                    :location (h / human))) 
                        :op2 (t / thing 
                              :name (n / name 
                                    :op1 "C10")))) 
            :op1-of 1) 
      :mod (p2 / predominant))

# ::snt ( A ) Serum acylcarnitine analysis of MCAD + / + ( n = 4 ) and MCAD  /  mice ( n = 4 ) .
# ::tok ( A ) Serum acylcarnitine analysis of MCAD + / + ( n = 4 ) and MCAD  /  mice ( n = 4 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.032
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt There are significant elevations in acylcarnitine species as indicated in MCAD  /  mice .
# ::tok There are significant elevations in acylcarnitine species as indicated in MCAD  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.035
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Values shown are mean values  standard deviation ( SD ) .
# ::tok Values shown are mean values  standard deviation ( SD ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.038
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Asterisk indicates p < 0.002 and  indicates p < 0.01 .
# ::tok Asterisk indicates p < 0.002 and  indicates p < 0.01 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.041
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( B ) There are significant elevations in bile acylcarnitines of the same mice shown in ( A ) as indicated .
# ::tok ( B ) There are significant elevations in bile acylcarnitines of the same mice shown in ( A ) as indicated .
# ::alignments 20-21|0 14-15|0.0.0.0 13-14|0.0.0.0.0 12-13|0.0.0.0.0.0 9-10|0.0.0.0.1 8-9|0.0.0.0.1.0 6-7|0.0.0 5-6|0.0 1-2|0.0.0.1.1+0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.245
(i / indicate-01 
      :ARG1 (s3 / significant-02 
            :ARG1 (e / elevation 
                  :ARG1-of (s / show-01 
                        :ARG0 (m / mouse 
                              :ARG1-of (s2 / same-01)) 
                        :location (a / acylcarnitin 
                              :mod (b / bile))) 
                  :domain (l / location 
                        :name (n / name 
                              :op1 "B") 
                        :wiki -))))

# ::snt Values shown are mean values  SD .
# ::tok Values shown are mean values  SD .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.246
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Asterisk indicates p < 0.001 .
# ::tok Asterisk indicates p < 0.001 .
# ::alignments 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.261
(i / indicate-01 
      :ARG0 (a / asterisk) 
      :ARG1 (p / p))

# ::snt ( C ) Bile acylcarnitine profile of an MCAD  /  mouse compared to a human patient with MCAD deficiency .
# ::tok ( C ) Bile acylcarnitine profile of an MCAD  /  mouse compared to a human patient with MCAD deficiency .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.263
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Internal standards are indicated by an asterisk .
# ::tok Internal standards are indicated by an asterisk .
# ::alignments 6-7|0.0 3-4|0 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.286
(i / indicate-01 
      :ARG0 (a / asterisk) 
      :ARG1 (s / standard 
            :mod (i2 / internal)))

# ::snt Complete histopathologic examination of one group of mutant and MCAD + / + control mice after a 24-h fast demonstrated diffuse microvesicular and macrovesicular hepatic steatosis in 6 -- 8-wk-old MCAD  /  mice whereas MCAD + / + mice had no histologic changes ( Figure 5A and 5B ) .
# ::tok Complete histopathologic examination of one group of mutant and MCAD + / + control mice after a 24-h fast demonstrated diffuse microvesicular and macrovesicular hepatic steatosis in 6 -- 8-wk-old MCAD  /  mice whereas MCAD + / + mice had no histologic changes ( Figure 5A and 5B ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.290
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In another group of 4-wk-old MCAD + / + and MCAD  /  mice fasted for 24-h , there were minimal to no abnormalities in all organs evaluated .
# ::tok In another group of 4-wk-old MCAD + / + and MCAD  /  mice fasted for 24-h , there were minimal to no abnormalities in all organs evaluated .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.293
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Only the older MCAD  /  mice , therefore , demonstrated hepatic steatosis .
# ::tok Only the older MCAD  /  mice , therefore , demonstrated hepatic steatosis .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.296
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In addition , we found sporadic cardiac lesions in multiple MCAD  /  mice .
# ::tok In addition , we found sporadic cardiac lesions in multiple MCAD  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.305
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Histopathology of MCAD + / + and MCAD  /  Mice .
# ::tok Histopathology of MCAD + / + and MCAD  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.308
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( A ) MCAD + / + mice had no evidence of hepatic steatosis following a 24-h fast .
# ::tok ( A ) MCAD + / + mice had no evidence of hepatic steatosis following a 24-h fast .
# ::alignments 17-18|0.2.0 14-15|0.2 13-14|0.1 12-13|0.1.0 10-11|0 9-10|0.3 7-8|0.0 5-6|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.361
(e / evidence-01 
      :ARG0 (m / mouse 
            :op1-of (s2 / slash)) 
      :ARG1 (s / steatosi 
            :mod (h / hepatic)) 
      :ARG1-of (f2 / follow-01 
            :ARG2 (f / fast)) 
      :polarity -)

# ::snt Liver section with Oil-Red O stain .
# ::tok Liver section with Oil-Red O stain .
# ::alignments 5-6|0.0.0 4-5|0.0.0.0.2+0.0.0.0.1.0+0.0.0.0.1+0.0.0.0 3-4|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.429
(l / liver 
      :mod-of (s2 / section 
            :ARG0-of (s / stain-01 
                  :ARG1 (p / person 
                        :mod (t / thing 
                              :name (n2 / name 
                                    :op1 "Oil-Red")) 
                        :name (n / name 
                              :op1 "O'Reilly") 
                        :wiki "Bill_O'Reilly_(political_commentator)"))))

# ::snt ( B ) Hepatosteatosis in MCAD  /  mouse following a 24-h fast .
# ::tok ( B ) Hepatosteatosis in MCAD  /  mouse following a 24-h fast .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.430
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Oil-Red O stained liver sections revealed severe and diffuse microvesicular and macrovesicular hepatic steatosis in MCAD  /  mice .
# ::tok Oil-Red O stained liver sections revealed severe and diffuse microvesicular and macrovesicular hepatic steatosis in MCAD  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.439
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( C and D ) Diffuse cardiomyopathy with chronic active multifocal myocyte degeneration and necrosis in MCAD  /  mice .
# ::tok ( C and D ) Diffuse cardiomyopathy with chronic active multifocal myocyte degeneration and necrosis in MCAD  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.443
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In one example , an MCAD  /  mouse had diffuse cardiomyopathy with chronic active multifocal myocyte degeneration and necrosis ( Figure 5C and 5D ) .
# ::tok In one example , an MCAD  /  mouse had diffuse cardiomyopathy with chronic active multifocal myocyte degeneration and necrosis ( Figure 5C and 5D ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.445
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Changes in degenerating myocytes included swelling , pale staining , and , in portions of the sarcoplasm , replacement of myofibrils with finely granular eosinophilic material .
# ::tok Changes in degenerating myocytes included swelling , pale staining , and , in portions of the sarcoplasm , replacement of myofibrils with finely granular eosinophilic material .
# ::alignments 25-26|0.0.1.0.0.0.0 24-25|0.0.1.0.0.0 23-24|0.0.1.0.0.0.0.0 22-23|0.0.1.0.0.0.0.0.0 20-21|0.1.0 18-19|0.1 16-17|0.0.0.0 13-14|0.0.0 10-11|0 8-9|0.0.1.0.0 7-8|0.0.1.0.0.1 5-6|0.0 4-5|0.0.1 3-4|0.0.1.0.1 2-3|0.0.1.0.1.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.668
(a / and 
      :op1 (s3 / swell-01 
            :ARG1 (p / portion 
                  :part-of (s / sarcoplasm)) 
            :ARG1-of (i / include-01 
                  :ARG2 (c / change-01 
                        :ARG1 (s2 / stain-01 
                              :ARG1 (e / eosinophilic 
                                    :mod-of (m / material 
                                          :mod (g / granular 
                                                :mod (f / finely)))) 
                              :ARG1-of (p2 / pale-03)) 
                        :ARG2 (m3 / myocyt 
                              :ARG1-of (d / degenerate-01))))) 
      :op2 (r / replace-01 
            :ARG1 (m2 / myofibril)))

# ::snt Nuclei of affected myocytes were large , pale , and vesicular and had prominent nucleoli .
# ::tok Nuclei of affected myocytes were large , pale , and vesicular and had prominent nucleoli .
# ::alignments 14-15|0.2 13-14|0.2.0 11-12|0 10-11|0.1 9-10|0.0 7-8|0.0.0 5-6|0.0.0.0.0 3-4|0.0.1 2-3|0.0.1.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.725
(a / and 
      :op1 (a2 / and 
            :op1 (p2 / pale-03 
                  :ARG1 (n2 / nucleus 
                        :domain-of (l / large))) 
            :poss (m / myocyt 
                  :ARG1-of (a3 / affect-01))) 
      :op2 (v / vesicular) 
      :op3 (n / nucleolus 
            :mod (p / prominent)))

# ::snt In the most severely affected areas , there was loss of myocytes accompanied by fibrosis .
# ::tok In the most severely affected areas , there was loss of myocytes accompanied by fibrosis .
# ::alignments 14-15|0.0.0 12-13|0.0 11-12|0.0.1 9-10|0 5-6|0.0.2.0 4-5|0.0.2 3-4|0.0.2.2 2-3|0.0.2.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:13.933
(l / loss 
      :ARG1-of (a / accompany-01 
            :ARG0 (f / fibrosi) 
            :manner (m / myocyt) 
            :purpose-of (a3 / affect-01 
                  :ARG1 (a2 / area) 
                  :degree (m2 / most) 
                  :degree (s / severe))))

# ::snt In the wall of the aorta at the base of the heart there was multifocal degeneration of the elastic tissue , accompanied by multifocal collections of globular translucent yellow-brown pigment interpreted to be ceroid/lipofuscin .
# ::tok In the wall of the aorta at the base of the heart there was multifocal degeneration of the elastic tissue , accompanied by multifocal collections of globular translucent yellow-brown pigment interpreted to be ceroid/lipofuscin .
# ::alignments 30-31|0.0.0 29-30|0.0 28-29|0 27-28|0.0.1 26-27|0.0.2 24-25|0.0.0.1.0 21-22|0.0.0.1 19-20|0.0.0.1.1 18-19|0.0.0.1.1.1 15-16|0.0.0.1.1.0 11-12|0.0.0.0.0 8-9|0.0.0.0 5-6|0.0.0.1.1.0.0 2-3|0.0.0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:14.161
(y / yellow-brown 
      :mod-of (p / pigment 
            :ARG1-of (i / interpret-01 
                  :ARG0 (b / base 
                        :poss (h / heart)) 
                  :purpose-of (a / accompany-01 
                        :ARG0 (c / collection) 
                        :ARG1 (t2 / tissue 
                              :ARG1-of (d / degenerate-01 
                                    :ARG0 (a2 / aorta 
                                          :poss-of (w / wall))) 
                              :mod (e / elastic)))) 
            :mod (t / translucent) 
            :mod (g / globular)))

# ::snt Similar deposits were scattered within adjacent adipose tissue .
# ::tok Similar deposits were scattered within adjacent adipose tissue .
# ::alignments 7-8|0.1 6-7|0.1.0 5-6|0 3-4|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:14.197
(a2 / adjacent 
      :ARG0-of (s / scatter-01 
            :ARG1 (d / deposit 
                  :ARG1-of (r / resemble-01))) 
      :mod-of (t / tissue 
            :mod (a / adipose)))

# ::snt Successfully targeting Acadm produced a mouse model for MCAD deficiency with features that mimic the clinical , biochemical , and pathologic phenotype found in human patients .
# ::tok Successfully targeting Acadm produced a mouse model for MCAD deficiency with features that mimic the clinical , biochemical , and pathologic phenotype found in human patients .
# ::alignments 25-26|0.3.1.0.0.0+0.3.1.0.0+0.3.1.0 24-25|0.3.1.0.1 22-23|0.3.1 21-22|0.3 20-21|0.2 19-20|0 17-18|0.1 15-16|0.0 13-14|0.3.0 11-12|0.3.0.0 9-10|0.3.0.0.0.2 8-9|0.3.0.0.0.2.0 6-7|0.3.0.0.0.1 5-6|0.3.0.0.0.1.0 3-4|0.3.0.0.0 0-3|0.3.0.0.0.0.0.2+0.3.0.0.0.0.0.1+0.3.0.0.0.0.0.0+0.3.0.0.0.0.0+0.3.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:14.719
(a / and 
      :op1 (c / clinical) 
      :op2 (b / biochemical) 
      :op3 (p4 / pathologic) 
      :op4 (p3 / phenotype 
            :ARG1-of (m / mimic-01 
                  :ARG0 (f2 / feature-01 
                        :manner-of (p5 / produce-01 
                              :ARG0 (t / thing 
                                    :name (n / name 
                                          :op1 (s / Successfully) 
                                          :op2 (t2 / targeting) 
                                          :op3 (a2 / Acadm))) 
                              :ARG1 (m3 / model 
                                    :mod (m4 / mouse)) 
                              :ARG3 (d / deficiency 
                                    :mod (m2 / MCAD))))) 
            :ARG1-of (f / find-01 
                  :ARG0 (p / person 
                        :ARG0-of (h / have-rel-role-91 
                              :ARG2 (p2 / patient)) 
                        :mod (h2 / human)))))

# ::snt MCAD-deficient patients have abnormal plasma and urine metabolites associated with the medium chain -- length enzyme specificity .
# ::tok MCAD-deficient patients have abnormal plasma and urine metabolites associated with the medium chain -- length enzyme specificity .
# ::alignments 16-17|0.0.0.0.0.0 15-16|0.0.0.0.0 14-15|0.0.0.0 12-13|0.2.0 11-12|0.2 8-9|0 7-8|0.1.1 6-7|0.1.1.0 5-6|0.1 4-5|0.1.0 3-4|0.1.0.0 1-2|0.0.0.1+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.087
(a / associate-01 
      :ARG0 (p2 / person 
            :ARG0-of (h / have-rel-role-91 
                  :ARG1 (l / length 
                        :mod-of (e / enzyme 
                              :mod-of (s / specificity))) 
                  :ARG2 (p3 / patient))) 
      :ARG1 (a2 / and 
            :op1 (p / plasma 
                  :mod (a3 / abnormal)) 
            :op2 (m2 / metabolit 
                  :mod (u / urine))) 
      :ARG2 (m / medium 
            :consist (c / chain)))

# ::snt MCAD-deficient patients [ 15 ] often display a characteristic urinary hexanoylglycine peak , as was seen in MCAD  /  mice .
# ::tok MCAD-deficient patients [ 15 ] often display a characteristic urinary hexanoylglycine peak , as was seen in MCAD  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.089
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Acylcarnitine analysis indicated , however , mouse MCAD is more active toward longer chain substrates than the human MCAD enzyme .
# ::tok Acylcarnitine analysis indicated , however , mouse MCAD is more active toward longer chain substrates than the human MCAD enzyme .
# ::alignments 19-20|0.0.0.0 17-18|0.0.0 14-15|0.1.1 13-14|0.1.1.1 12-13|0.1.1.0 10-11|0.1 9-10|0.1.2 7-8|0.1.0 6-7|0.1.0.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.199
(i / indicate-01 
      :ARG0 (a2 / analyze-01 
            :ARG1 (h / human 
                  :mod-of (e / enzyme))) 
      :ARG1 (a / activity-06 
            :ARG0 (m2 / MCAD 
                  :mod (m3 / mouse)) 
            :ARG1 (s / substrat 
                  :ARG1-of (l / long-03) 
                  :mod (c / chain)) 
            :degree (m / more)))

# ::snt This finding is similar to that seen with very long-chain acyl-CoA dehydrogenase ( VLCAD ) where mouse VLCAD is most active toward C16 acyl-substrates as compared to human VLCAD with the most enzymatic activity toward C14 acyl-substrates [ 16 ] .
# ::tok This finding is similar to that seen with very long-chain acyl-CoA dehydrogenase ( VLCAD ) where mouse VLCAD is most active toward C16 acyl-substrates as compared to human VLCAD with the most enzymatic activity toward C14 acyl-substrates [ 16 ] .
# ::alignments 38-39|0.0.0.0.0.0.0.1.0.0.0 36-37|0.0.0.0.1.0 33-34|0.0.0.0.1 32-33|0.0.0.0.1.1 31-32|0.0.0.0.1.1.0 27-28|0.0.0.0.0.0.0.0 25-26|0.0.0.0.0.0.0.1.0.0 23-24|0.0.0.0.0.0.0.1.0 20-21|0.0.0.0 19-20|0.0.0.0.2 16-18|0.0.1+0+0.0+0.0.0 11-12|0.0.0.0.0 9-10|0.0.0.0.0.1 8-9|0.0.0.0.0.1.0 6-7|0.0.0.0.0.0 3-4|0.0.0.0.0.0.0 1-2|0.0.0.0.0.0.0.1 0-1|0.0.0.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.607
(m3 / mouse 
      :op1-of (n / name 
            :name-of (t / thing 
                  :ARG0-of (a4 / activity-06 
                        :ARG1 (d / dehydrogenase 
                              :ARG1-of (s / see-01 
                                    :ARG2-of (r / resemble-01 
                                          :ARG0 (h / human) 
                                          :ARG1 (f / find-01 
                                                :ARG1 (a3 / acyl-substrat 
                                                      :ARG0-of (c / compare-01 
                                                            :ARG1 16)) 
                                                :mod (t2 / this)))) 
                              :mod (l / long-chain 
                                    :degree (v2 / very))) 
                        :ARG1-of (a2 / activity-06 
                              :ARG2 (a / acyl-substrat) 
                              :mod (e / enzymatic 
                                    :degree (m / most))) 
                        :degree (m2 / most))) 
            :op2 (v / VLCAD)))

# ::snt ETF reduction assays of liver homogenates were performed to characterize the MCAD  /  mice at the enzymatic level .
# ::tok ETF reduction assays of liver homogenates were performed to characterize the MCAD  /  mice at the enzymatic level .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.608
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt MCAD  /  mice had a significantly reduced ability to dehydrogenate C8-CoA , as is the case in human patients where MCAD activity is reduced to near zero with C8-CoA .
# ::tok MCAD  /  mice had a significantly reduced ability to dehydrogenate C8-CoA , as is the case in human patients where MCAD activity is reduced to near zero with C8-CoA .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.611
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt This was less so with palmitoyl-CoA ( C16 : 0 ) .
# ::tok This was less so with palmitoyl-CoA ( C16 : 0 ) .
# ::alignments 9-10|0.0 2-3|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.627
(l / less 
      :mod (0 / 0 
            :mod-of (t / this)))

# ::snt Because there was clearly no MCAD antigen detected in MCAD  /  mice , the residual dehydrogenase activity measured with these two substrates must represent the activity of other chain length -- specific acyl-CoA dehydrogenases .
# ::tok Because there was clearly no MCAD antigen detected in MCAD  /  mice , the residual dehydrogenase activity measured with these two substrates must represent the activity of other chain length -- specific acyl-CoA dehydrogenases .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.629
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt A high degree of neonatal mortality in MCAD  /  mice was a striking observation and appears to be analogous to the patterns of clinical episodes and mortality in MCAD-deficient patients .
# ::tok A high degree of neonatal mortality in MCAD  /  mice was a striking observation and appears to be analogous to the patterns of clinical episodes and mortality in MCAD-deficient patients .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.636
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt MCAD  /  mice exhibited significant neonatal mortality with approximately 60 % of the MCAD  /  pups dying prior to weaning at 3 wk of age .
# ::tok MCAD  /  mice exhibited significant neonatal mortality with approximately 60 % of the MCAD  /  pups dying prior to weaning at 3 wk of age .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.639
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Human patients present with hypoglycemia , hypoketonemia , and nonketotic organic aciduria precipitated by fasting , most frequently during the first 24 mo in life [ 1 ] .
# ::tok Human patients present with hypoglycemia , hypoketonemia , and nonketotic organic aciduria precipitated by fasting , most frequently during the first 24 mo in life [ 1 ] .
# ::alignments 26-27|0.1.0.0.0.0 24-25|0.1.0.0.2 22-23|0.1.0.0.1.0.0 21-22|0.1.0.0.1.0.0.0 17-18|0.1.0.0.1.0 16-17|0.1.0.0.1.0.1 12-13|0.1.0 11-12|0.1.0.1 10-11|0.1.0.1.0 8-9|0 6-7|0.1 4-5|0.0 2-3|0.2 1-2|0.1.0.0.0.1+0.1.0.0.0+0.1.0.0 0-1|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.958
(a2 / and 
      :op1 (h2 / hypoglycemia) 
      :op2 (h / hypoketonemia 
            :ARG2-of (p / precipitate-01 
                  :ARG0 (p3 / person 
                        :ARG0-of (h3 / have-rel-role-91 
                              :ARG1 1 
                              :ARG2 (p4 / patient)) 
                        :mod (h4 / human 
                              :ARG0-of (f / frequent-02 
                                    :ARG1 (m / mo 
                                          :quant 24) 
                                    :degree (m2 / most))) 
                        :poss-of (l / life)) 
                  :ARG1 (a / aciduria 
                        :mod (o / organic)))) 
      :purpose-of (p2 / present))

# ::snt It is likely that neonatal MCAD  /  pups are manifesting sensitivity to fasting with decompensation in a short period of time if maternal milk is not ingested .
# ::tok It is likely that neonatal MCAD  /  pups are manifesting sensitivity to fasting with decompensation in a short period of time if maternal milk is not ingested .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.960
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In contrast , no mortality was noted in adult MCAD  /  mice unless challenged with cold stress and fasting .
# ::tok In contrast , no mortality was noted in adult MCAD  /  mice unless challenged with cold stress and fasting .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.963
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Under cold challenge conditions , however , MCAD  /  mice were unable to maintain body temperature .
# ::tok Under cold challenge conditions , however , MCAD  /  mice were unable to maintain body temperature .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:15.971
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Brown fat is predominantly responsible for thermogenesis and normally expresses high levels of Acadm mRNA .
# ::tok Brown fat is predominantly responsible for thermogenesis and normally expresses high levels of Acadm mRNA .
# ::alignments 14-15|0.3.0.1.1 13-14|0.3.0.1.1.0.0.0+0.3.0.1.1.0.0+0.3.0.1.1.0 11-12|0.3.0.1 10-11|0.3.0.1.0 9-10|0.3.0 8-9|0.3.0.2 7-8|0.3 6-7|0.1 4-5|0 3-4|0.2 1-2|0.0 0-1|0.3.0.0.1+0.3.0.0.0.0+0.3.0.0.0+0.3.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:16.325
(r / responsible-01 
      :ARG0 (f / fat) 
      :ARG1 (t2 / thermogenesi) 
      :degree (p / predominant) 
      :op1-of (a / and 
            :op2 (e / express-01 
                  :ARG0 (p2 / person 
                        :name (n3 / name 
                              :op1 "Brown") 
                        :wiki "Gordon_Brown") 
                  :ARG1 (l / level 
                        :ARG1-of (h / high-02) 
                        :mod (m / mrna 
                              :mod (t / thing 
                                    :name (n / name 
                                          :op1 "Acadm")))) 
                  :ARG1-of (n2 / normal-02))))

# ::snt The microvesicular and macrovesicular hepatic steatosis seen in fasted MCAD  /  mice is consistent with the primary pathological finding seen in human MCAD patients with fasting stress .
# ::tok The microvesicular and macrovesicular hepatic steatosis seen in fasted MCAD  /  mice is consistent with the primary pathological finding seen in human MCAD patients with fasting stress .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:16.327
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Sporadic cardiac lesions in MCAD  /  mice , however , were an interesting and unexpected finding .
# ::tok Sporadic cardiac lesions in MCAD  /  mice , however , were an interesting and unexpected finding .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:16.330
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The diffuse cardiomyopathy with multifocal myocyte degeneration and necrosis observed in MCAD  /  mice has not been reported in human MCAD patients , however , cardiac arrhythmias and dysfunction have been reported in MCAD-deficient patients [ 17 , 18 ] .
# ::tok The diffuse cardiomyopathy with multifocal myocyte degeneration and necrosis observed in MCAD  /  mice has not been reported in human MCAD patients , however , cardiac arrhythmias and dysfunction have been reported in MCAD-deficient patients [ 17 , 18 ] .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:16.338
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Interestingly , cardiomyopathy has been observed in VLCAD deficiency [ 19 ] and other disorders of long chain fat metabolism such as severe CPT-1 and -2 deficiencies [ 1 ] .
# ::tok Interestingly , cardiomyopathy has been observed in VLCAD deficiency [ 19 ] and other disorders of long chain fat metabolism such as severe CPT-1 and -2 deficiencies [ 1 ] .
# ::alignments 28-29|0.0.0.0.0 26-27|0.1 24-25|0 23-24|0.0.2.0+0.0.2+0.0 22-23|0.0.1 20-21|0.0.0.3.1.0.0 19-20|0.0.0 18-19|0.0.0.1 17-18|0.0.0.2 16-17|0.0.0.0 14-15|0.0.0.3 13-14|0.0.0.3.0 12-13|0.0.0.3.1 10-11|0.0.0.0.1 8-9|0.0.0.3.1.0.2 5-6|0.0.0.3.1.0 2-3|0.0.0.3.1.0.1 0-1|0.0.0.3.1.0.3 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:16.918
(a / and 
      :op1 (o / organization 
            :example-of (m / metabolism 
                  :ARG1-of (l / long-03 
                        :ARG0 1 
                        :ARG2 19) 
                  :mod (f / fat) 
                  :mod (c / chain) 
                  :mod-of (d2 / disorder 
                        :mod (o2 / other) 
                        :op1-of (a2 / and 
                              :time-of (o3 / observe-01 
                                    :ARG0 (s2 / such) 
                                    :ARG1 (c2 / cardiomyopathy) 
                                    :location (d3 / deficiency) 
                                    :manner (i / interesting))))) 
            :mod (s / severe) 
            :name (n / name 
                  :op1 "CPT-1")) 
      :op2 (d / deficient))

# ::snt Thus it is tempting to relate the cardiac problems in the mouse to the apparent broader range of substrate utilization of mouse MCAD .
# ::tok Thus it is tempting to relate the cardiac problems in the mouse to the apparent broader range of substrate utilization of mouse MCAD .
# ::alignments 21-22|0.0.1.2 19-20|0.0.1.0 18-19|0.0.1.0.0 16-17|0.0.1 15-16|0.0.1.1 14-15|0.0.1.3 11-12|0.0.0.1 8-9|0.0.0 7-8|0.0.0.0 5-6|0.0 3-4|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:17.058
(t / tempt-01 
      :ARG1 (r2 / relate-01 
            :ARG1 (p / problem 
                  :mod (c / cardiac) 
                  :topic (m2 / mouse)) 
            :ARG2 (r / range-01 
                  :ARG1 (u / utilize-01 
                        :ARG1 (s / substrate)) 
                  :ARG2 (b / broad-02) 
                  :beneficiary (m / mouse) 
                  :mod (a / apparent))) 
      :location (t2 / thu))

# ::snt The inconsistent liver and cardiac lesions in these mice is analogous with the significant inter - and intrafamilial phenotypic heterogeneity seen in MCAD deficiency in humans [ 1,20 ] .
# ::tok The inconsistent liver and cardiac lesions in these mice is analogous with the significant inter - and intrafamilial phenotypic heterogeneity seen in MCAD deficiency in humans [ 1,20 ] .
# ::alignments 25-26|0.0.1.0.0.0 23-24|0.0.1.1.0.0.0 20-21|0.0.1.1.0.0 19-20|0.0.1.1.0.0.1 18-19|0.0.1.1.0.0.1.1 16-17|0.0.1.1.0 14-15|0.0.1.1.0.1 13-14|0.0.1.1.0.0.1.0 10-11|0.0.1.1 8-9|0.0.0 7-8|0.0.0.0 5-6|0.0 4-5|0 3-4|0.0.1 2-3|0.0.1.0 1-2|0.0.1.0.0.1+0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:17.782
(c / cardiac 
      :mod-of (l / lesion 
            :location (m / mouse 
                  :mod (t / this)) 
            :op2-of (a3 / and 
                  :op1 (l2 / liver 
                        :ARG1-of (c2 / consistent-01 
                              :ARG0 (h / human) 
                              :polarity -)) 
                  :op3 (a2 / analogou 
                        :compared-to (a / and 
                              :ARG1-of (s / see-01 
                                    :ARG0 (d / deficiency) 
                                    :ARG2 (h2 / heterogeneity 
                                          :ARG1-of (s2 / significant-02) 
                                          :mod (p / phenotypic))) 
                              :op1 (i / inter-agency))))))

# ::snt In comparisons with our experiences with the other mouse models for acyl-CoA dehydrogenase deficiencies , the overall phenotype of MCAD  /  mice is less severe than that found in LCAD  /  mice , yet more pronounced than the VLCAD  /  or SCAD  /  mouse models [ 16,21,22 ] .
# ::tok In comparisons with our experiences with the other mouse models for acyl-CoA dehydrogenase deficiencies , the overall phenotype of MCAD  /  mice is less severe than that found in LCAD  /  mice , yet more pronounced than the VLCAD  /  or SCAD  /  mouse models [ 16,21,22 ] .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:17.784
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt All of these mutants are cold intolerant and display varying degrees of fatty changes in liver , heart , and kidney .
# ::tok All of these mutants are cold intolerant and display varying degrees of fatty changes in liver , heart , and kidney .
# ::alignments 20-21|0.3 19-20|0 17-18|0.2 15-16|0.1 13-14|0.0 12-13|0.0.0 10-11|0.0.1 9-10|0.0.1.0 8-9|0.0.1.1 7-8|0.0.1.1.0 6-7|0.0.1.1.0.0 5-6|0.0.1.1.0.0.0 3-4|0.0.1.0.0 2-3|0.0.1.0.0.0 0-1|0.0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:17.940
(a / and 
      :location-of (c / change-01 
            :ARG1 (f / fatty) 
            :mod-of (d / degree 
                  :ARG1-of (v / vary-01 
                        :ARG0 (m / mutant 
                              :mod (t / this) 
                              :quant (a3 / all))) 
                  :ARG1-of (d2 / display-01 
                        :op2-of (a2 / and 
                              :op1 (i / intolerant 
                                    :mod (c2 / cold)))))) 
      :op1 (l / liver) 
      :op2 (h / heart) 
      :op3 (k / kidney))

# ::snt LCAD  /  mice show more spontaneous deaths and gestational losses than the other deficiencies [ 21 ] .
# ::tok LCAD  /  mice show more spontaneous deaths and gestational losses than the other deficiencies [ 21 ] .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:17.941
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The significant neonatal mortality in MCAD  /  mice is distinctive from these other mouse models suggesting a greater degree of sensitivity to fasting intolerance .
# ::tok The significant neonatal mortality in MCAD  /  mice is distinctive from these other mouse models suggesting a greater degree of sensitivity to fasting intolerance .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:17.944
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The phenotypes of both the VLCAD  /  and SCAD  /  mice are relatively mild if the animals are not cold stressed [ 16,22 ] .
# ::tok The phenotypes of both the VLCAD  /  and SCAD  /  mice are relatively mild if the animals are not cold stressed [ 16,22 ] .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:17.946
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The MCAD-deficient mouse offers new insights into the pathogenesis of mitochondrial -oxidation deficiencies and will provide a robust tool to better understand the role of fatty acids in other relevant diseases .
# ::tok The MCAD-deficient mouse offers new insights into the pathogenesis of mitochondrial -oxidation deficiencies and will provide a robust tool to better understand the role of fatty acids in other relevant diseases .
# ::alignments 30-31|0.1.1.0.0.0 29-30|0.1.1.0.0.0.0 28-29|0.1.1.0.0.0.1 26-27|0.1.1.0.0.1 25-26|0.1.1.0.0.1.0 23-24|0.1.1.0.0 21-22|0.1.1.0 20-21|0.1.1.0.1 18-19|0.1.1 17-18|0.1.1.1 15-16|0.1 13-14|0 12-13|0.1.0 8-9|0.0.2 5-6|0.0.1 4-5|0.0.1.0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:18.372
(a2 / and 
      :op1 (o2 / offer-01 
            :ARG0 (m / mouse) 
            :ARG1 (i / insight 
                  :mod (n / new)) 
            :ARG2 (p2 / pathogenesi)) 
      :op2 (p / provide-01 
            :ARG0 (d2 / deficient) 
            :ARG1 (t / tool 
                  :ARG0-of (u / understand-01 
                        :ARG1 (r2 / role 
                              :op1 (d / disease 
                                    :ARG1-of (r / relevant-01) 
                                    :mod (o / other)) 
                              :poss (a / acid 
                                    :mod (f / fatty))) 
                        :degree (g / good)) 
                  :mod (r3 / robust))))

# ::snt Construction of MCAD targeting vector .
# ::tok Construction of MCAD targeting vector .
# ::alignments 4-5|0.0 3-4|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:18.394
(t / target-01 
      :ARG1 (v / vector) 
      :ARG1-of (c / construct-01))

# ::snt A neomycin resistance gene cassette [ 23 ] was subcloned into the SalI site of pGEM11Zf ( + ) .
# ::tok A neomycin resistance gene cassette [ 23 ] was subcloned into the SalI site of pGEM11Zf ( + ) .
# ::alignments 15-16|0.2 13-14|0.2.0 6-7|0.2.1 4-5|0.0.0 3-4|0.0 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:18.518
(r / resist-01 
      :ARG0 (g / gene 
            :mod-of (c / cassette)) 
      :ARG1 (n / neomycin) 
      :ARG2 (p / pGEM11Zf 
            :consist (s / site) 
            :mod-of 23))

# ::snt The plasmid was digested with EcoRI and the overhangs were filled with Klenow enzyme .
# ::tok The plasmid was digested with EcoRI and the overhangs were filled with Klenow enzyme .
# ::alignments 13-14|0.1.1 10-11|0.1 8-9|0.1.0 6-7|0 5-6|0.0.1.0.0+0.0.1.0+0.0.1 3-4|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:18.658
(a / and 
      :op1 (d / digest-01 
            :ARG1 (p / plasmid) 
            :ARG2 (t / thing 
                  :name (n / name 
                        :op1 "EcoRI"))) 
      :op2 (f / fill-01 
            :ARG1 (o / overhang-01) 
            :ARG2 (e / enzyme)))

# ::snt Subsequent ligation of the blunt ends recircularized the vector and destroyed the EcoRI site within the polylinker of the pGEMl1Zf ( + ) plasmid .
# ::tok Subsequent ligation of the blunt ends recircularized the vector and destroyed the EcoRI site within the polylinker of the pGEMl1Zf ( + ) plasmid .
# ::alignments 23-24|0.0.1.0.0 16-17|0.3 13-14|0.0.0 12-13|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 10-11|0.0 9-10|0 8-9|0.2 5-6|0.0.1.0 4-5|0.0.1 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:19.136
(a / and 
      :ARG0-of (d / destroy-01 
            :ARG1 (s / site 
                  :mod (t / thing 
                        :name (n / name 
                              :op1 "EcoRI"))) 
            :ARG1-of (b / blunt-02 
                  :manner-of (e / end-01 
                        :ARG1 (p / plasmid)))) 
      :op1 (l / ligation 
            :mod (s2 / subsequent)) 
      :op2 (v / vector) 
      :op3 (p2 / polylink))

# ::snt Next , an 8-kb Acadm genomic fragment spanning exons 8 , 9 , and 10 and flanking intron sequences , originally obtained from a Lambda FIXII 129Sv mouse genomic library [ 24,25 ] , was directionally cloned into the NotI and XhoI sites of pGEM11Zf ( + ) .
# ::tok Next , an 8-kb Acadm genomic fragment spanning exons 8 , 9 , and 10 and flanking intron sequences , originally obtained from a Lambda FIXII 129Sv mouse genomic library [ 24,25 ] , was directionally cloned into the NotI and XhoI sites of pGEM11Zf ( + ) .
# ::alignments 44-45|0.0.1.0.0.2.1 42-43|0.0.1.0.0.2 41-42|0.0.1.0.0.1.0.0+0.0.1.0.0.1.0+0.0.1.0.0.1 40-41|0.0.1.0.0 39-40|0.0.1.0.0.0.1.0+0.0.1.0.0.0.1+0.0.1.0.0.0 36-37|0.0.1.0.0.2.0 29-30|0.0.1.0.1 27-28|0.0.1.0.0.2.0.0 24-26|0.0.1.0.1.0.1.1+0.0.1.0.1.0.1.0+0.0.1.0.1.0.1+0.0.1.0.1.0 21-22|0.0.1.0 20-21|0.0.1.0.2 18-19|0.1.1 17-18|0.1.1.0 16-17|0.1 15-16|0 14-15|0.0.1.0.0.0.2 13-14|0.0.2.0 11-12|0.0.1.0.0.0.0 9-10|0.1.0 8-9|0.0.2 7-8|0.0 6-7|0.0.1 4-5|0.0.0.0.0+0.0.0.0+0.0.0 0-1|0.0.1.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:21.005
(a2 / and 
      :op1 (s3 / span-01 
            :ARG0 (t3 / thing 
                  :name (n4 / name 
                        :op1 "Acadm")) 
            :ARG1 (f2 / fragment-01 
                  :ARG1 (o / obtain-01 
                        :ARG0 (a / and 
                              :op1 (c / country 
                                    :mod-of 9 
                                    :name (n2 / name 
                                          :op1 "NotI") 
                                    :quant 10) 
                              :op2 (t / thing 
                                    :name (n / name 
                                          :op1 "XhoI")) 
                              :op3 (s / site 
                                    :ARG1-of (c2 / clone-01 
                                          :ARG0 (m / mouse)) 
                                    :consist-of (p / pGEM11Zf))) 
                        :ARG2 (l / library 
                              :mod (t2 / thing 
                                    :mod (n5 / next) 
                                    :name (n3 / name 
                                          :op1 "Lambda" 
                                          :op2 "FIXII"))) 
                        :mod (o2 / original))) 
            :ARG2 (e / exon 
                  :op1-of (a3 / and))) 
      :op2 (f / flank-01 
            :ARG0 8 
            :ARG1 (s2 / sequence 
                  :mod (i / intron))))

# ::snt The vector was digested with BamHI and EcoRI to remove a 1.3-kb BamHI/EcoRI genomic fragment containing exon 10 and flanking intron sequences .
# ::tok The vector was digested with BamHI and EcoRI to remove a 1.3-kb BamHI/EcoRI genomic fragment containing exon 10 and flanking intron sequences .
# ::alignments 21-22|0.1.0 20-21|0.1.0.0 19-20|0.1 18-19|0 17-18|0.0.0.1.0.0.0 16-17|0.0.1 15-16|0.0 14-15|0.0.0 12-13|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 9-10|0.0.0.1 7-8|0.0.0.1.0.2.0.0+0.0.0.1.0.2.0+0.0.0.1.0.2 6-7|0.0.0.1.0 5-6|0.0.0.1.0.1.0.0+0.0.0.1.0.1.0+0.0.0.1.0.1 3-4|0.0.0.1.0.0 1-2|0.0.0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:21.560
(a / and 
      :op1 (c / contain-01 
            :ARG0 (f2 / fragment-01 
                  :ARG1 (t / thing 
                        :name (n / name 
                              :op1 "BamHI/EcoRI")) 
                  :ARG1-of (r / remove-01 
                        :ARG2 (a2 / and 
                              :ARG2-of (d / digest-01 
                                    :ARG0 10 
                                    :ARG1 (v / vector)) 
                              :op1 (t3 / thing 
                                    :name (n3 / name 
                                          :op1 "BamHI")) 
                              :op2 (t2 / thing 
                                    :name (n2 / name 
                                          :op1 "EcoRI"))))) 
            :ARG1 (e / exon)) 
      :op2 (f / flank-01 
            :ARG1 (s / sequence 
                  :mod (i / intron))))

# ::snt The digested vector , without the 1.3-kb BamHI/EcoRI genomic fragment , was purified by gel purification and recircularized by ligation using three oligonucleotides : 5  - AATTGTCGACA-3  ; 5  GATCGTCGACA-3  ; and 5  - TCGATGTCGAC-3  .
# ::tok The digested vector , without the 1.3-kb BamHI/EcoRI genomic fragment , was purified by gel purification and recircularized by ligation using three oligonucleotides : 5  - AATTGTCGACA-3  ; 5  GATCGTCGACA-3  ; and 5  - TCGATGTCGAC-3  .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:21.562
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The recircularized vector , resulting from the ligation of the long arm to the short arm of homology , contained a unique SalI site where the 1.3-kb exon 10 region was deleted .
# ::tok The recircularized vector , resulting from the ligation of the long arm to the short arm of homology , contained a unique SalI site where the 1.3-kb exon 10 region was deleted .
# ::alignments 31-32|0.1.0 29-30|0.1.0.0 28-29|0.1.0.0.0 27-28|0.0.0.0 23-24|0.1 21-22|0.1.1 19-20|0 17-18|0.0.0.1.0.0.0 15-16|0.0.0.1.0.0.0.0 14-15|0.0.0.1.0.0.0.0.0 11-12|0.0.0.1.0 10-11|0.0.0.1.0.0 7-8|0.0.0.1 4-5|0.0.0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:21.982
(c / contain-01 
      :ARG0 (v / vector 
            :ARG2-of (r2 / result-01 
                  :ARG0 (e / exon) 
                  :ARG1 (l2 / ligation 
                        :poss (a2 / arm 
                              :ARG1-of (l / long-03 
                                    :ARG0 (h / homology 
                                          :mod-of (a / arm 
                                                :mod (s2 / short))))))) 
            :mod (r3 / recirculariz)) 
      :ARG1 (s / site 
            :ARG0-of (d / delete-01 
                  :ARG1 (r / region 
                        :quant 10)) 
            :mod (u / unique)))

# ::snt Generation of MCAD-deficient mice .
# ::tok Generation of MCAD-deficient mice .
# ::alignments 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:21.989
(g / generation 
      :mod (m / mouse))

# ::snt The Acadm insertion vector was linearized by SalI digestion , the site of the 1.3-kb genomic fragment deletion , and electroporated into E14 -- 1 ES cells ( a kind gift from R. Kuhn ) , derived from 129P2 mice .
# ::tok The Acadm insertion vector was linearized by SalI digestion , the site of the 1.3-kb genomic fragment deletion , and electroporated into E14 -- 1 ES cells ( a kind gift from R. Kuhn ) , derived from 129P2 mice .
# ::alignments 39-40|0.1.0.0 36-37|0.1.0.0.0 32-34|0.2.1.1+0.2.1.0+0.2.1+0.2 30-31|0.2.0+0.2.0.0 29-30|0.2.0.0.0 26-27|0.1.0.0.0.1 25-26|0.1.0.0.0.1.0 24-25|0.1.0.1.0 22-23|0.0.0.0+0.0.0+0.0 19-20|0 17-18|0.1 16-17|0.1.0 11-12|0.1.1 8-9|0.1.0.0.0.0 3-4|0.1.0.1.2 2-3|0.1.0.1 1-2|0.1.0.1.1.0.0+0.1.0.1.1.0+0.1.0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:22.495
(a / and 
      :location (c2 / country 
            :name (n2 / name 
                  :op1 "E14")) 
      :op1 (d2 / deletion 
            :ARG1-of (f / fragment-01 
                  :ARG0 (m / mouse 
                        :ARG2-of (d / derive-01 
                              :ARG0 (d3 / digestion) 
                              :ARG1 (c / cell 
                                    :mod (e / e)))) 
                  :purpose (i / insert-01 
                        :ARG0 1 
                        :ARG1 (t2 / thing 
                              :name (n3 / name 
                                    :op1 "Acadm")) 
                        :mod-of (v / vector))) 
            :consist (s / site)) 
      :op2 (p / person 
            :ARG0-of (g / gift-01 
                  :ARG1 (t / thing 
                        :mod (k / kind))) 
            :name (n / name 
                  :op1 "R." 
                  :op2 "Kuhn")))

# ::snt Correctly targeted Acadm insertion vector was designed to undergo gap repair of the 1.3-kb deletion upon double stranded -- break repair [ 26 ] during homologous recombination .
# ::tok Correctly targeted Acadm insertion vector was designed to undergo gap repair of the 1.3-kb deletion upon double stranded -- break repair [ 26 ] during homologous recombination .
# ::alignments 26-27|0.0.1.1.0.0.1 25-26|0.0.1.0.0 22-23|0.0.0 20-21|0.0.1.1.0.0.0 19-20|0.0.1.1.0.0 17-18|0 16-17|0.0.1.1.0.0.0.0 14-15|0.0.1.1.0.1.0 10-11|0.0.1.1.0.1 9-10|0.0.1.1.0.1.1 8-9|0.0.1.1.0 6-7|0.0.1.1 4-5|0.0.1 3-4|0.0.1.0 2-3|0.0.1.1.0.1.2.0.0+0.0.1.1.0.1.2.0+0.0.1.1.0.1.2 1-2|0.0 0-1|0.0.1.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:22.842
(s / strand-01 
      :ARG1 (t2 / target-01 
            :ARG0 26 
            :ARG1 (v / vector 
                  :ARG1-of (i / insert-01 
                        :ARG0 (h / homologou)) 
                  :ARG1-of (d3 / design-01 
                        :ARG3 (u / undergo-28 
                              :ARG1 (b / break-up-08 
                                    :ARG1 (r2 / repair-01 
                                          :ARG1 (d / double)) 
                                    :time (r / recombination)) 
                              :ARG2 (r3 / repair-01 
                                    :ARG0 (d2 / deletion) 
                                    :ARG1 (g / gap) 
                                    :location (t / thing 
                                          :name (n / name 
                                                :op1 "Acadm"))))) 
                  :quant (c / correctly))))

# ::snt Southern blot analysis was conducted to confirm homologous recombination .
# ::tok Southern blot analysis was conducted to confirm homologous recombination .
# ::alignments 8-9|0.0.1 7-8|0.0.1.0 6-7|0.0 4-5|0 2-3|0.0.0 1-2|0.0.0.1 0-1|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:22.878
(c2 / conduct-01 
      :ARG1 (c / confirm-01 
            :ARG0 (a / analyze-01 
                  :ARG1 (t / thing 
                        :name (n / name 
                              :op1 "Southern")) 
                  :ARG1-of (b / blot-01)) 
            :ARG1 (r / recombination 
                  :mod (h / homologou))))

# ::snt Genomic DNA from G418 resistant ES colonies was digested with EcoRI , electrophoresed , blotted , and probed with an 850-bp probe ( probe A ) generated by PCR from Acadm exon 10 to intron 10 .
# ::tok Genomic DNA from G418 resistant ES colonies was digested with EcoRI , electrophoresed , blotted , and probed with an 850-bp probe ( probe A ) generated by PCR from Acadm exon 10 to intron 10 .
# ::alignments 35-36|0.2.1 34-35|0.3.1.1.0 32-33|0.1.0 31-32|0.3.1.0 30-31|0.3.1.0.0.0.0+0.3.1.0.0.0+0.3.1.0.0 26-27|0.3.1.1 23-24|0.0 21-22|0.3.1 17-18|0.3 16-17|0 14-15|0.2 10-11|0.1.1.0.0+0.1.1.0+0.1.1 8-9|0.1 6-7|0.2.0 3-6|0.2.0.0.0.2+0.2.0.0.0.1+0.2.0.0.0.0+0.2.0.0.0+0.2.0.0 1-2|0.3.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:23.325
(a / and 
      :ARG1-of (p / probe-01) 
      :op1 (d / digest-01 
            :ARG0 10 
            :ARG1 (t2 / thing 
                  :name (n2 / name 
                        :op1 "EcoRI"))) 
      :op2 (b / blot-01 
            :ARG0 (c / colony 
                  :mod (t3 / thing 
                        :name (n3 / name 
                              :op1 (g2 / G418) 
                              :op2 (r / resistant) 
                              :op3 (e2 / ES)))) 
            :ARG1 10) 
      :op3 (p3 / probe-01 
            :ARG1 (d2 / DNA) 
            :ARG2 (p2 / probe-01 
                  :ARG0 (e / exon 
                        :mod (t / thing 
                              :name (n / name 
                                    :op1 "Acadm"))) 
                  :ARG1 (g / generate-01 
                        :ARG1 (i / intron)))))

# ::snt This DNA fragment is not present within Acadm insertion vector and was expected to hybridize to a 13.2-kb genomic DNA fragment upon homologous recombination .
# ::tok This DNA fragment is not present within Acadm insertion vector and was expected to hybridize to a 13.2-kb genomic DNA fragment upon homologous recombination .
# ::alignments 23-24|0.0.1.1.1 22-23|0.0.1.0.0.0 20-21|0.0.1.1 19-20|0.0.1.1.0 14-15|0.0.1 12-13|0.0 10-11|0 9-10|0.0.1.0.0.1 8-9|0.0.1.0.0 7-8|0.0.1.0.1.0+0.0.1.0.1+0.0.1.0 5-6|0.0.0.1 4-5|0.0.0.1.0 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:23.656
(a / and 
      :op1 (e / expect-01 
            :ARG0 (f2 / fragment-01 
                  :ARG1 (d2 / DNA) 
                  :domain-of (p / present 
                        :polarity -) 
                  :mod (t2 / this)) 
            :ARG1 (h2 / hybridize-01 
                  :ARG0 (t / thing 
                        :ARG1-of (i / insert-01 
                              :ARG0 (h / homologou) 
                              :mod-of (v / vector)) 
                        :name (n / name 
                              :op1 "Acadm")) 
                  :ARG2 (f / fragment-01 
                        :ARG1 (d / DNA) 
                        :ARG2 (r / recombination)))))

# ::snt Correctly targeted ES cell clones were microinjected into B6 blastocysts to generate chimeric mice .
# ::tok Correctly targeted ES cell clones were microinjected into B6 blastocysts to generate chimeric mice .
# ::alignments 13-14|0.0.0.0.0 12-13|0.0.0.0.0.0 11-12|0.0.0.0 9-10|0.0.0.0.1 4-5|0.0.0 3-4|0.0.0.1 2-3|0.0.0.2 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:23.963
(c4 / correctly 
      :mod-of (t / target-01 
            :ARG1 (c2 / clone-01 
                  :ARG0-of (g / generate-01 
                        :ARG1 (m / mouse 
                              :mod (c / chimeric)) 
                        :ARG2 (b / blastocyst)) 
                  :ARG1 (c3 / cell) 
                  :mod (e / e))))

# ::snt Chimeric mice were subsequently backcrossed to B6 and 129P2 mice to produce gene-targeted mice AcadmtmUab1 / + ( MCAD + /  ) and eventually AcadmtmUab1/tm1Uab MCAD  /  ( B6 ; 129 ) mice .
# ::tok Chimeric mice were subsequently backcrossed to B6 and 129P2 mice to produce gene-targeted mice AcadmtmUab1 / + ( MCAD + /  ) and eventually AcadmtmUab1/tm1Uab MCAD  /  ( B6 ; 129 ) mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:23.966
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Mice were negative for mouse pathogens based on serological assays for ten different viruses , aerobic bacterial cultures of nasopharynx and cecum , examinations for endo - and ectoparasites , and histopathology of all major organs .
# ::tok Mice were negative for mouse pathogens based on serological assays for ten different viruses , aerobic bacterial cultures of nasopharynx and cecum , examinations for endo - and ectoparasites , and histopathology of all major organs .
# ::alignments 35-36|0.1.1.0.0.1 34-35|0.1.1.0.0 33-34|0.1.1.0.0.1.0 31-32|0.1.3 30-31|0.1 28-29|0.0 27-28|0 25-26|0.1.2.0 23-24|0.1.2 21-22|0.1.2.1.2 20-21|0.1.2.1 19-20|0.1.2.1.1 17-18|0.1.2.1.0 16-17|0.1.1.0.0.0 15-16|0.1.2.1.3 13-14|0.1.1 12-13|0.1.1.0 9-10|0.1.0.0.0.1 8-9|0.1.0.0.0.1.0 6-7|0.1.0.0.0 5-6|0.1.0.0.0.0 4-5|0.1.0.0.0.0.0 2-3|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:24.388
(a3 / and 
      :op1 (e / ectoparasit) 
      :op2 (a2 / and 
            :op1 (n2 / negative 
                  :domain (m3 / mouse 
                        :ARG0-of (b2 / base-02 
                              :ARG1 (p / pathogen 
                                    :mod (m2 / mouse)) 
                              :ARG2 (a6 / assay 
                                    :mod (s / serological))))) 
            :op2 (v / virus 
                  :ARG1-of (d / differ-02 
                        :ARG2 (m / major-02 
                              :ARG0 (b / bacterial) 
                              :ARG1 (o / organ 
                                    :quant (a / all))))) 
            :op3 (e3 / examine-01 
                  :ARG1 (e2 / endo) 
                  :op4-of (a4 / and 
                        :op1 (c2 / culture) 
                        :op2 (n / nasopharynx) 
                        :op3 (c / cecum) 
                        :time (a5 / aerobic))) 
            :op4 (h / histopathology)))

# ::snt RNA analysis .
# ::tok RNA analysis .
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:24.393
(a / analyze-01 
      :ARG1 (r / rna))

# ::snt Total RNA was isolated from the heart of 30 day old MCAD + / + , MCAD + /  , and MCAD  /  mice by standard techniques using guanidinium thiocyanate method [ 27 ] .
# ::tok Total RNA was isolated from the heart of 30 day old MCAD + / + , MCAD + /  , and MCAD  /  mice by standard techniques using guanidinium thiocyanate method [ 27 ] .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:24.395
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Reverse transcription was performed using random oligonucleotides as recommended by the manufacturer ( Clontech , Mountain View , California , United States ) .
# ::tok Reverse transcription was performed using random oligonucleotides as recommended by the manufacturer ( Clontech , Mountain View , California , United States ) .
# ::alignments 20-22|0.1.1.3.1+0.1.1.3.0.1+0.1.1.3.0.0+0.1.1.3.0+0.1.1.3 18-19|0.1.1.1.1.1+0.1.1.1.1.0.0+0.1.1.1.1.0+0.1.1.1.1 15-17|0.1.0.0.0.1+0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 13-14|0.1.1.1.0.0.0+0.1.1.1.0.0+0.1.1.1.0 11-12|0 8-9|0.1.1.1 6-7|0.1.1.0 5-6|0.0 4-5|0.1.1 3-4|0.1.1.2 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:25.465
(m / manufacture-01 
      :ARG1 (r2 / random) 
      :ARG2 (t / transcription 
            :ARG1-of (r3 / reverse-01 
                  :ARG0 (c2 / country 
                        :name (n3 / name 
                              :op1 "Mountain" 
                              :op2 "View"))) 
            :ARG2-of (u / use-01 
                  :ARG1 (o / oligonucleotid) 
                  :ARG1-of (r / recommend-01 
                        :ARG0 (p / person 
                              :name (n4 / name 
                                    :op1 "Clontech")) 
                        :ARG2 (s / state 
                              :name (n2 / name 
                                    :op1 "California") 
                              :wiki "California")) 
                  :ARG1-of (p2 / perform-02) 
                  :location (c / country 
                        :name (n / name 
                              :op1 "United" 
                              :op2 "States") 
                        :wiki "United_States"))))

# ::snt PCR was subsequently performed using oligonucleotides specific to exon 7 and exon 11 of Acadm .
# ::tok PCR was subsequently performed using oligonucleotides specific to exon 7 and exon 11 of Acadm .
# ::alignments 14-15|0.1.0.0+0.1.0+0.1 12-13|0.2.0.0.0 11-12|0.0 10-11|0 9-10|0.2.0.0.1.0 8-9|0.2.1 6-7|0.2 5-6|0.2.0 4-5|0.2.0.0 3-4|0.2.0.0.1 2-3|0.2.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:25.659
(a / and 
      :op1 (e / exon) 
      :op2 (t / thing 
            :name (n / name 
                  :op1 "Acadm")) 
      :prep-to-of (s / specific-02 
            :ARG1 (o / oligonucleotid 
                  :ARG1-of (u / use-01 
                        :ARG0 11 
                        :ARG1-of (p / perform-02 
                              :ARG0 7 
                              :time (s2 / subsequent)))) 
            :ARG2 (e2 / exon)))

# ::snt PCR amplifications were performed as described above .
# ::tok PCR amplifications were performed as described above .
# ::alignments 6-7|0.0.0 5-6|0.0 3-4|0.0.1 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:25.706
(a2 / amplification 
      :ARG0-of (d / describe-01 
            :ARG1 (a / above) 
            :ARG1-of (p / perform-02)) 
      :mod (p2 / PCR))

# ::snt PCR fragments were subsequently sequenced after subcloning into pGEM-T Easy vector ( Promega , Madison , Wisconsin , United States ) .
# ::tok PCR fragments were subsequently sequenced after subcloning into pGEM-T Easy vector ( Promega , Madison , Wisconsin , United States ) .
# ::alignments 18-20|0.4.1+0.4.0.1+0.4.0.0+0.4.0+0.4 16-17|0.5.2+0.5.0.0+0.5.0+0.5 14-15|0.1.0.0+0.1.0+0.1 12-13|0.0.0.0+0.0.0+0.0 10-11|0.3 9-10|0.3.0 5-6|0.2 3-4|0.5.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:25.876
(f / fragment-01 
      :ARG0 (o / organization 
            :name (n4 / name 
                  :op1 "Promega")) 
      :ARG1 (c2 / country 
            :name (n3 / name 
                  :op1 "Madison")) 
      :domain-of (a / after) 
      :mod (v / vector 
            :mod (e / easy)) 
      :op1-of (c / country 
            :name (n / name 
                  :op1 "United" 
                  :op2 "States") 
            :wiki "United_States") 
      :op1-of (s / state 
            :name (n2 / name 
                  :op1 "Wisconsin") 
            :poss-of (s2 / subsequent) 
            :wiki "Wisconsin"))

# ::snt In order to determine the extent of Acadm mRNA expressed from the MCAD  /  mice , northern blot analysis was performed .
# ::tok In order to determine the extent of Acadm mRNA expressed from the MCAD  /  mice , northern blot analysis was performed .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:25.881
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Total RNA was isolated from heart , liver , brown fat , brain , kidney , skeletal muscle , white fat , and testes of 3-mo-old MCAD + / + and MCAD  /  mice using the Ultraspec RNA Isolation Kit ( BIOTEX Laboratories , Inc. , Houston , Texas , United States ) as per manufacturer 's protocol .
# ::tok Total RNA was isolated from heart , liver , brown fat , brain , kidney , skeletal muscle , white fat , and testes of 3-mo-old MCAD + / + and MCAD  /  mice using the Ultraspec RNA Isolation Kit ( BIOTEX Laboratories , Inc. , Houston , Texas , United States ) as per manufacturer 's protocol .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:25.886
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Ten g of total RNA from each sample was loaded onto a 0.8 % agarose-formaldehyde gel , transferred to nitrocellulose filter ( Hybond N ; GE Healthcare Amersham Biosciences Corp. , Piscataway , New Jersey , United States ) , and hybridized with 32P-radiolabeled full-length mouse Acadm cDNA probe using standard procedures [ 28 ] .
# ::tok Ten g of total RNA from each sample was loaded onto a 0.8 % agarose-formaldehyde gel , transferred to nitrocellulose filter ( Hybond N ; GE Healthcare Amersham Biosciences Corp. , Piscataway , New Jersey , United States ) , and hybridized with 32P-radiolabeled full-length mouse Acadm cDNA probe using standard procedures [ 28 ] .
# ::alignments 53-54|0.0.0.0 51-52|0.0.0.2.1.0.0.2.0.0.1 50-51|0.0.0.2.1.0.0.2.0.0.1.0 49-50|0.0.0.2.1.0.0.2.0.0 48-49|0.0.0.2.1.0.0.2.0 47-48|0.0.0.2.1.0.0.2 46-47|0.0.0.2.1.0.0.2.1.0.0+0.0.0.2.1.0.0.2.1.0+0.0.0.2.1.0.0.2.1 45-46|0.0.0.2.1.0.0 44-45|0.0.0.2.1.0.0.0 43-44|0.0.0.2.1.0.0.1 41-42|0.0.0.2.1.0 40-41|0.0.0.2.1 36-38|0.0.0.2.1.0.0.2.0.0.0.1+0.0.0.2.1.0.0.2.0.0.0.0.1+0.0.0.2.1.0.0.2.0.0.0.0.0+0.0.0.2.1.0.0.2.0.0.0.0+0.0.0.2.1.0.0.2.0.0.0 33-35|0.4.0.1+0.4.0.0+0.4.0+0.4 31-32|0.3.0.0+0.3.0+0.3 25-30|0.2.0.4+0.2.0.3+0.2.0.2+0.2.0.1+0.2.0.0+0.2.0+0.2 24-25|0 23-24|0.1 20-21|0.0.0 19-20|0.0 17-18|0.0.0.2 15-16|0.0.0.2.0.0.1.0 13-14|0.0.0.2.0.0.0.0.0.0 12-13|0.0.0.2.0.0.0.0.0.0.0 10-11|0.0.0.2.0.0.1 9-10|0.0.0.2.0.0 7-8|0.0.0.2.0.0.0.0.0 6-7|0.0.0.2.0.0.0.0.0.1 4-5|0.0.0.2.0.0.0.0 3-4|0.0.0.2.0.0.0 1-2|0.0.0.2.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:27.708
(a2 / and 
      :op1 (n7 / nitrocellulose 
            :mod-of (f2 / filter-02 
                  :ARG0 28 
                  :ARG1 (t4 / ten) 
                  :ARG2-of (t2 / transfer-01 
                        :ARG1 (g2 / g 
                              :ARG1-of (l / load-01 
                                    :ARG1-of (t3 / total-01 
                                          :ARG2 (r / rna 
                                                :source (s2 / sample-01 
                                                      :ARG1 (p3 / percentage-entity 
                                                            :value 0.8) 
                                                      :mod (e / each)))) 
                                    :time (o2 / onto 
                                          :op1 (g / gel)))) 
                        :op1-of (a / and 
                              :op2 (h / hybridize-01 
                                    :ARG1 (m / mouse 
                                          :mod (f / full-length) 
                                          :mod 32p-radiolabel 
                                          :mod-of (c / cdna 
                                                :ARG0-of (p2 / probe-01 
                                                      :ARG1 (u / use-01 
                                                            :ARG0 (c2 / country 
                                                                  :name (n2 / name 
                                                                        :op1 "United" 
                                                                        :op2 "States") 
                                                                  :wiki "United_States") 
                                                            :ARG1 (p / procedure 
                                                                  :ARG1-of (s / standard-02)))) 
                                                :mod (t / thing 
                                                      :name (n / name 
                                                            :op1 "Acadm"))))))))) 
      :op2 (n6 / N) 
      :op3 (o / organization 
            :name (n5 / name 
                  :op1 "GE" 
                  :op2 "Healthcare" 
                  :op3 "Amersham" 
                  :op4 "Biosciences" 
                  :op5 "Corp.")) 
      :op4 (c4 / country 
            :name (n4 / name 
                  :op1 "Piscataway")) 
      :op5 (c3 / country 
            :name (n3 / name 
                  :op1 "New" 
                  :op2 "Jersey")))

# ::snt Hybridizations were performed under highly stringent conditions ( 42 C in 2  SSC , 50 % formamide , 10 % dextran sulfate , 5  Denhardt 's reagent , 1 % SDS , and salmon sperm DNA ) for 18 h .
# ::tok Hybridizations were performed under highly stringent conditions ( 42 C in 2  SSC , 50 % formamide , 10 % dextran sulfate , 5  Denhardt 's reagent , 1 % SDS , and salmon sperm DNA ) for 18 h .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:27.710
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The hybridized filter was washed two times in 4  SSC , 0.1 % SDS and two times in 2  SSC ; 0.1 % SDS at 55 C for 1 h .
# ::tok The hybridized filter was washed two times in 4  SSC , 0.1 % SDS and two times in 2  SSC ; 0.1 % SDS at 55 C for 1 h .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:27.712
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The filter was exposed to autoradiographic film ( Hyperfilm MP ; GE Healthcare Amersham Biosciences , Piscataway , New Jersey , United States ) .
# ::tok The filter was exposed to autoradiographic film ( Hyperfilm MP ; GE Healthcare Amersham Biosciences , Piscataway , New Jersey , United States ) .
# ::alignments 21-23|0.1.0.0.0.0.1.1+0.1.0.0.0.0.1.0.1+0.1.0.0.0.0.1.0.0+0.1.0.0.0.0.1.0+0.1.0.0.0.0.1 18-20|0.1.0.0.0.0.2.0.1+0.1.0.0.0.0.2.0.0+0.1.0.0.0.0.2.0+0.1.0.0.0.0.2 16-17|0.1.0.0.0.0.0.0.0+0.1.0.0.0.0.0.0+0.1.0.0.0.0.0 11-15|0.1.1.3+0.1.1.2+0.1.1.1+0.1.1.0+0.1.1+0.1 10-11|0 9-10|0.1.0.1+0.1.0+0.1.0.0 6-7|0.1.0.0.0.1 5-6|0.0 3-4|0.1.0.0.0 1-2|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:28.195
(a / and 
      :op1 (a2 / autoradiographic) 
      :op2 (o / organization 
            :ARG1-of (h / have-org-role-91 
                  :ARG0 (p / person 
                        :ARG2-of (e / expose-01 
                              :ARG1 (f2 / filter-02 
                                    :ARG1 (c3 / country 
                                          :name (n3 / name 
                                                :op1 "Piscataway")) 
                                    :op1-of (c / country 
                                          :name (n / name 
                                                :op1 "United" 
                                                :op2 "States") 
                                          :wiki "United_States") 
                                    :op1-of (c2 / country 
                                          :name (n2 / name 
                                                :op1 "New" 
                                                :op2 "Jersey"))) 
                              :ARG4 (f / film))) 
                  :ARG2 (m / MP)) 
            :name (n4 / name 
                  :op1 "GE" 
                  :op2 "Healthcare" 
                  :op3 "Amersham" 
                  :op4 "Biosciences")))

# ::snt Replicate agarose-formaldehyde gels were stained by ethidium bromide to verify equal RNA loading .
# ::tok Replicate agarose-formaldehyde gels were stained by ethidium bromide to verify equal RNA loading .
# ::alignments 12-13|0.0 11-12|0.0.0 10-11|0 9-10|0.0.1 7-8|0.0.1.0.0 6-7|0.0.1.0.0.0 4-5|0.0.1.0 2-3|0.0.1.0.1 0-1|0.0.1.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:28.290
(e / equal-01 
      :ARG1 (l / load-01 
            :ARG1 (r / rna) 
            :ARG1-of (v / verify-01 
                  :purpose-of (s / stain-01 
                        :ARG0 (b / bromide 
                              :mod (e2 / ethidium)) 
                        :ARG1 (g / gel 
                              :ARG1-of (r2 / replicate-01))))))

# ::snt Immunoblot analysis of MCAD protein .
# ::tok Immunoblot analysis of MCAD protein .
# ::alignments 4-5|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:28.298
(a / analyze-01 
      :ARG1 (p / protein))

# ::snt To evaluate the quantity of MCAD protein in mouse tissue , liver samples from 6 -- 8-wk-old MCAD + / + ( n = 1 ) and MCAD  /  ( n = 3 ) mice were immediately frozen in liquid nitrogen and stored at  80 C .
# ::tok To evaluate the quantity of MCAD protein in mouse tissue , liver samples from 6 -- 8-wk-old MCAD + / + ( n = 1 ) and MCAD  /  ( n = 3 ) mice were immediately frozen in liquid nitrogen and stored at  80 C .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:28.301
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt For analysis , tissue was homogenized and lysed in RIPA buffer ( 1  PBS , 1 % Nonidet P-40 , 0.5 % sodium deoxycholate , and 1 % SDS ) with 10 % glycerol and Complete Protease Inhibitor , ( Roche Diagnostics Corporation , Indianapolis , Indiana , United States ) , 1 mM of phenylmethylsulfonylfluoride , and 1 mM of sodium orthovanadate .
# ::tok For analysis , tissue was homogenized and lysed in RIPA buffer ( 1  PBS , 1 % Nonidet P-40 , 0.5 % sodium deoxycholate , and 1 % SDS ) with 10 % glycerol and Complete Protease Inhibitor , ( Roche Diagnostics Corporation , Indianapolis , Indiana , United States ) , 1 mM of phenylmethylsulfonylfluoride , and 1 mM of sodium orthovanadate .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:28.304
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Lysates were quantified by Bradford BCA protein assay ( Bio-Rad , Hercules , California , United States ) .
# ::tok Lysates were quantified by Bradford BCA protein assay ( Bio-Rad , Hercules , California , United States ) .
# ::alignments 15-17|0.1.0.1+0.1.0.0.1+0.1.0.0.0+0.1.0.0+0.1.0 13-14|0.1.2.1+0.1.2.0.0+0.1.2.0+0.1.2 11-12|0.1.1.0.0+0.1.1.0+0.1.1 9-10|0.2.0.0+0.2.0+0.2 7-8|0.0 6-7|0.0.0 4-6|0.0.1.0.1+0.0.1.0.0+0.0.1.0+0.0.1 2-3|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:28.547
(q / quantify-01 
      :ARG0 (a / assay 
            :mod (p / protein) 
            :mod (o2 / organization 
                  :name (n5 / name 
                        :op1 "Bradford" 
                        :op2 "BCA"))) 
      :ARG1 (l / lysat 
            :mod (c / country 
                  :name (n / name 
                        :op1 "United" 
                        :op2 "States") 
                  :wiki "United_States") 
            :poss (c2 / country 
                  :name (n3 / name 
                        :op1 "Hercules")) 
            :poss-of (s / state 
                  :name (n2 / name 
                        :op1 "California") 
                  :wiki "California")) 
      :ARG2 (o / organization 
            :name (n4 / name 
                  :op1 "Bio-Rad")))

# ::snt Protein lysates were denatured , separated in 8 % SDS-PAGE , and transferred overnight onto a 0.45 m nitrocellulose membrane ( Schleicher and Schuell , Keene , New Hampshire , United States ) .
# ::tok Protein lysates were denatured , separated in 8 % SDS-PAGE , and transferred overnight onto a 0.45 m nitrocellulose membrane ( Schleicher and Schuell , Keene , New Hampshire , United States ) .
# ::alignments 30-32|0.0.0.2.0.2.1+0.0.0.2.0.2.0.1+0.0.0.2.0.2.0.0+0.0.0.2.0.2.0+0.0.0.2.0.2 27-29|0.2.1+0.2.0.1+0.2.0.0+0.2.0+0.2 25-26|0.1.0.0+0.1.0+0.1 22-23|0 21-22|0.0.1.0+0.0.1+0.0 19-20|0.0.0.3.0 18-19|0.0.0.3.0.0 17-18|0.0.0.2.0.1 14-15|0.0.0.3 13-14|0.0.0.4 12-13|0.0.0 11-12|0.0.0.2 8-9|0.0.0.1 7-8|0.0.0.1.0 5-6|0.0.0.2.0 1-2|0.0.0.0 0-1|0.0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:29.102
(a / and 
      :op1 (p / person 
            :ARG0-of (t / transfer-01 
                  :ARG1 (l / lysat) 
                  :ARG2 (p2 / percentage-entity 
                        :value 8) 
                  :op2-of (a2 / and 
                        :op1 (s2 / separate-01 
                              :ARG0 (p3 / protein) 
                              :ARG1 (m2 / m) 
                              :ARG2 (c / country 
                                    :name (n / name 
                                          :op1 "United" 
                                          :op2 "States") 
                                    :wiki "United_States"))) 
                  :time (o / onto 
                        :op1 (m / membrane 
                              :mod (n5 / nitrocellulose))) 
                  :time (o2 / overnight)) 
            :name (n4 / name 
                  :op1 "Schleicher")) 
      :op2 (c2 / country 
            :name (n3 / name 
                  :op1 "Keene")) 
      :op3 (s / state 
            :name (n2 / name 
                  :op1 "New" 
                  :op2 "Hampshire") 
            :wiki "New_Hampshire"))

# ::snt After blocking with 5 % nonfat milk in phosphate-buffered saline with 0.1 % Tween-20 , the membrane was immunoblotted overnight at 4 C with 1:500 dilution of an anti-MCAD antibody .
# ::tok After blocking with 5 % nonfat milk in phosphate-buffered saline with 0.1 % Tween-20 , the membrane was immunoblotted overnight at 4 C with 1:500 dilution of an anti-MCAD antibody .
# ::alignments 29-30|0.0.0.0.3 25-26|0.0.0.0.3.0 22-23|0.0.0.0.2.0 21-22|0.0.0.0.2 19-20|0.0.0.1.0 16-17|0.0.0.0.1 12-13|0.0.0.0.0 11-12|0.0.0.0.0.0 9-10|0.0 8-9|0 6-7|0.0.0 5-6|0.0.0.1 4-5|0.0.0.0.3.0.0 3-4|0.0.0.0.3.0.0.0 1-2|0.0.0.0 0-1|0.0.0.0.4 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:29.265
(p2 / phosphate-buffer 
      :mod-of (s / saline 
            :mod-of (m2 / milk 
                  :ARG2-of (b / block-01 
                        :ARG0 (p / percentage-entity 
                              :value 0.1) 
                        :ARG1 (m / membrane) 
                        :op1-of (4 / 4 
                              :era (c / C)) 
                        :op1-of (a / antibody 
                              :poss-of (d / dilution 
                                    :mod-of (p3 / percentage-entity 
                                          :quant 5))) 
                        :op1-of (a2 / after)) 
                  :mod (n / nonfat 
                        :mod-of (o / overnight)))))

# ::snt Blots were incubated in anti-mouse IgG HRP-conjugated secondary antibody for 2 -- 4 h at room temperature using standard procedures and developed by chemiluminiscence ( Renaissance , NEN Lifesciences Products , Boston , Massachusetts , United States ) .
# ::tok Blots were incubated in anti-mouse IgG HRP-conjugated secondary antibody for 2 -- 4 h at room temperature using standard procedures and developed by chemiluminiscence ( Renaissance , NEN Lifesciences Products , Boston , Massachusetts , United States ) .
# ::alignments 35-37|0.4.1+0.4.0.1+0.4.0.0+0.4.0+0.4 33-34|0.0.2.1+0.0.2.0.0+0.0.2.0+0.0.2 31-32|0.2.2.1+0.2.2.0.0+0.2.2.0+0.2.2 29-30|0.0.0.0.0 28-29|0.0.0.0 25-26|0.0.0.1 23-24|0.3.1 21-22|0.3 20-21|0 19-20|0.2.1 18-19|0.2.1.0 17-18|0.2 16-17|0.3.0 15-16|0.3.0.0 13-14|0.2.0 12-13|0.2.0.0 10-11|0.2.1.0.0 8-9|0.0.1 7-8|0.2.1.1 5-7|0.1.0.1+0.1.0.0+0.1.0+0.1 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:30.562
(a / and 
      :op1 (i / incubate-01 
            :ARG1 (b / blot-01 
                  :ARG0 (l / lifescienc 
                        :mod-of (p / product)) 
                  :ARG1 (r / renaissance)) 
            :ARG2 (a2 / antibody) 
            :op1-of (s / state 
                  :name (n2 / name 
                        :op1 "Massachusetts") 
                  :wiki "Massachusetts")) 
      :op2 (t2 / thing 
            :name (n4 / name 
                  :op1 "IgG" 
                  :op2 "HRP-conjugated")) 
      :op3 (u / use-01 
            :ARG0 (h / h 
                  :quant 4) 
            :ARG1 (p2 / procedure 
                  :ARG1-of (s2 / standard-02 
                        :ARG0 2) 
                  :poss-of (s3 / secondary)) 
            :location (c2 / city 
                  :name (n3 / name 
                        :op1 "Boston") 
                  :wiki "Boston")) 
      :op4 (d / develop-02 
            :ARG0 (t / temperature 
                  :consist-of (r2 / room)) 
            :ARG1 (c3 / chemiluminiscence)) 
      :op5 (c / country 
            :name (n / name 
                  :op1 "United" 
                  :op2 "States") 
            :wiki "United_States"))

# ::snt Liver enzyme activity .
# ::tok Liver enzyme activity .
# ::alignments 2-3|0 1-2|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:30.574
(a / activity-06 
      :ARG1 (l / liver) 
      :mod (e / enzyme))

# ::snt In order to evaluate MCAD activity in mice , liver homogenates were prepared from MCAD + / + ( n = 5 ) and MCAD  /  mice ( n = 5 ) .
# ::tok In order to evaluate MCAD activity in mice , liver homogenates were prepared from MCAD + / + ( n = 5 ) and MCAD  /  mice ( n = 5 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:30.577
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The sensitive and highly specific anaerobic ETF reduction assay was used on tissue extracts with octanoyl-CoA ( C8 ) and palmitoyl-CoA ( C16 ) as substrate as previously described [ 29 ] .
# ::tok The sensitive and highly specific anaerobic ETF reduction assay was used on tissue extracts with octanoyl-CoA ( C8 ) and palmitoyl-CoA ( C16 ) as substrate as previously described [ 29 ] .
# ::alignments 30-31|0.0.2.0 28-29|0 27-28|0.2 25-26|0.1 19-20|0.0.2.2.0 13-14|0.0.2.2.1.0+0.0.2.2.1 12-13|0.0.2.2.1.0.0 10-11|0.0.2.2 8-9|0.0.2.2.2 7-8|0.0.2 6-7|0.0.2.1 5-6|0.0.1.0 4-5|0.0.1 3-4|0.0.1.1 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:30.982
(d / describe-01 
      :ARG1 (a4 / and 
            :op1 (s3 / sensitive-03) 
            :op2 (s2 / specific-02 
                  :ARG1 (a3 / anaerobic) 
                  :degree (h / high)) 
            :op3 (r / reduce-01 
                  :ARG0 29 
                  :ARG1 (e2 / etf) 
                  :ARG1-of (u / use-01 
                        :ARG0 (a / and) 
                        :ARG2 (t / thing 
                              :ARG1-of (e / extract-01 
                                    :ARG0 (t2 / tissue))) 
                        :mod (a2 / assay)))) 
      :compared-to-of (s / substrate) 
      :time (p / previous))

# ::snt Fasting and cold challenge .
# ::tok Fasting and cold challenge .
# ::alignments 3-4|0.1 2-3|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:30.997
(a / and 
      :op1 (f / fast) 
      :op2 (c / challenge-01 
            :mod (c2 / cold)))

# ::snt Eight-wk-old MCAD + / + and MCAD  /  mice were fasted for 18 h ( cold tolerance experiments ) or 24 h ( serum glucose , free fatty acid , organic acid , and carnitine experiments ) prior to analysis .
# ::tok Eight-wk-old MCAD + / + and MCAD  /  mice were fasted for 18 h ( cold tolerance experiments ) or 24 h ( serum glucose , free fatty acid , organic acid , and carnitine experiments ) prior to analysis .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:30.999
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Glucose concentration was measured in 10 l sera using an Ektachem DT II system ( Johnson and Johnson Clinical Diagnostics , Rochester , New York , United States ) .
# ::tok Glucose concentration was measured in 10 l sera using an Ektachem DT II system ( Johnson and Johnson Clinical Diagnostics , Rochester , New York , United States ) .
# ::alignments 26-28|0.1.0.1.2+0.1.0.1.0.1+0.1.0.1.0.0+0.1.0.1.0+0.1.0.1 23-25|0.1.0.0.0.1+0.1.0.0.0.0.1+0.1.0.0.0.0.0+0.1.0.0.0.0+0.1.0.0.0 21-22|0.2.0.0+0.2.0+0.2 17-20|0.1.1.2+0.1.1.1+0.1.1.0+0.1.1+0.1 16-17|0 15-16|0.0.1+0.0.0.0+0.0.0+0.0 13-14|0.1.0.2.1 10-13|0.1.0.2.1.0.0.2+0.1.0.2.1.0.0.1+0.1.0.2.1.0.0.0+0.1.0.2.1.0.0+0.1.0.2.1.0 8-9|0.1.0.2 7-8|0.1.0.2.0 6-7|0.1.0.2.0.0 5-6|0.1.0.1.1 3-4|0.1.0 1-2|0.1.0.0 0-1|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:31.871
(a / and 
      :op1 (p / person 
            :name (n5 / name 
                  :op1 "Johnson") 
            :wiki -) 
      :op2 (o / organization 
            :ARG0-of (m / measure-01 
                  :ARG1 (c4 / concentrate-02 
                        :ARG1 (c2 / city 
                              :name (n2 / name 
                                    :op1 "New" 
                                    :op2 "York") 
                              :wiki "New_York_City") 
                        :mod (g / glucose)) 
                  :ARG2 (c / country 
                        :name (n / name 
                              :op1 "United" 
                              :op2 "States") 
                        :quant 10 
                        :wiki "United_States") 
                  :manner (u / use-01 
                        :ARG0 (s2 / serum 
                              :mod (l / l)) 
                        :ARG1 (s / system 
                              :mod (t / thing 
                                    :name (n6 / name 
                                          :op1 "Ektachem" 
                                          :op2 "DT" 
                                          :op3 "II"))))) 
            :name (n4 / name 
                  :op1 "Johnson" 
                  :op2 "Clinical" 
                  :op3 "Diagnostics")) 
      :op3 (c3 / country 
            :name (n3 / name 
                  :op1 "Rochester")))

# ::snt Total non-esterified fatty acids ( NEFA ) were measured by an enzymatic , colorimetric method ( `` NEFA-C '' reagents , Wako Diagnostics , Richmond , Virginia , United States ) .
# ::tok Total non-esterified fatty acids ( NEFA ) were measured by an enzymatic , colorimetric method ( `` NEFA-C '' reagents , Wako Diagnostics , Richmond , Virginia , United States ) .
# ::alignments 28-30|0.0.1.1+0.0.1.0.1+0.0.1.0.0+0.0.1.0+0.0.1 26-27|0.0.3.1+0.0.3.0.0+0.0.3.0+0.0.3 24-25|0.0.2.1+0.0.2.0.0+0.0.2.0+0.0.2 22-23|0 19-20|0.0.0.0.1 14-15|0.0.0.0.0 13-14|0.0.0.0.0.0 11-12|0.0.0.0.0.1 8-9|0.0.0.0 3-4|0.0.0 2-3|0.0.0.1 1-2|0.0.0.2 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:32.286
(d / diagnostic 
      :op1 (t / total-01 
            :ARG1 (a / acid 
                  :ARG1-of (m2 / measure-01 
                        :ARG0 (m / method 
                              :mod (c3 / colorimetric) 
                              :mod (e / enzymatic)) 
                        :ARG2 (r / reagent)) 
                  :mod (f / fatty) 
                  :mod (n4 / non-esterifi)) 
            :location (c / country 
                  :name (n / name 
                        :op1 "United" 
                        :op2 "States") 
                  :wiki "United_States") 
            :op1-of (c2 / city 
                  :name (n3 / name 
                        :op1 "Richmond") 
                  :wiki "Richmond,_Virginia") 
            :op1-of (s / state 
                  :name (n2 / name 
                        :op1 "Virginia") 
                  :wiki "Virginia")))

# ::snt The assay was modified to accommodate a reduced sample size ( 10 l ) and use of a microplate reader for measurement of optical density at 550 nm .
# ::tok The assay was modified to accommodate a reduced sample size ( 10 l ) and use of a microplate reader for measurement of optical density at 550 nm .
# ::alignments 27-28|0.0.0.2 24-25|0.0 23-24|0 21-22|0.0.0 19-20|0.0.0.1+0.0.0.1.0 15-16|0.0.0.1.0.0 14-15|0.0.0.1.0.0.0 11-12|0.0.0.0 9-10|0.0.0.1.0.0.0.0.0.1 8-9|0.0.0.1.0.0.0.0.0.1.0 7-8|0.0.0.1.0.0.0.0.0.1.1 5-6|0.0.0.1.0.0.0.0.0 3-4|0.0.0.1.0.0.0.0 1-2|0.0.0.1.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:32.700
(o / optics 
      :mod-of (d / density 
            :ARG1-of (m / measure-01 
                  :ARG0 10 
                  :ARG1-of (r / read-01 
                        :ARG0 (p / person 
                              :ARG1-of (u / use-01 
                                    :op1-of (a / and 
                                          :ARG1-of (m2 / modify-01 
                                                :ARG2 (a2 / accommodate-01 
                                                      :ARG0 (a3 / assay) 
                                                      :ARG1 (s / size 
                                                            :ARG1-of (s2 / sample-01) 
                                                            :ARG1-of (r2 / reduce-01)))))))) 
                  :ARG2 (n / nm))))

# ::snt Urine organic acid analyses were performed using gas chromatography-mass spectroscopy as previously described [ 22,30 ] , except tetracosane ( C24 ; Sigma , St. Louis , Missouri , United States ) was used as the internal standard , and quantitative determinations were made based on comparison with synthetic calibration standards .
# ::tok Urine organic acid analyses were performed using gas chromatography-mass spectroscopy as previously described [ 22,30 ] , except tetracosane ( C24 ; Sigma , St. Louis , Missouri , United States ) was used as the internal standard , and quantitative determinations were made based on comparison with synthetic calibration standards .
# ::alignments 50-51|0.2.0.0.0 49-50|0.2.0.0.0.0 48-49|0.2.1.2.0.0.2.0.0 46-47|0.2.0.0 44-45|0.2.0 41-42|0.2.1.2.0.0.0.0 40-41|0.2.1.2.0.0.0 39-40|0.2 37-38|0.2.1.2.0.0.2 36-37|0.2.1.2.0.0.2.0 33-34|0.2.1.2.0.0 29-31|0.2.1.2.0.1.1+0.2.1.2.0.1.0.1+0.2.1.2.0.1.0.0+0.2.1.2.0.1.0+0.2.1.2.0.1 27-28|0.2.1.0.1+0.2.1.0.0.0+0.2.1.0.0+0.2.1.0 24-26|0.1.0.1+0.1.0.0+0.1.0+0.1 22-23|0.0 21-22|0 18-19|0.2.1.2.0.0.1 17-18|0.2.1.2.0 12-13|0.2.1.2 11-12|0.2.1.2.1 9-10|0.2.1.1.2 8-9|0.2.1.1.1 7-8|0.2.1.1.1.0 6-7|0.2.1.1 5-6|0.2.1 3-4|0.2.1.1.0 2-3|0.2.1.1.0.0 1-2|0.2.1.1.0.1 0-1|0.2.1.1.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:35.304
(a2 / and 
      :op1 (s5 / sigma) 
      :op2 (c4 / country 
            :name (n3 / name 
                  :op1 "St." 
                  :op2 "Louis")) 
      :op2-of (a / and 
            :ARG1-of (b / base-02 
                  :ARG2 (c2 / compare-01 
                        :ARG1 (s / standard 
                              :mod (c / calibration)))) 
            :op1 (p2 / perform-02 
                  :ARG0 (s4 / state 
                        :name (n2 / name 
                              :op1 "Missouri") 
                        :wiki "Missouri") 
                  :ARG1 (u2 / use-01 
                        :ARG0 (a3 / analysis 
                              :mod (a4 / acid) 
                              :mod (o / organic) 
                              :mod (u3 / urine)) 
                        :ARG1 (c5 / chromatography-mas 
                              :mod (g / gas)) 
                        :manner (s6 / spectroscopy)) 
                  :condition (d2 / describe-01 
                        :ARG1 (e / except-01 
                              :ARG0 (u / use-01 
                                    :ARG0 (q / quantitative 
                                          :mod-of (d / determination)) 
                                    :ARG1 (t / tetracosane) 
                                    :ARG2 (s3 / standard 
                                          :mod (i / internal-02 
                                                :ARG0 (s2 / synthetic)))) 
                              :ARG1 (c3 / country 
                                    :name (n / name 
                                          :op1 "United" 
                                          :op2 "States") 
                                    :wiki "United_States")) 
                        :time (p / previous)))))

# ::snt Acylcarnitine analyses in serum and bile were conducted using electrospray tandem mass spectrometry [ 31,32 ] .
# ::tok Acylcarnitine analyses in serum and bile were conducted using electrospray tandem mass spectrometry [ 31,32 ] .
# ::alignments 12-13|0.1.0 11-12|0.1.0.0 10-11|0.1.0.0.0 9-10|0.1.0.0.0.0 8-9|0.1 7-8|0 5-6|0.0.1 4-5|0.0 3-4|0.0.0 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:35.503
(c / conduct-01 
      :ARG0 (a / and 
            :op1 (s2 / serum) 
            :op2 (b / bile)) 
      :ARG1 (u / use-01 
            :ARG1 (s / spectrometry 
                  :mod (m / mass 
                        :mod (t / tandem 
                              :mod (e / electrospray)))) 
            :ARG2 (a2 / analysis)))

# ::snt Histopathology .
# ::tok Histopathology .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:35.506
(h / Histopathology)

# ::snt Twelve mice were examined for gross and histologic abnormalities , including one male and one female MCAD  /  mouse 18-mo-old , one male and one female MCAD + / + mouse 6-mo-old , two male and two female MCAD  /  mice 4-wk-old , and two male and two female MCAD + / + mice 4-wk-old .
# ::tok Twelve mice were examined for gross and histologic abnormalities , including one male and one female MCAD  /  mouse 18-mo-old , one male and one female MCAD + / + mouse 6-mo-old , two male and two female MCAD  /  mice 4-wk-old , and two male and two female MCAD + / + mice 4-wk-old .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:35.508
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Kidney , spleen , pancreas , liver , brain , heart , testicles , ovaries , and skeletal muscle were fixed by immersion in buffered 10 % formalin , processed routinely for paraffin sectioning , sectioned at 5 m , and stained with hematoxylin and eosin .
# ::tok Kidney , spleen , pancreas , liver , brain , heart , testicles , ovaries , and skeletal muscle were fixed by immersion in buffered 10 % formalin , processed routinely for paraffin sectioning , sectioned at 5 m , and stained with hematoxylin and eosin .
# ::alignments 45-46|0.2.1.1 44-45|0.2.1 43-44|0.2.1.0 41-42|0.2 40-41|0 38-39|0.1.0 37-38|0.0.2.1.5.0 35-36|0.1 33-34|0.0.1 32-33|0.0.1.1 30-31|0.0.3 29-30|0.0 27-28|0.2.0 26-27|0.0.2.0.0.0 25-26|0.0.2.0.0 24-25|0.2.0.0 22-23|0.0.2.0 20-21|0.0.2 18-19|0.0.2.1.5 17-18|0.0.2.1.5.1 16-17|0.0.2.1 14-15|0.0.2.1.4 12-13|0.0.2.1.3 10-11|0.0.2.1.2 8-9|0.0.1.0 6-7|0.0.2.1.1 4-5|0.2.0.0.0 2-3|0.0.2.1.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:36.497
(a2 / and 
      :op1 (p2 / process-01 
            :ARG0 (k / kidney) 
            :ARG1 (s3 / section-01 
                  :ARG0 (b2 / brain) 
                  :ARG1 (p / paraffin)) 
            :ARG2-of (f2 / fix-03 
                  :ARG0 (i / immersion 
                        :mod (1 / 10 
                              :value-of (p3 / percentage-entity))) 
                  :ARG1 (a3 / and 
                        :op1 (s5 / spleen) 
                        :op2 (l / liver) 
                        :op3 (h2 / heart) 
                        :op4 (t / testicl) 
                        :op5 (o / ovari) 
                        :op6 (m2 / muscle-01 
                              :ARG1 5 
                              :mod (s4 / skeletal)))) 
            :manner (r / routine)) 
      :op2 (s2 / section-01 
            :ARG1 (m / m)) 
      :op3 (s / stain-01 
            :ARG1 (f / formalin 
                  :mod (b / buffer-01 
                        :ARG0 (p4 / pancrea))) 
            :ARG2 (a / and 
                  :op1 (h / hematoxylin) 
                  :op2 (e / eosin))))

# ::snt Frozen liver sections were prepared using standard methods and sections were stained with Oil-red-O .
# ::tok Frozen liver sections were prepared using standard methods and sections were stained with Oil-red-O .
# ::alignments 13-14|0.1.2.0.0+0.1.2.0+0.1.2 11-12|0.1 9-10|0.1.1 8-9|0 7-8|0.0.0 6-7|0.0.0.0 5-6|0.0 4-5|0.1.0.0 2-3|0.1.0 1-2|0.1.0.2 0-1|0.1.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:36.736
(a / and 
      :op1 (u / use-01 
            :ARG1 (m / method 
                  :ARG1-of (s3 / standard-02))) 
      :op2 (s / stain-01 
            :ARG0 (s4 / section 
                  :ARG1-of (p / prepare-02) 
                  :ARG1-of (f / freeze-01) 
                  :mod (l / liver)) 
            :ARG1 (s2 / section) 
            :ARG2 (t / thing 
                  :name (n / name 
                        :op1 "Oil-red-O"))))

# ::snt Slides were examined without knowledge of genotype or age .
# ::tok Slides were examined without knowledge of genotype or age .
# ::alignments 8-9|0.0.0.1 7-8|0.0.0 6-7|0.0.0.0 4-5|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:36.771
(e / examine-01 
      :ARG1 (s / slide-01 
            :op1-of (o / or 
                  :op2 (g / genotype) 
                  :op3 (a / age-01))) 
      :manner (k / knowledge))

# ::snt Other mice were examined because of sporadic clinical disease .
# ::tok Other mice were examined because of sporadic clinical disease .
# ::alignments 8-9|0.1.0 7-8|0.1.0.0 6-7|0.1.0.1 4-5|0.1 3-4|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:36.805
(e / examine-01 
      :ARG1 (m / mouse 
            :mod (o / other)) 
      :ARG1-of (c2 / cause-01 
            :ARG0 (d / disease 
                  :mod (c / clinical) 
                  :mod (s / sporadic))))

# ::snt Those with visible cardiac enlargement were evaluated for cardiac lesions .
# ::tok Those with visible cardiac enlargement were evaluated for cardiac lesions .
# ::alignments 9-10|0.1 8-9|0.1.0 6-7|0 4-5|0.0.0 3-4|0.0.0.0 2-3|0.0.0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:36.860
(e / evaluate-01 
      :ARG1 (t / that 
            :prep-with (e2 / enlargement 
                  :mod (c2 / cardiac) 
                  :mod (v / visible))) 
      :ARG2 (l / lesion 
            :mod (c / cardiac)))

# ::snt Statistical analyses .
# ::tok Statistical analyses .
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:36.865
(a / analysis 
      :mod (s / statistical))

# ::snt Results between groups were tested for statistical significance using Student 's t-test .
# ::tok Results between groups were tested for statistical significance using Student 's t-test .
# ::alignments 11-12|0.1.0.0 9-10|0.1.0.0.0.0+0.1.0.0.0 8-9|0.1.0 7-8|0.1 6-7|0.1.1 4-5|0 2-3|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:36.985
(t2 / test-01 
      :ARG1 (r / result-01 
            :ARG1 (g / group)) 
      :ARG2 (s2 / significant-02 
            :ARG0-of (u / use-01 
                  :ARG1 (t / t-t 
                        :poss (p / person 
                              :ARG0-of (s / study-01)))) 
            :mod (s3 / statistic)))

# ::snt A p < 0.05 was set as significant .
# ::tok A p < 0.05 was set as significant .
# ::alignments 7-8|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:36.997
(s / significant-02 
      :ARG1 (p / p))

# ::snt The GenBank ( http://www.ncbi.nlm.nih.gov/Genbank ) accession number for the mouse gene Acadm is U07159 .
# ::tok The GenBank ( http://www.ncbi.nlm.nih.gov/Genbank ) accession number for the mouse gene Acadm is U07159 .
# ::alignments 13-14|0.1.0+0.1+0 11-12|0.0.2.1.0+0.0.2.1+0.0.2 10-11|0.0.2.0 9-10|0.0.2.0.0 6-7|0.0 5-6|0.0.1 1-2|0.0.0.0.0+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:37.051
(t / thing 
      :domain (n3 / number 
            :mod (p / person 
                  :name (n4 / name 
                        :op1 "GenBank")) 
            :mod (a / accession) 
            :quant-of (t2 / thing 
                  :mod (g / gene 
                        :mod (m / mouse)) 
                  :name (n2 / name 
                        :op1 "Acadm"))) 
      :name (n / name 
            :op1 "U07159"))

# ::snt We thank Sushama Varma for technical assistance .
# ::tok We thank Sushama Varma for technical assistance .
# ::alignments 6-7|0.2 5-6|0.2.0 2-4|0.1.0.1+0.1.0.0+0.1.0+0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:37.159
(t2 / thank-01 
      :ARG0 (w / we) 
      :ARG1 (p / person 
            :name (n / name 
                  :op1 "Sushama" 
                  :op2 "Varma")) 
      :ARG2 (a / assist-01 
            :ARG2 (t / technical)))

# ::snt This research was supported by the University of Alabama at Birmingham ( UAB ) Comprehensive Cancer Center ( Oligonucleotide and Transgenic Animal Shared Facilities ) grant P30-CA13148 , UAB Musculoskeletal Disease and Arthritis Center ( Gene Targeting Core Facility ) grant P60-AR20614 , UAB Clinical Nutrition Research Center grant P30-DK-56336 , and by National Institutes of Health grants R01-RR02599 ( PAW ) , T32-RR-07003 ( RJT ) , K01-RR00129 ( RJT ) , RO1-DK45482 ( JV ) , and DK54936 ( JV ) .
# ::tok This research was supported by the University of Alabama at Birmingham ( UAB ) Comprehensive Cancer Center ( Oligonucleotide and Transgenic Animal Shared Facilities ) grant P30-CA13148 , UAB Musculoskeletal Disease and Arthritis Center ( Gene Targeting Core Facility ) grant P60-AR20614 , UAB Clinical Nutrition Research Center grant P30-DK-56336 , and by National Institutes of Health grants R01-RR02599 ( PAW ) , T32-RR-07003 ( RJT ) , K01-RR00129 ( RJT ) , RO1-DK45482 ( JV ) , and DK54936 ( JV ) .
# ::alignments 79-80|0.0.1.1.1.1.3.0.0+0.0.1.1.1.1.3.0+0.0.1.1.1.1.3 78-79|0.0.1.1.1.1 75-76|0.0.1.1.1.1.2 73-74|0.0.1.1.1.1.1.0.0+0.0.1.1.1.1.1.0+0.0.1.1.1.1.1 68-69|0.0.1.1.1.3.0.0+0.0.1.1.1.3.0+0.0.1.1.1.3 63-64|0.0.1.1.1.1.0.1.0+0.0.1.1.1.1.0.1+0.0.1.1.1.1.0 60-61|0.0.1.1.1.0.0.0.0+0.0.1.1.1.0.0.0+0.0.1.1.1.0.0 58-59|0.0.1.1.1.2.3.0.0+0.0.1.1.1.2.3.0+0.0.1.1.1.2.3 57-58|0.0.1.1.1.2 53-57|0.0.1.1.1.2.0.0.3+0.0.1.1.1.2.0.0.2+0.0.1.1.1.2.0.0.1+0.0.1.1.1.2.0.0.0+0.0.1.1.1.2.0.0+0.0.1.1.1.2.0 51-52|0.0.1.1.1 49-50|0.0.1.1.0.0+0.0.1.1.0+0.0.1.1 48-49|0.0.1 43-48|0.0.1.0.0.4+0.0.1.0.0.3+0.0.1.0.0.2+0.0.1.0.0.1+0.0.1.0.0.0+0.0.1.0.0+0.0.1.0 40-41|0.0.1.1.1.0 37-39|0.0.1.1.1.2.2.0.0.1+0.0.1.1.1.2.2.0+0.0.1.1.1.2.2.0.0+0.0.1.1.1.2.2.0.0.0 35-37|0.0.1.1.1.2.2.1.1+0.0.1.1.1.2.2.1.0+0.0.1.1.1.2.2.1+0.0.1.1.1.2.2 28-34|0.0.1.1.1.2.1.0.5+0.0.1.1.1.2.1.0.4+0.0.1.1.1.2.1.0.3+0.0.1.1.1.2.1.0.2+0.0.1.1.1.2.1.0.1+0.0.1.1.1.2.1.0.0+0.0.1.1.1.2.1.0+0.0.1.1.1.2.1 25-26|0.0.1.1.1.1.0.0 20-24|0.2.0.3+0.2.0.2+0.2.0.1+0.2.0.0+0.2.0+0.2 19-20|0 18-19|0.1.0.0+0.1.0+0.1 14-17|0.0.1.1.1.0.1.0.2+0.0.1.1.1.0.1.0.1+0.0.1.1.1.0.1.0.0+0.0.1.1.1.0.1.0+0.0.1.1.1.0.1 12-13|0.0.1.1.1.1.0.0.1.0.0+0.0.1.1.1.1.0.0.1.0+0.0.1.1.1.1.0.0.1 10-11|0.0.1.1.1.1.0.0.0.0+0.0.1.1.1.1.0.0.0 6-9|0.0.0.0.0.2+0.0.0.0.0.1+0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 3-4|0.0 1-2|0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.321
(a3 / and 
      :ARG0-of (s / support-01 
            :ARG1 (r / research-01 
                  :ARG0 (o11 / organization 
                        :name (n18 / name 
                              :op1 "University" 
                              :op2 "of" 
                              :op3 "Alabama")) 
                  :mod (t2 / this)) 
            :ARG1-of (g2 / grant-01 
                  :ARG0 (o5 / organization 
                        :name (n9 / name 
                              :op1 "UAB" 
                              :op2 "Clinical" 
                              :op3 "Nutrition" 
                              :op4 "Research" 
                              :op5 "Center")) 
                  :ARG2 (o4 / organization 
                        :name (n8 / name 
                              :op1 "P30-DK-56336") 
                        :op2-of (a2 / and 
                              :op1 (g3 / grant-01 
                                    :ARG1 (o / organization 
                                          :name (n5 / name 
                                                :op1 "PAW")) 
                                    :ARG2 (o9 / organization 
                                          :name (n15 / name 
                                                :op1 "Comprehensive" 
                                                :op2 "Cancer" 
                                                :op3 "Center"))) 
                              :op1-of (a / and 
                                    :op2 (p4 / person 
                                          :ARG2-of (g4 / grant-01 
                                                :ARG0 (n17 / name 
                                                      :op1 "Birmingham") 
                                                :ARG1 (o10 / organization 
                                                      :name (n16 / name 
                                                            :op1 "UAB"))) 
                                          :name (n4 / name 
                                                :op1 "T32-RR-07003")) 
                                    :op3 (p2 / person 
                                          :name (n2 / name 
                                                :op1 "RO1-DK45482")) 
                                    :op4 (j / jv) 
                                    :op5 (p / person 
                                          :name (n / name 
                                                :op1 "DK54936"))) 
                              :op3 (g / grant-01 
                                    :ARG0 (o3 / organization 
                                          :name (n7 / name 
                                                :op1 "National" 
                                                :op2 "Institutes" 
                                                :op3 "of" 
                                                :op4 "Health")) 
                                    :ARG1 (o6 / organization 
                                          :name (n12 / name 
                                                :op1 "UAB" 
                                                :op2 "Musculoskeletal" 
                                                :op3 "Disease" 
                                                :op4 "and" 
                                                :op5 "Arthritis" 
                                                :op6 "Center")) 
                                    :ARG2 (p5 / person 
                                          :mod-of (c / Core 
                                                :op1-of (n10 / name 
                                                      :name-of (t / thing) 
                                                      :op2 (f / Facility))) 
                                          :name (n11 / name 
                                                :op1 "Gene" 
                                                :op2 "Targeting")) 
                                    :purpose-of (o2 / organization 
                                          :name (n6 / name 
                                                :op1 "R01-RR02599"))) 
                              :op4 (p3 / person 
                                    :name (n3 / name 
                                          :op1 "K01-RR00129")))))) 
      :op1 (o8 / organization 
            :name (n14 / name 
                  :op1 "Oligonucleotide")) 
      :op2 (o7 / organization 
            :name (n13 / name 
                  :op1 "Transgenic" 
                  :op2 "Animal" 
                  :op3 "Shared" 
                  :op4 "Facilities")))

# ::snt bp - base pair .
# ::tok bp - base pair .
# ::alignments 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.327
(p / pair-01 
      :ARG1 (b / base))

# ::snt ES - embryonic stem .
# ::tok ES - embryonic stem .
# ::alignments 3-4|0.0.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.338
(e2 / e 
      :degree-of (e / embryonic 
            :mod-of (s / stem)))

# ::snt ETF - electron transport flavoprotein .
# ::tok ETF - electron transport flavoprotein .
# ::alignments 3-4|0.0.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.347
(e2 / etf 
      :degree-of (e / electron 
            :ARG0-of (t / transport-01)))

# ::snt MCAD - medium-chain acyl-CoA dehydrogenase .
# ::tok MCAD - medium-chain acyl-CoA dehydrogenase .
# ::alignments 3-5|0.0.1+0+0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.360
(a / acyl-CoA 
      :op1-of (n / name 
            :name-of (t / thing) 
            :op2 (d / dehydrogenase)))

# ::snt SCAD - short-chain acyl-CoA dehydrogenase .
# ::tok SCAD - short-chain acyl-CoA dehydrogenase .
# ::alignments 3-5|0.0.2+0+0.0+0.0.0 0-1|0.0.1.0.0+0.0.1.0+0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.379
(a / acyl-CoA 
      :op1-of (n / name 
            :name-of (t / thing) 
            :name-of (o / organization 
                  :name (n2 / name 
                        :op1 "SCAD")) 
            :op2 (d / dehydrogenase)))

# ::snt SD - standard deviation .
# ::tok SD - standard deviation .
# ::alignments 3-4|0 2-3|0.0 0-1|0.1.0.0+0.1.0+0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.394
(d / deviation 
      :ARG1-of (s / standard-02) 
      :poss (c / country 
            :name (n / name 
                  :op1 "SD")))

# ::snt VLCAD - very long-chain acyl-CoA dehydrogenase .
# ::tok VLCAD - very long-chain acyl-CoA dehydrogenase .
# ::alignments 4-6|0.0.1+0+0.0+0.0.0 3-4|0.0.0.0 2-3|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.416
(a / acyl-CoA 
      :op1-of (n / name 
            :name-of (t / thing 
                  :mod (l / long-chain 
                        :degree (v / very))) 
            :op2 (d / dehydrogenase)))

# ::snt Competing interests .
# ::tok Competing interests .
# ::alignments 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.423
(c / compete-01 
      :topic-of (i / interest))

# ::snt The authors have declared that no competing interests exist .
# ::tok The authors have declared that no competing interests exist .
# ::alignments 8-9|0.1 7-8|0.1.0 6-7|0.1.0.0 5-6|0.1.1 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.468
(d / declare-01 
      :ARG0 (a / author-01) 
      :ARG1 (e / exist-01 
            :ARG1 (i / interest 
                  :ARG1-of (c / compete-02)) 
            :polarity -))

# ::snt Author contributions .
# ::tok Author contributions .
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.473
(c / contribute-01 
      :ARG1-of (a / author-01))

# ::snt RJT , JV , PR , DM , and PAW conceived and designed the experiments .
# ::tok RJT , JV , PR , DM , and PAW conceived and designed the experiments .
# ::alignments 14-15|0.4.0 12-13|0.4 11-12|0 10-11|0.4.1.0 9-10|0.3.0.0+0.3.0+0.3 8-9|0.4.1 6-7|0.2.1+0.2.0.0+0.2.0+0.2 4-5|0.1.0.0+0.1.0+0.1 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.601
(a / and 
      :op1 (j / jv) 
      :op2 (c2 / country 
            :name (n4 / name 
                  :op1 "PR")) 
      :op3 (n2 / newspaper 
            :name (n3 / name 
                  :op1 "DM") 
            :wiki "Daily_Mail") 
      :op4 (o / organization 
            :name (n / name 
                  :op1 "PAW")) 
      :op5 (d / design-01 
            :ARG1 (e / experiment-01) 
            :op1-of (a2 / and 
                  :ARG0-of (c / conceive-01))))

# ::snt RJT , DAH , LT , JV , PR , DM , JDS , and PAW performed the experiments .
# ::tok RJT , DAH , LT , JV , PR , DM , JDS , and PAW performed the experiments .
# ::alignments 18-19|0.0.0 16-17|0.0 15-16|0.6 14-15|0 12-13|0.5 10-11|0.4.1+0.4.0.0+0.4.0+0.4 8-9|0.3.0.0+0.3.0+0.3 6-7|0.2 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.669
(a / and 
      :ARG0-of (p / perform-02 
            :ARG1 (e / experiment-01)) 
      :op1 (d / dah) 
      :op2 (j2 / jv) 
      :op3 (c / country 
            :name (n3 / name 
                  :op1 "PR")) 
      :op4 (n / newspaper 
            :name (n2 / name 
                  :op1 "DM") 
            :wiki "Daily_Mail") 
      :op5 (j / jd) 
      :op6 (p2 / paw-01))

# ::snt RJT , DAH , LT , JV , JDS , PR , DM , TRS , and PAW analyzed the data and contributed reagents/materials/analysis tools .
# ::tok RJT , DAH , LT , JV , JDS , PR , DM , TRS , and PAW analyzed the data and contributed reagents/materials/analysis tools .
# ::alignments 24-25|0.4.1 23-24|0.4.1.0 22-23|0.4 21-22|0 20-21|0.3.1 18-19|0.3 17-18|0.2 16-17|0.4.2 14-15|0.1 12-13|0.0.1+0.0.0.0+0.0.0+0.0 10-11|0.4.0.0.0+0.4.0.0+0.4.0 8-9|0.3.0 6-7|0.2.0 2-3|0.4.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:39.950
(a / and 
      :op1 (n / newspaper 
            :name (n2 / name 
                  :op1 "DM") 
            :wiki "Daily_Mail") 
      :op2 (t2 / tr) 
      :op3 (p / paw-01 
            :ARG0 (j2 / jv)) 
      :op4 (a2 / analyze-01 
            :ARG0 (j / jd) 
            :ARG1 (d / data)) 
      :op5 (c / contribute-01 
            :ARG0 (c2 / country 
                  :name (n3 / name 
                        :op1 "PR")) 
            :ARG1 (t / tool 
                  :purpose (r / reagents/materials/analysi 
                        :mod-of (d2 / dah))) 
            :op1-of (a3 / and)))

# ::snt RJT , JV , PR , DM , TRS , JDS , and PAW wrote the paper .
# ::tok RJT , JV , PR , DM , TRS , JDS , and PAW wrote the paper .
# ::alignments 16-17|0.1 14-15|0 13-14|0.0.5 12-13|0.0 10-11|0.0.4 8-9|0.0.3 6-7|0.0.2.1+0.0.2.0.0+0.0.2.0+0.0.2 4-5|0.0.1.0.0+0.0.1.0+0.0.1 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:40.367
(w / write-01 
      :ARG0 (a / and 
            :op1 (j2 / jv) 
            :op2 (c / country 
                  :name (n3 / name 
                        :op1 "PR")) 
            :op3 (n / newspaper 
                  :name (n2 / name 
                        :op1 "DM") 
                  :wiki "Daily_Mail") 
            :op4 (t / tr) 
            :op5 (j / jd) 
            :op6 (p2 / paw-01)) 
      :ARG1 (p / paper))

# ::snt Citation : Tolwani RJ , Hamm DA , Tian L , Sharer JD , Vockley J , et al. ( 2005 ) Medium-chain acyl-CoA dehydrogenase deficiency in gene-targeted mice .
# ::tok Citation : Tolwani RJ , Hamm DA , Tian L , Sharer JD , Vockley J , et al. ( 2005 ) Medium-chain acyl-CoA dehydrogenase deficiency in gene-targeted mice .
# ::alignments 28-29|0.0.0.1.1 27-28|0.0.0.1.1.0 25-26|0.0.0.1 24-25|0.0.0.1.0 22-24|0+0.0.1+0.0+0.0.0 20-21|0.0.0.0.0+0.0.0.0 15-16|0.0.0.1.1.0.3.1+0.0.0.1.1.0.3.0.0+0.0.0.1.1.0.3.0+0.0.0.1.1.0.3 12-13|0.0.0.1.1.1.0.1+0.0.0.1.1.1.0.0.0+0.0.0.1.1.1.0.0+0.0.0.1.1.1.0 11-12|0.0.0.1.1.1.1.0+0.0.0.1.1.1.1+0.0.0.1.1.1 8-10|0.0.0.1.1.0.4.0.1+0.0.0.1.1.0.4.0.0+0.0.0.1.1.0.4.0+0.0.0.1.1.0.4 5-7|0.0.0.1.1.0.0.0.1+0.0.0.1.1.0.0.0.0+0.0.0.1.1.0.0.0+0.0.0.1.1.0.0 2-4|0.0.0.1.1.0.1.0.1+0.0.0.1.1.0.1.0.0+0.0.0.1.1.0.1.0+0.0.0.1.1.0.1 0-1|0.0.0.1.1.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:40.595
(a / acyl-CoA 
      :op2-of (n / name 
            :name-of (t / thing 
                  :li (d3 / date-entity 
                        :year 2005) 
                  :mod-of (d / deficiency 
                        :mod (d2 / dehydrogenase) 
                        :mod (m / mouse 
                              :mod (g / gene-target 
                                    :mod (o / organization 
                                          :name (n6 / name 
                                                :op1 "Hamm" 
                                                :op2 "DA")) 
                                    :mod-of (o2 / organization 
                                          :name (n7 / name 
                                                :op1 "Tolwani" 
                                                :op2 "RJ")) 
                                    :mod-of (c / citation) 
                                    :poss (a2 / aircraft-type 
                                          :name (n2 / name 
                                                :op1 "J-10") 
                                          :wiki "Chengdu_J-10") 
                                    :poss-of (p3 / person 
                                          :name (n5 / name 
                                                :op1 "Tian" 
                                                :op2 "L"))) 
                              :mod-of (p2 / person 
                                    :mod-of (p / product 
                                          :name (n3 / name 
                                                :op1 "JD") 
                                          :wiki "Jack_Daniel's") 
                                    :name (n4 / name 
                                          :op1 "Sharer"))))) 
            :op1 (m2 / Medium-chain)))

# ::snt PLoS Genet 1 ( 2 ) : e23 .
# ::tok PLoS Genet 1 ( 2 ) : e23 .
# ::alignments 7-8|0 4-5|0.0 2-3|0.0.0.0 0-2|0.0.0.1.1+0.0.0.1.0+0.0.0.1+0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T02:45:40.616
(e / e23 
      :quant (2 / 2 
            :op1-of (o / organization 
                  :mod 1 
                  :name (n / name 
                        :op1 "PLoS" 
                        :op2 "Genet"))))

