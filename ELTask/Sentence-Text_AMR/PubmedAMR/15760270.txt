# ::snt PGC-1 Deficiency Causes Multi-System Energy Metabolic Derangements : Muscle Dysfunction , Abnormal Weight Control and Hepatic Steatosis .
# ::tok PGC-1 Deficiency Causes Multi-System Energy Metabolic Derangements : Muscle Dysfunction , Abnormal Weight Control and Hepatic Steatosis .
# ::alignments 11-17|0.0.0.0.0.5+0.0.0.0.0.4+0.0.0.0.0.3+0.0.0.0.0.2+0.0.0.0.0.1+0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 8-10|0.0.0.0.1.0.1+0.0.0.0.1.0.0+0.0.0.0.1.0+0.0.0.0.1 5-7|0+0.1.1+0.1+0.1.0 4-5|0.0 1-3|0.0.0.1.1+0.0.0.1.0+0.0.0.1+0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:33.434
(d / Derangements 
      :mod (e / energy 
            :mod (t2 / thing 
                  :domain (o / organization 
                        :name (n / name 
                              :op1 "Abnormal" 
                              :op2 "Weight" 
                              :op3 "Control" 
                              :op4 "and" 
                              :op5 "Hepatic" 
                              :op6 "Steatosis") 
                        :part (o2 / organization 
                              :name (n2 / name 
                                    :op1 "Muscle" 
                                    :op2 "Dysfunction"))) 
                  :name (n4 / name 
                        :op1 (d2 / Deficiency) 
                        :op2 (c / Causes)))) 
      :op2-of (n3 / name 
            :name-of (t / thing) 
            :op1 (m / Metabolic)))

# ::snt The gene encoding the transcriptional coactivator peroxisome proliferator-activated receptor- coactivator-1 ( PGC-1 ) was targeted in mice .
# ::tok The gene encoding the transcriptional coactivator peroxisome proliferator-activated receptor- coactivator-1 ( PGC-1 ) was targeted in mice .
# ::alignments 16-17|0.1 14-15|0 6-7|0.0.0.0 5-6|0.0.0.0.0 2-3|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:33.741
(t / target-01 
      :ARG0 (g / gene 
            :ARG0-of (e / encode-01 
                  :ARG1 (p / peroxisome 
                        :mod (c / coactivator)))) 
      :ARG1 (m / mouse))

# ::snt PGC-1 null ( PGC-1  /  ) mice were viable .
# ::tok PGC-1 null ( PGC-1  /  ) mice were viable .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:33.745
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt However , extensive phenotyping revealed multi-system abnormalities indicative of an abnormal energy metabolic phenotype .
# ::tok However , extensive phenotyping revealed multi-system abnormalities indicative of an abnormal energy metabolic phenotype .
# ::alignments 13-14|0.0.0.0 12-13|0.0.0.0.0 11-12|0.0.0.0.0.0 10-11|0.0.0.0.1 7-8|0.0.0.0.2 6-7|0.1 4-5|0 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:34.172
(r / reveal-01 
      :ARG0 (p2 / phenotyp 
            :ARG1-of (e2 / extensive-03 
                  :ARG0 (p / phenotype 
                        :mod (m / metabolic 
                              :mod (e / energy)) 
                        :mod (a / abnormal) 
                        :mod (i / indicative)))) 
      :ARG1 (a2 / abnormaliti))

# ::snt The postnatal growth of heart and slow-twitch skeletal muscle , organs with high mitochondrial energy demands , is blunted in PGC-1  /  mice .
# ::tok The postnatal growth of heart and slow-twitch skeletal muscle , organs with high mitochondrial energy demands , is blunted in PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:34.175
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt With age , the PGC-1  /  mice develop abnormally increased body fat , a phenotype that is more severe in females .
# ::tok With age , the PGC-1  /  mice develop abnormally increased body fat , a phenotype that is more severe in females .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:34.179
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Mitochondrial number and respiratory capacity is diminished in slow-twitch skeletal muscle of PGC-1  /  mice , leading to reduced muscle performance and exercise capacity .
# ::tok Mitochondrial number and respiratory capacity is diminished in slow-twitch skeletal muscle of PGC-1  /  mice , leading to reduced muscle performance and exercise capacity .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:34.185
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt PGC-1  /  mice exhibit a modest diminution in cardiac function related largely to abnormal control of heart rate .
# ::tok PGC-1  /  mice exhibit a modest diminution in cardiac function related largely to abnormal control of heart rate .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:34.189
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The PGC-1  /  mice were unable to maintain core body temperature following exposure to cold , consistent with an altered thermogenic response .
# ::tok The PGC-1  /  mice were unable to maintain core body temperature following exposure to cold , consistent with an altered thermogenic response .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:34.197
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Following short-term starvation , PGC-1  /  mice develop hepatic steatosis due to a combination of reduced mitochondrial respiratory capacity and an increased expression of lipogenic genes .
# ::tok Following short-term starvation , PGC-1  /  mice develop hepatic steatosis due to a combination of reduced mitochondrial respiratory capacity and an increased expression of lipogenic genes .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:34.202
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Surprisingly , PGC-1  /  mice were less susceptible to diet-induced insulin resistance than wild-type controls .
# ::tok Surprisingly , PGC-1  /  mice were less susceptible to diet-induced insulin resistance than wild-type controls .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:34.206
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Lastly , vacuolar lesions were detected in the central nervous system of PGC-1  /  mice .
# ::tok Lastly , vacuolar lesions were detected in the central nervous system of PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:34.215
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These results demonstrate that PGC-1 is necessary for appropriate adaptation to the metabolic and physiologic stressors of postnatal life .
# ::tok These results demonstrate that PGC-1 is necessary for appropriate adaptation to the metabolic and physiologic stressors of postnatal life .
# ::alignments 18-19|0.3.1 17-18|0.3.1.0 15-16|0.3 14-15|0.2 13-14|0 12-13|0.1 9-10|0.3.0+0.3.0.0 8-9|0.3.0.0.0 2-3|0.0 1-2|0.0.0.0+0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:34.535
(a / and 
      :ARG1-of (d / demonstrate-01 
            :ARG0 (t2 / thing 
                  :ARG2-of (r / result-01) 
                  :mod (t3 / this))) 
      :op1 (m / metabolic) 
      :op2 (p2 / physiologic) 
      :op3 (s / stressor 
            :beneficiary-of (a2 / adapt-01 
                  :ARG1 (t / thing 
                        :ARG1-of (a3 / appropriate-02))) 
            :part-of (l / life 
                  :mod (p / postnatal))))

# ::snt Mitochondrial functional capacity is dynamically regulated to meet the diverse energy demands imposed on the mammalian organism following birth .
# ::tok Mitochondrial functional capacity is dynamically regulated to meet the diverse energy demands imposed on the mammalian organism following birth .
# ::alignments 18-19|0.0.0.1.0 17-18|0.0.0.1 16-17|0.0 15-16|0 12-13|0.0.0 11-12|0.0.0.0 10-11|0.0.0.0.2 9-10|0.0.0.0.1 7-8|0.0.0.0.0 5-6|0.0.0.0.0.1 4-5|0.0.0.0.0.1.0 2-3|0.0.0.0.0.0 1-2|0.0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:35.080
(m / mammalian 
      :mod-of (o / organism 
            :ARG2-of (i / impose-01 
                  :ARG1 (d / demand-01 
                        :ARG1-of (m2 / meet-03 
                              :ARG0 (c / capacity 
                                    :mod (f2 / functional)) 
                              :ARG1-of (r / regulate-01 
                                    :manner (d3 / dynamically))) 
                        :mod (d2 / diverse) 
                        :mod (e / energy)) 
                  :ARG1-of (f / follow-01 
                        :ARG2 (b / birth-01)))))

# ::snt Postnatal mitochondrial biogenesis involves multiple signaling and transcriptional regulatory pathways that control the coordinate expression of nuclear and mitochondrial genes involved in mitochondrial structure , metabolism , and proliferation [ 1 ] .
# ::tok Postnatal mitochondrial biogenesis involves multiple signaling and transcriptional regulatory pathways that control the coordinate expression of nuclear and mitochondrial genes involved in mitochondrial structure , metabolism , and proliferation [ 1 ] .
# ::alignments 30-31|0.0.0.0.0.1.0.1.3.0 28-29|0.0.0.0.0.1.0.1.0 27-28|0 25-26|0.2 23-24|0.1 20-21|0.0 19-20|0.0.0 17-18|0.0.0.0 16-17|0.0.0.0.0.1.0.0.0 14-15|0.0.0.0.0 13-14|0.0.0.0.0.0 11-12|0.0.0.0.0.1 9-10|0.0.0.0.0.1.0 8-9|0.0.0.0.0.1.0.0 6-7|0.0.0.0.0.1.0.1 5-6|0.0.0.0.0.1.0.1.3 4-5|0.0.0.0.0.1.0.1.3.1 3-4|0.0.0.0.0.1.0.1.1 2-3|0.0.0.0.0.1.0.1.1.0 0-1|0.0.0.0.0.1.0.1.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:37.020
(a / and 
      :ARG2-of (i / involve-01 
            :ARG1 (g / gene 
                  :op2-of (a2 / and 
                        :op1 (e / express-01 
                              :ARG1-of (c / coordinate-01) 
                              :ARG1-of (c2 / control-01 
                                    :ARG0 (p2 / pathway 
                                          :ARG0-of (r / regulate-01 
                                                :ARG1 (n / nucleus)) 
                                          :op3-of (a3 / and 
                                                :ARG0-of (p / proliferate-01) 
                                                :ARG1-of (i2 / involve-01 
                                                      :ARG2 (b / biogenesi)) 
                                                :op1 (p3 / postnatal) 
                                                :op2 (s2 / signal-01 
                                                      :ARG0 1 
                                                      :ARG1 (m2 / multiple))))))))) 
      :op1 (s / structure) 
      :op2 (m / metabolism))

# ::snt Recent evidence points toward a transcriptional coactivator , peroxisome proliferator-activated receptor- ( PPAR ) coactivator-1 ( PGC-1 ) , as an integrator of the molecular regulatory circuitry involved in the transcriptional control of cellular energy metabolism , including mitochondrial function and biogenesis [ 1,2 ] .
# ::tok Recent evidence points toward a transcriptional coactivator , peroxisome proliferator-activated receptor- ( PPAR ) coactivator-1 ( PGC-1 ) , as an integrator of the molecular regulatory circuitry involved in the transcriptional control of cellular energy metabolism , including mitochondrial function and biogenesis [ 1,2 ] .
# ::alignments 41-42|0.0.2.1 40-41|0.0.2 39-40|0.0.2.0 35-36|0.0.0 34-35|0.0.0.0 33-34|0.0.2.0.0 31-32|0.0 27-28|0.0.1 26-27|0.0.1.1 25-26|0.0.1.1.0 24-25|0.0.1.1.1 21-22|0.0.1.1.2 9-10|0 6-7|0.0.1.0 2-3|0.0.1.1.0.0.0 1-2|0.0.1.1.0.0 0-1|0.0.1.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:37.330
(p / proliferator-activat 
      :ARG0-of (c2 / control-01 
            :ARG1 (m / metabolism 
                  :mod (e / energy)) 
            :ARG2-of (i / involve-01 
                  :ARG0 (c4 / coactivator) 
                  :ARG1 (c3 / circuitry 
                        :ARG0-of (r / regulate-01 
                              :ARG1-of (e2 / evidence-01 
                                    :mod-of (p2 / point 
                                          :time (r2 / recent)))) 
                        :mod (m2 / molecule) 
                        :poss-of (i2 / integrator))) 
            :op1-of (a / and 
                  :op2 (f / function-01 
                        :ARG1 (c / cell)) 
                  :op3 (b / biogenesi))))

# ::snt PGC-1 was discovered in a yeast two-hybrid screen for brown adipose-specific factors that interact with the adipogenic nuclear receptor PPAR [ 2 ] .
# ::tok PGC-1 was discovered in a yeast two-hybrid screen for brown adipose-specific factors that interact with the adipogenic nuclear receptor PPAR [ 2 ] .
# ::alignments 21-22|0.0.0.0.0 18-19|0 17-18|0.1 13-14|0.0 11-12|0.0.1 9-10|0.0.1.0 7-8|0.0.0 5-6|0.0.0.0.1 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:37.463
(r / receptor 
      :ARG2-of (i / interact-01 
            :ARG0 (s / screen 
                  :time-of (d / discover-01 
                        :ARG1 2 
                        :time (y / yeast))) 
            :ARG1 (f / factor 
                  :mod (b / brown))) 
      :mod (n / nucleus))

# ::snt Subsequently , two additional PGC-1 family members were identified , PGC-1 related coactivator ( PRC ) [ 3 ] and PGC-1 [ 4,5 ] .
# ::tok Subsequently , two additional PGC-1 family members were identified , PGC-1 related coactivator ( PRC ) [ 3 ] and PGC-1 [ 4,5 ] .
# ::alignments 19-20|0.0.0.1 17-18|0.0.0.1.1 14-15|0.0.0.1.0.0.0+0.0.0.1.0.0+0.0.0.1.0 12-13|0 11-12|0.1 8-9|0.0 6-7|0.0.0.0.1+0.0.0.0+0.0.0 5-6|0.0.0.0.0 3-4|0.0.0.0.0.0 2-3|0.0.0.2 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:38.581
(c2 / coactivator 
      :ARG0-of (i / identify-01 
            :ARG1 (p / person 
                  :ARG0-of (h / have-org-role-91 
                        :ARG1 (f / family 
                              :mod (a2 / additional)) 
                        :ARG2 (m / member)) 
                  :op1-of (a / and 
                        :op2 (c / country 
                              :name (n / name 
                                    :op1 "PRC")) 
                        :quant 3) 
                  :quant 2) 
            :time (s / subsequent)) 
      :ARG1-of (r / relate-01))

# ::snt PGC-1 serves as a direct transcriptional coactivator of nuclear and nonnuclear receptor transcription factors involved in cellular energy metabolism [ 6 ] .
# ::tok PGC-1 serves as a direct transcriptional coactivator of nuclear and nonnuclear receptor transcription factors involved in cellular energy metabolism [ 6 ] .
# ::alignments 20-21|0.0.0.2.0 18-19|0.0.0.0.1.1 17-18|0.0.0.0.1 16-17|0.0.0.0.0 14-15|0.0.0.1 13-14|0.0.0.1.0 12-13|0.0.0.1.0.0 11-12|0.0.0.1.0.0.0 10-11|0 9-10|0.0 8-9|0.0.0.0.1.0 6-7|0.0.0 4-5|0.0.0.2 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:38.784
(n / nonnuclear 
      :op1-of (a / and 
            :quant (c2 / coactivator 
                  :ARG1-of (s / serve-01 
                        :ARG0 (c / cell) 
                        :time (e / energy 
                              :mod (n2 / nucleus) 
                              :mod-of (m / metabolism))) 
                  :ARG1-of (i / involve-01 
                        :ARG0 (f / factor 
                              :mod (t / transcription 
                                    :mod (r / receptor)))) 
                  :ARG1-of (d / direct-02 
                        :ARG0 6))))

# ::snt PGC-1 is distinct among most coactivators in that it exhibits a tissue-enriched expression pattern and is highly inducible by physiologic conditions known to increase the demand for mitochondrial ATP or heat production [ 2,6,7 ] .
# ::tok PGC-1 is distinct among most coactivators in that it exhibits a tissue-enriched expression pattern and is highly inducible by physiologic conditions known to increase the demand for mitochondrial ATP or heat production [ 2,6,7 ] .
# ::alignments 31-32|0.1 30-31|0.1.1 29-30|0.1.2 27-29|0.1.2.1.0.1+0.1.2.1.0.0+0.1.2.1.0+0.1.2.1 25-26|0.1.2.0 23-24|0.1.2.0.1 21-22|0.1.2.0.1.0 20-21|0.1.2.0.1.0.0 19-20|0.1.2.0.1.0.0.0 16-17|0.1.0 14-15|0 13-14|0.0.0 12-13|0.0.0.0 11-12|0.0.0.1 9-10|0.0 5-6|0.1.2.0.0.0 4-5|0.1.2.0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:39.750
(a2 / and 
      :op1 (e2 / exhibit-01 
            :ARG1 (p3 / pattern 
                  :ARG1-of (e / express-01) 
                  :mod (t2 / tissue-enrich)) 
            :domain-of (d2 / distinct)) 
      :op2 (p / produce-01 
            :ARG0 (h2 / high) 
            :ARG1 (h / heat) 
            :op2-of (o / or 
                  :ARG1-of (d / demand-01 
                        :ARG0 (m2 / most 
                              :quant-of (c2 / coactivator)) 
                        :ARG1-of (i / increase-01 
                              :ARG2-of (k / know-02 
                                    :ARG1 (c / condition 
                                          :mod (p2 / physiologic))))) 
                  :op1 (t / thing 
                        :name (n / name 
                              :op1 (m / mitochondrial) 
                              :op2 (a / ATP))))))

# ::snt PGC-1 is enriched in brown adipose tissue ( BAT ) , heart , slow-twitch skeletal muscle , and kidney -- all tissues with high-capacity mitochondrial systems .
# ::tok PGC-1 is enriched in brown adipose tissue ( BAT ) , heart , slow-twitch skeletal muscle , and kidney -- all tissues with high-capacity mitochondrial systems .
# ::alignments 25-26|0.2 24-25|0.2.0 21-22|0 20-21|0.1 18-19|0.0.0.2.3 17-18|0.0.0.2 15-16|0.0.0.2.2 14-15|0.0.0.2.2.0 11-12|0.0.0.2.1 8-9|0.0.0.2.0 6-7|0.0.0 5-6|0.0.0.1 4-5|0.0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:39.960
(t / tissue 
      :ARG0-of (e / enrich-01 
            :ARG1 (t2 / tissue 
                  :mod (b2 / brown) 
                  :mod (a3 / adipose) 
                  :op1-of (a2 / and 
                        :ARG2-of (b / bat-01) 
                        :op2 (h / heart) 
                        :op3 (m2 / muscle-01 
                              :mod (s2 / skeletal)) 
                        :op4 (k / kidney)))) 
      :quant (a / all) 
      :topic (s / system 
            :mod (m / mitochondrial)))

# ::snt The expression of the gene encoding PGC-1 is rapidly induced by cold exposure , short-term exercise , and fasting [ 2,8,9,10,11,12,13,14,15 ] .
# ::tok The expression of the gene encoding PGC-1 is rapidly induced by cold exposure , short-term exercise , and fasting [ 2,8,9,10,11,12,13,14,15 ] .
# ::alignments 18-19|0.0.0.0 17-18|0 15-16|0.2 14-15|0.2.0 12-13|0.0.1 11-12|0.0.1.0 9-10|0.0 8-9|0.0.2 5-6|0.1 4-5|0.1.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:40.735
(a / and 
      :ARG0-of (i / induce-01 
            :ARG1 (e4 / express-01 
                  :ARG1 (f / fast)) 
            :ARG2 (e2 / expose-01 
                  :mod (c / cold)) 
            :manner (r / rapid)) 
      :concession-of (e3 / encode-01 
            :ARG1 (g / gene)) 
      :op1 (e / exercise-02 
            :mod (s / short-term)))

# ::snt These latter observations suggest that PGC-1 is involved in the physiologic control of energy metabolism .
# ::tok These latter observations suggest that PGC-1 is involved in the physiologic control of energy metabolism .
# ::alignments 14-15|0.1.0.1 13-14|0.1.0.1.0 11-12|0.1.0 10-11|0.1.0.0 7-8|0.1 3-4|0 2-3|0.0 1-2|0.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:40.797
(s / suggest-01 
      :ARG0 (o / observation 
            :mod (l / latter) 
            :mod (t / this)) 
      :ARG1 (i / involve-01 
            :ARG2 (c / control-01 
                  :ARG0 (p / physiologic) 
                  :ARG1 (m / metabolism 
                        :mod (e / energy)))))

# ::snt Several lines of evidence , based on the results of overexpression studies , indicate that PGC-1 is sufficient to promote mitochondrial biogenesis and regulate mitochondrial respiratory capacity .
# ::tok Several lines of evidence , based on the results of overexpression studies , indicate that PGC-1 is sufficient to promote mitochondrial biogenesis and regulate mitochondrial respiratory capacity .
# ::alignments 26-27|0.1.0.1.0.0 25-26|0.1.0.1.0.0.0 23-24|0.1.0.1.0 22-23|0.1.0.1 21-22|0.1.0.0 20-21|0.1.0.0.0 19-20|0.1.0 17-18|0.1 13-14|0 11-12|0.0.0.0.0.0 10-11|0.0.0.0.0.0.0 8-9|0.0.0.0.0+0.0.0.0 5-6|0.0.0 3-4|0.0.1 1-2|0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:41.204
(i / indicate-01 
      :ARG0 (l / line 
            :ARG1-of (b2 / base-02 
                  :ARG2 (t / thing 
                        :ARG2-of (r3 / result-01 
                              :ARG1 (s2 / study-01 
                                    :ARG1 (o / overexpression))))) 
            :consist-of (e / evidence-01) 
            :quant (s3 / several)) 
      :ARG1 (s / suffice-01 
            :ARG2 (p / promote-02 
                  :ARG1 (b / biogenesi 
                        :mod (m / mitochondrial)) 
                  :op1-of (a / and 
                        :op2 (r2 / regulate-01 
                              :ARG1 (c / capacity 
                                    :mod (r / respiratory)))))))

# ::snt First , PGC-1 activates the transcription of mitochondrial uncoupling protein-1 ( UCP-1 ) in BAT through interactions with the nuclear hormone receptors PPAR and thyroid receptor [ 2 ] .
# ::tok First , PGC-1 activates the transcription of mitochondrial uncoupling protein-1 ( UCP-1 ) in BAT through interactions with the nuclear hormone receptors PPAR and thyroid receptor [ 2 ] .
# ::alignments 27-28|0.3 25-26|0.2.0 24-25|0.2 23-24|0.1.0.0 22-23|0.1.0.0.0 21-22|0.1.0.0.0.0 20-21|0.1.1 19-20|0.1.1.0 16-17|0.1.0 14-15|0.1 5-6|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:41.453
(a2 / activate-01 
      :ARG1 (t2 / transcription) 
      :ARG1-of (b / bat-01 
            :location (i / interaction 
                  :topic (a / and 
                        :op1 (p / PPAR 
                              :mod (r2 / receptor)))) 
            :topic (h / hormone 
                  :mod (n / nucleus))) 
      :ARG2 (t / thyroid 
            :mod-of (r / receptor)) 
      :op1-of 2)

# ::snt Second , forced expression studies in adipogenic and myogenic mammalian cell lines demonstrated that PGC-1 activates mitochondrial biogenesis through a group of transcription factor targets including nuclear respiratory factors 1 and 2 ( NRF-1 and -2 ) and mitochondrial transcription factor A ( Tfam ) , key transcriptional regulators of mitochondrial DNA transcription and replication [ 8 ] .
# ::tok Second , forced expression studies in adipogenic and myogenic mammalian cell lines demonstrated that PGC-1 activates mitochondrial biogenesis through a group of transcription factor targets including nuclear respiratory factors 1 and 2 ( NRF-1 and -2 ) and mitochondrial transcription factor A ( Tfam ) , key transcriptional regulators of mitochondrial DNA transcription and replication [ 8 ] .
# ::alignments 56-57|0.0.1.0.0.0.1.0.0.0.0 54-55|0.0.1.0.0.0.2 53-54|0.0.1.0.0.0.1.0 52-53|0.0.1.0.0.0.1.0.0.1 51-52|0.0.1.0.0.0.1.0.0.1.0 48-49|0.0.1.0.0.0.1.0.0 46-47|0.0.1.0.0.0.1.0.0.0 40-41|0.0.1.0.0.0.3 39-40|0.0.1.0.0.0.4 37-38|0.0.1.0.0.0.1.1 34-35|0.0.1.0.0.0.1 33-34|0.0.1.0.0.0.0.0+0.0.1.0.0.0.0+0.0.1.0.0.0 31-32|0.0.1.0.1.0 30-31|0.0.1.0.3.1 29-30|0.0.1.0.0.1 28-29|0.0.1.0.0.0.1.1.0 27-28|0.0.1.0.0.0.1.1.0.0 26-27|0.0.1.0.0.0.1.1.0.0.0 24-25|0.0.2.0 23-24|0 22-23|0.0.1.0.2.0 20-21|0.0.2 17-18|0.0.0 15-16|0.0 12-13|0.0.1 11-12|0.0.1.0.3.0 10-11|0.0.1.0.3.0.0 9-10|0.0.1.0.3.0.1 7-8|0.0.1.0.3 4-5|0.0.1.0 3-4|0.0.1.0.0 2-3|0.0.1.0.2 0-1|0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:44.196
(f3 / factor 
      :ARG0-of (a5 / activate-01 
            :ARG1 (b / biogenesi) 
            :ARG1-of (d2 / demonstrate-01 
                  :ARG0 (s / study-01 
                        :ARG1 (e / express-01 
                              :ARG0 (p / person 
                                    :name (n / name 
                                          :op1 "NRF-1") 
                                    :op1-of (a3 / and 
                                          :op1-of (a / and 
                                                :op2 (r2 / regulator 
                                                      :ARG1-of (k / key-02 
                                                            :ARG0 8) 
                                                      :mod (t / transcription 
                                                            :mod (d / DNA)))) 
                                          :op2-of (a2 / and 
                                                :op1 (f2 / factor 
                                                      :mod (r3 / respiratory 
                                                            :mod (n2 / nucleus))))) 
                                    :poss-of (r / replication) 
                                    :poss-of (f / factor) 
                                    :poss-of (t2 / transcription)) 
                              :ARG1 1) 
                        :ARG1-of (s2 / second-01 
                              :ARG0 2) 
                        :ARG2-of (f4 / force-01 
                              :ARG1 (t4 / transcription)) 
                        :op1-of (a6 / and 
                              :op2 (l / line 
                                    :mod (c / cell) 
                                    :mod (m / mammalian)) 
                              :op3 (a4 / and)))) 
            :ARG2 (g / group 
                  :location-of (t3 / target))))

# ::snt Third , studies in primary cardiac myocytes in culture and in the hearts of transgenic mice have demonstrated that overexpression of PGC-1 promotes mitochondrial biogenesis [ 10,16 ] .
# ::tok Third , studies in primary cardiac myocytes in culture and in the hearts of transgenic mice have demonstrated that overexpression of PGC-1 promotes mitochondrial biogenesis [ 10,16 ] .
# ::alignments 24-25|0.1.1 22-23|0.1 19-20|0.1.0 17-18|0 15-16|0.2.1.0 12-13|0.2.1 9-10|0.2 8-9|0.2.0 6-7|0.2.0.0 5-6|0.2.0.0.0 4-5|0.2.0.0.1 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:44.794
(d / demonstrate-01 
      :ARG0 (s / study-01 
            :ARG0 (t / third)) 
      :ARG1 (p / promote-02 
            :ARG0 (o / overexpression) 
            :ARG1 (b / biogenesi)) 
      :op3-of (a / and 
            :op1 (c / culture 
                  :location-of (m2 / myocyt 
                        :mod (c2 / cardiac) 
                        :mod (p2 / primary))) 
            :op2 (h / heart 
                  :part-of (m / mouse))))

# ::snt Lastly , forced expression of PGC-1 in skeletal muscle of transgenic mice triggers mitochondrial proliferation and the formation of mitochondrial-rich type I , oxidative ( `` slow-twitch '' ) muscle fibers [ 17 ] .
# ::tok Lastly , forced expression of PGC-1 in skeletal muscle of transgenic mice triggers mitochondrial proliferation and the formation of mitochondrial-rich type I , oxidative ( `` slow-twitch '' ) muscle fibers [ 17 ] .
# ::alignments 32-33|0.0.1.0 30-31|0.0.0.0.1.0 29-30|0.0.0.0.1 23-24|0.2.0 21-22|0.0.0 20-21|0.2.1 17-18|0.2 15-16|0 14-15|0.0.1 12-13|0.0 11-12|0.0.0.0.0 8-9|0.0.0.0 7-8|0.0.0.0.2 3-4|0.1.1 2-3|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:46.513
(a / and 
      :ARG2-of (t2 / trigger-01 
            :ARG0 (i / i 
                  :ARG0-of (m3 / muscle-01 
                        :ARG1 (m2 / mouse) 
                        :ARG2-of (m / muscle-01 
                              :ARG1 (f / fiber)) 
                        :mod (s / skeletal))) 
            :ARG1 (p / proliferate-01 
                  :ARG0 17)) 
      :op1 (f3 / force-01 
            :ARG0 (l / last) 
            :ARG1 (e / express-01)) 
      :op2 (f2 / form-01 
            :ARG0 (o / oxidative) 
            :ARG1 (t / type)))

# ::snt Collectively , these results indicate that PGC-1 is sufficient to drive mitochondrial biogenesis .
# ::tok Collectively , these results indicate that PGC-1 is sufficient to drive mitochondrial biogenesis .
# ::alignments 12-13|0.1.0.0 11-12|0.1.0.0.0 10-11|0.1.0 8-9|0.1 4-5|0 3-4|0.0.0+0.0 2-3|0.0.1 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:46.622
(i / indicate-01 
      :ARG0 (t / thing 
            :ARG2-of (r / result-01) 
            :mod (t2 / this)) 
      :ARG1 (s / suffice-01 
            :ARG1 (d / drive-01 
                  :ARG1 (b / biogenesi 
                        :mod (m / mitochondrial)))) 
      :manner (c / collectively))

# ::snt Recent evidence also implicates PGC-1 in the homeostatic control of systemic energy metabolism .
# ::tok Recent evidence also implicates PGC-1 in the homeostatic control of systemic energy metabolism .
# ::alignments 12-13|0.2.1 11-12|0.2.1.0 10-11|0.1 8-9|0.2 7-8|0.2.0 3-4|0 2-3|0.3 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:46.678
(i / implicate-01 
      :ARG0 (e2 / evidence-01 
            :time (r / recent)) 
      :ARG1 (s / systemic) 
      :ARG2 (c / control-01 
            :ARG0 (h / homeostatic) 
            :ARG1 (m / metabolism 
                  :mod (e / energy))) 
      :mod (a / also))

# ::snt PGC-1 has been shown to regulate several key hepatic gluconeogenic genes [ 18,19,20,21 ] .
# ::tok PGC-1 has been shown to regulate several key hepatic gluconeogenic genes [ 18,19,20,21 ] .
# ::alignments 10-11|0.0.0 8-9|0.0.0.1 7-8|0.0.0.0 6-7|0.0.0.2 5-6|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:46.744
(s2 / show-01 
      :ARG1 (r / regulate-01 
            :ARG1 (g / gene 
                  :ARG1-of (k / key-02) 
                  :mod (h / hepatic) 
                  :quant (s / several))))

# ::snt Recent studies have also shown altered expression of PGC-1 and downstream mitochondrial target pathways in skeletal muscle of humans with insulin resistance and diabetes [ 22,23,24 ] .
# ::tok Recent studies have also shown altered expression of PGC-1 and downstream mitochondrial target pathways in skeletal muscle of humans with insulin resistance and diabetes [ 22,23,24 ] .
# ::alignments 23-24|0.1.0.0.0 22-23|0.4.0 21-22|0.1.2 20-21|0.1.2.0 18-19|0.4.1 16-17|0.4 15-16|0.4.2 13-14|0.1.0 12-13|0.1.0.0 11-12|0.1.0.0.1.0 10-11|0.1.0.0.1 9-10|0.2 6-7|0.1 5-6|0.1.1 4-5|0 3-4|0.3 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:47.090
(s2 / show-01 
      :ARG0 (s3 / study-01 
            :time (r2 / recent)) 
      :ARG1 (e / express-01 
            :ARG1 (p / pathway 
                  :ARG1-of (t / target-01 
                        :ARG0 (d / diabetes) 
                        :manner (d2 / downstream 
                              :mod-of (m2 / mitochondrial)))) 
            :ARG1-of (a3 / alter-01) 
            :ARG2 (r / resist-01 
                  :ARG1 (i / insulin))) 
      :ARG3 (a2 / and) 
      :mod (a4 / also) 
      :time (m / muscle-01 
            :ARG0 (a / and) 
            :ARG1 (h / human) 
            :mod (s / skeletal)))

# ::snt In addition , single nucleotide polymorphisms within the human PGC-1 gene have been shown to be associated with obesity , hypertension , and diabetes [ 25,26,27,28,29,30 ] .
# ::tok In addition , single nucleotide polymorphisms within the human PGC-1 gene have been shown to be associated with obesity , hypertension , and diabetes [ 25,26,27,28,29,30 ] .
# ::alignments 23-24|0.1.0.0.0 22-23|0.0 20-21|0.0.1 18-19|0.0.0 16-17|0.1 13-14|0 10-11|0.1.1 8-9|0.1.1.0 5-6|0.1.0 4-5|0.1.0.1 3-4|0.1.0.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:47.232
(s / show-01 
      :ARG0 (a / and 
            :op1 (o / obesity) 
            :op2 (h / hypertension)) 
      :ARG1 (a2 / associate-01 
            :ARG0 (p / polymorphism 
                  :ARG1-of (s2 / single-02 
                        :ARG0 (d / diabetes)) 
                  :mod (n / nucleotide)) 
            :ARG1 (g / gene 
                  :mod (h2 / human))) 
      :time (a3 / addition))

# ::snt The gain-of-function studies described to date provide compelling evidence that PGC-1 is capable of regulating postnatal energy metabolism .
# ::tok The gain-of-function studies described to date provide compelling evidence that PGC-1 is capable of regulating postnatal energy metabolism .
# ::alignments 17-18|0.0.0.0.0.0.0 16-17|0.0.0.0.0.0.0.0 15-16|0 14-15|0.0.0.0.0.0 12-13|0.0.0.0.0 8-9|0.0.0.0 7-8|0.0.0.0.1 6-7|0.0.0 5-6|0.0.1.0 3-4|0.0.1 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:47.482
(p / postnatal 
      :ARG1-of (s / study-01 
            :ARG0-of (p2 / provide-01 
                  :ARG1 (e2 / evidence-01 
                        :ARG1 (c / capable-01 
                              :ARG2 (r / regulate-01 
                                    :ARG1 (m / metabolism 
                                          :mod (e / energy)))) 
                        :ARG1-of (c2 / compel-01))) 
            :ARG1-of (d2 / describe-01 
                  :ARG2 (d / date))))

# ::snt However , the necessity of PGC-1 for energy metabolic homeostasis , mitochondrial biogenesis , development , and growth can only be addressed using loss-of-function strategies .
# ::tok However , the necessity of PGC-1 for energy metabolic homeostasis , mitochondrial biogenesis , development , and growth can only be addressed using loss-of-function strategies .
# ::alignments 24-25|0.0.1 22-23|0.0 21-22|0 19-20|0.2 18-19|0.1 17-18|0.1.0.3 16-17|0.1.0 14-15|0.1.0.2 12-13|0.1.0.1 9-10|0.1.0.0 8-9|0.1.0.0.0 7-8|0.1.0.0.0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:47.927
(a / address-02 
      :ARG1 (u / use-01 
            :ARG0 (n / necessity) 
            :ARG1 (s / strategy)) 
      :ARG1-of (p / possible-01 
            :op5-of (a2 / and 
                  :op1 (h / homeostasi 
                        :mod (m / metabolic 
                              :mod (e / energy))) 
                  :op2 (b / biogenesi) 
                  :op3 (d / develop-02) 
                  :op4 (g / grow-01))) 
      :mod (o / only))

# ::snt To this end , we have established and characterized mice with targeted deletion of the PGC-1 gene .
# ::tok To this end , we have established and characterized mice with targeted deletion of the PGC-1 gene .
# ::alignments 16-17|0.1.0.0.0 12-13|0.1.0.1.0 11-12|0.1.0.1 9-10|0.1.1 8-9|0.1.0.0 7-8|0 6-7|0.1 4-5|0.1.0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:48.074
(a / and 
      :op1 (e2 / end-01 
            :mod (t2 / this)) 
      :op2 (e / establish-01 
            :ARG0 (w / we 
                  :ARG0-of (c / characterize-01 
                        :ARG1 (g / gene)) 
                  :ARG0-of (t / target-01 
                        :ARG1 (d / deletion))) 
            :ARG1 (m / mouse)))

# ::snt Our studies of PGC-1  /  mice demonstrate that PGC-1 is not absolutely required for prenatal viability including mitochondrial biogenesis .
# ::tok Our studies of PGC-1  /  mice demonstrate that PGC-1 is not absolutely required for prenatal viability including mitochondrial biogenesis .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:48.076
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt However , our findings indicate that the coactivator PGC-1 serves a critical role in the normal metabolic function of multiple organs and for appropriate adaptation to physiologic stress during postnatal life .
# ::tok However , our findings indicate that the coactivator PGC-1 serves a critical role in the normal metabolic function of multiple organs and for appropriate adaptation to physiologic stress during postnatal life .
# ::alignments 30-31|0.1.2.1.1.0.0 29-30|0.1.2.1.1.0.0.0 27-28|0.1.2.1.1.0 26-27|0.1.2.1.1.0.1 24-25|0.1.2.1.1+0.1.2.1 23-24|0.1.2.1.0 21-22|0.1.2 20-21|0.0.0.0.0 19-20|0.1.2.0.0 17-18|0.1.2.0 16-17|0.1.2.0.2 15-16|0.1.2.0.1 12-13|0.1.1 11-12|0.1.1.0 9-10|0.1 7-8|0.1.0 4-5|0 3-4|0.0.0+0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:48.792
(i / indicate-01 
      :ARG0 (t2 / thing 
            :ARG1-of (f2 / find-01 
                  :ARG0 (w / we 
                        :poss-of (o / organ)))) 
      :ARG1 (s2 / serve-01 
            :ARG0 (c2 / coactivator) 
            :ARG1 (r / role 
                  :ARG1-of (c / critical-02)) 
            :ARG2 (a3 / and 
                  :op1 (f / function-01 
                        :ARG1 (m / multiple) 
                        :ARG1-of (n / normal-02) 
                        :mod (m2 / metabolic)) 
                  :op2 (t / thing 
                        :ARG1-of (a2 / appropriate-02) 
                        :ARG1-of (a / adapt-01 
                              :ARG2 (s / stress-02 
                                    :ARG2 (l / life 
                                          :mod (p / postnatal)) 
                                    :mod (p2 / physiologic)))))))

# ::snt Disruption of the PGC-1 Gene in Mice .
# ::tok Disruption of the PGC-1 Gene in Mice .
# ::alignments 6-7|0.0.0 4-5|0.0.1.0+0.0.1+0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:48.812
(d / disruption 
      :poss (p / person 
            :location (m / mouse) 
            :name (n / name 
                  :op1 "Gene")))

# ::snt A neomycin-based gene targeting vector was generated to delete exons 4 and 5 of the murine PGC-1 gene .
# ::tok A neomycin-based gene targeting vector was generated to delete exons 4 and 5 of the murine PGC-1 gene .
# ::alignments 17-18|0.0.0.0.2 15-16|0.0.0.0.2.0 12-13|0.0.0.0.3 11-12|0.0.1 10-11|0.0.0.0.1 9-10|0.0.2 8-9|0.0 6-7|0 4-5|0.0.0.0.0 3-4|0.0.0.0 2-3|0.0.0 1-2|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:49.745
(g2 / generate-01 
      :ARG1 (d / delete-01 
            :ARG0 (g3 / gene 
                  :ARG0-of (t / target-01 
                        :ARG1 (v / vector) 
                        :ARG2 4 
                        :op1-of (g / gene 
                              :mod (m / murine)) 
                        :time 5) 
                  :mod (n / neomycin-bas)) 
            :ARG1 (a / and) 
            :ARG2 (e / exon)))

# ::snt The targeting event resulted in a 3  homologous recombination with insertion of the remainder of the construct ( Figure 1A ) .
# ::tok The targeting event resulted in a 3  homologous recombination with insertion of the remainder of the construct ( Figure 1A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:49.747
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The insertion/recombination event was confirmed by Southern blotting and DNA sequencing .
# ::tok The insertion/recombination event was confirmed by Southern blotting and DNA sequencing .
# ::alignments 10-11|0.0.1 9-10|0.0.1.0 8-9|0.0 7-8|0.0.0 6-7|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 4-5|0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:49.960
(c / confirm-01 
      :ARG0 (a / and 
            :op1 (b / blot-01 
                  :ARG1 (t / thing 
                        :name (n / name 
                              :op1 "Southern"))) 
            :op2 (s / sequence 
                  :mod (d / DNA))) 
      :ARG1 (e / event))

# ::snt The insertion caused an exon 3 duplication between exons 5 and 6 that creates a coding region frameshift resulting in a premature termination at amino acid 255 .
# ::tok The insertion caused an exon 3 duplication between exons 5 and 6 that creates a coding region frameshift resulting in a premature termination at amino acid 255 .
# ::alignments 26-27|0.1.0.1.1.1.1 25-26|0.1.0.1.1.1.1.0 24-25|0.1.0.1.1.1.1.1 22-23|0.1.0.1.1.1 21-22|0.1.0.1.1.1.2 18-19|0.1.0.1.1 17-18|0.1.0.1 16-17|0.1.0.1.2 15-16|0.1.0.1.0 13-14|0.1.0 11-12|0.1.0.1.1.0 10-11|0.1.0.0 9-10|0.1.0.1.0.0 8-9|0.0.0 6-7|0.1 5-6|0.1.1 4-5|0.1.0.1.1.1.0 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:51.681
(c3 / cause-01 
      :ARG0 (i / insert-01 
            :ARG0 (e / exon)) 
      :ARG1 (d / duplication 
            :ARG2-of (c2 / create-01 
                  :ARG0 (a3 / and) 
                  :ARG1 (f / frameshift 
                        :ARG1-of (c / code-01 
                              :ARG0 5) 
                        :ARG1-of (r / result-01 
                              :ARG0 6 
                              :ARG2 (t / terminate-01 
                                    :ARG0 (e2 / exon) 
                                    :ARG1 (2 / 255 
                                          :mod (a / acid) 
                                          :mod (a2 / amino)) 
                                    :mod (p / premature))) 
                        :mod (r2 / region))) 
            :quant 3))

# ::snt Germline transmission of the mutant allele was confirmed using Southern blotting ( Figure 1B ) and PCR ( unpublished data ) .
# ::tok Germline transmission of the mutant allele was confirmed using Southern blotting ( Figure 1B ) and PCR ( unpublished data ) .
# ::alignments 19-20|0.1 18-19|0 15-16|0.0.0.0 12-13|0.0.0.0.0 10-11|0.0.0.1 9-10|0.0.0.1.1.0.0+0.0.0.1.1.0+0.0.0.1.1 8-9|0.0.0 7-8|0.0 5-6|0.0.0.1.0 4-5|0.0.0.1.0.0 1-2|0.0.0.2 0-1|0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:52.301
(u / unpublish 
      :ARG0-of (c / confirm-01 
            :ARG1 (u2 / use-01 
                  :ARG0 (a / and 
                        :op1 (f / figure)) 
                  :ARG1 (b / blot-01 
                        :ARG0 (a2 / allele 
                              :mod (m / mutant)) 
                        :ARG1 (t / thing 
                              :name (n / name 
                                    :op1 "Southern"))) 
                  :ARG2 (t2 / transmission 
                        :mod (g / Germline)))) 
      :mod-of (d / data))

# ::snt The PGC-1 gene disruption resulted in an unstable transcript that could not be detected by RNA blot analysis in heart and other tissues in PGC-1  /  mice ( Figure 1C and unpublished data ) .
# ::tok The PGC-1 gene disruption resulted in an unstable transcript that could not be detected by RNA blot analysis in heart and other tissues in PGC-1  /  mice ( Figure 1C and unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:52.305
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Quantitative RT-PCR was utilized to further evaluate the efficacy of the gene targeting .
# ::tok Quantitative RT-PCR was utilized to further evaluate the efficacy of the gene targeting .
# ::alignments 12-13|0.0.0.0.0 11-12|0.0.0.0 8-9|0.0.0 6-7|0.0 5-6|0.0.1 3-4|0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:52.384
(u / utilize-01 
      :ARG1 (e2 / evaluate-01 
            :ARG1 (e / efficacy 
                  :poss (g / gene 
                        :ARG1-of (t / target-01 
                              :ARG0 (q / quantitative)))) 
            :degree (f / further)))

# ::snt For these studies , PCR primers were designed to amplify a region of the PGC-1 gene transcript containing the exon 5 -- 6 border ( predicted to be absent in PGC-1  /  mice ) or the exon 5 -- 3 border ( predicted to be present only in the PGC-1  /  mice ) .
# ::tok For these studies , PCR primers were designed to amplify a region of the PGC-1 gene transcript containing the exon 5 -- 6 border ( predicted to be absent in PGC-1  /  mice ) or the exon 5 -- 3 border ( predicted to be present only in the PGC-1  /  mice ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:52.387
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The exon 5 -- 6 amplicon was detected in heart and BAT of wild-type ( WT ) but not PGC-1  /  mice ( Figure 1D ) .
# ::tok The exon 5 -- 6 amplicon was detected in heart and BAT of wild-type ( WT ) but not PGC-1  /  mice ( Figure 1D ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:52.391
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Conversely , the exon 5 -- 3 product was present only in PGC-1  /  mice ( Figure 1D ) .
# ::tok Conversely , the exon 5 -- 3 product was present only in PGC-1  /  mice ( Figure 1D ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:52.395
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt An exon 10 -- 11 border amplicon ( predicted to be present in both genotypes ) was detected in WT and PGC-1  /  mice , but was greatly diminished in the PGC-1  /  mice , indicating that the mutant transcript is unstable .
# ::tok An exon 10 -- 11 border amplicon ( predicted to be present in both genotypes ) was detected in WT and PGC-1  /  mice , but was greatly diminished in the PGC-1  /  mice , indicating that the mutant transcript is unstable .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:52.404
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt PGC-1 protein was not detected in whole cell ( Figure 1E ) or nuclear protein extracts ( unpublished data ) isolated from BAT of PGC-1  /  mice under basal conditions or in response to cold exposure , a condition known to markedly induce the expression of PGC-1 in BAT .
# ::tok PGC-1 protein was not detected in whole cell ( Figure 1E ) or nuclear protein extracts ( unpublished data ) isolated from BAT of PGC-1  /  mice under basal conditions or in response to cold exposure , a condition known to markedly induce the expression of PGC-1 in BAT .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:52.409
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Smaller mutant PGC-1 proteins were also not detected by Western blot analysis ( unpublished data ) .
# ::tok Smaller mutant PGC-1 proteins were also not detected by Western blot analysis ( unpublished data ) .
# ::alignments 14-15|0.0.0.0 13-14|0.0.0 11-12|0.0 10-11|0.0.1 9-10|0.0.2.1+0.0.2.0.0+0.0.2.0+0.0.2 7-8|0 6-7|0.3 5-6|0.2 3-4|0.1 1-2|0.1.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:52.502
(d2 / detect-01 
      :ARG0 (a / analyze-01 
            :ARG1 (u / unpublish 
                  :mod-of (d / data)) 
            :ARG1-of (b / blot-01) 
            :mod (w / world-region 
                  :name (n / name 
                        :op1 "West") 
                  :wiki "Western_world")) 
      :ARG1 (p / protein 
            :mod (s / small) 
            :mod (m / mutant)) 
      :mod (a2 / also) 
      :polarity -)

# ::snt Lastly , expression of the genes encoding the other known PGC-1 family members , PGC-1 and PRC , was not significantly altered in heart of PGC-1  /  mice ( Figure 1C ) .
# ::tok Lastly , expression of the genes encoding the other known PGC-1 family members , PGC-1 and PRC , was not significantly altered in heart of PGC-1  /  mice ( Figure 1C ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:52.505
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Taken together , these results support the conclusion that the gene targeting event resulted in a PGC-1 null allele .
# ::tok Taken together , these results support the conclusion that the gene targeting event resulted in a PGC-1 null allele .
# ::alignments 18-19|0.0.1 17-18|0.0.1.0 13-14|0.0 12-13|0 11-12|0.1 10-11|0.1.0 7-8|0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.0.0+0.0.0.0.0 3-4|0.0.0.0.0.1 1-2|0.0.0.0.1.0 0-1|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.331
(e / event 
      :ARG0-of (r / result-01 
            :ARG1 (c / conclude-01 
                  :ARG1-of (s / support-01 
                        :ARG0 (t2 / thing 
                              :ARG2-of (r2 / result-01) 
                              :mod (t3 / this)) 
                        :purpose (t5 / take-01 
                              :mod (t4 / together)))) 
            :ARG2 (a / allele 
                  :ARG1-of (n / null-02))) 
      :ARG1-of (t / target-01 
            :ARG0 (g / gene)))

# ::snt General Characteristics of the PGC-1  /  Mice : Age - and Sex-Dependent Obesity .
# ::tok General Characteristics of the PGC-1  /  Mice : Age - and Sex-Dependent Obesity .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.332
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Heterozygous ( PGC-1 + /  ) mice were bred to generate PGC-1  /  offspring .
# ::tok Heterozygous ( PGC-1 + /  ) mice were bred to generate PGC-1  /  offspring .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.336
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The observed genotype ratios of the offspring were consistent with the expected Mendelian ratios ( unpublished data ) .
# ::tok The observed genotype ratios of the offspring were consistent with the expected Mendelian ratios ( unpublished data ) .
# ::alignments 16-17|0.1 15-16|0 13-14|0.0.0.0.0 12-13|0.0.0.0.0.1.0.0+0.0.0.0.0.1.0+0.0.0.0.0.1 11-12|0.0.0.0.0.0 8-9|0.0.0.0 6-7|0.0.0.1 3-4|0.0.0 2-3|0.0.0.2 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.449
(u / unpublish 
      :ARG0-of (o2 / observe-01 
            :ARG1 (r2 / ratio 
                  :ARG1-of (c / consistent-01 
                        :ARG2 (r / ratio 
                              :ARG1-of (e / expect-01) 
                              :op1 (t / thing 
                                    :name (n / name 
                                          :op1 "Mendelian")))) 
                  :mod (o / offspr) 
                  :mod (g / genotype))) 
      :mod-of (d / data))

# ::snt Unexpected deaths of the offspring were not observed , and PGC-1 + /  and PGC-1  /  offspring appeared normal .
# ::tok Unexpected deaths of the offspring were not observed , and PGC-1 + /  and PGC-1  /  offspring appeared normal .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.450
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Total body weights obtained 1 wk after birth revealed a 15 % -- 20 % reduction in total body mass for male and female PGC-1  /  mice relative to sex-matched PGC-1 + / + littermates ( Figure 2 ) .
# ::tok Total body weights obtained 1 wk after birth revealed a 15 % -- 20 % reduction in total body mass for male and female PGC-1  /  mice relative to sex-matched PGC-1 + / + littermates ( Figure 2 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.455
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The weight decrement between PGC-1  /  and PGC-1 + / + littermates disappeared by 3 wk of age ( Figure 2A ) .
# ::tok The weight decrement between PGC-1  /  and PGC-1 + / + littermates disappeared by 3 wk of age ( Figure 2A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.458
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt At 18 wk of age , body weight was modestly but significantly greater in male and female PGC-1  /  mice compared to sex-matched PGC-1 + / + controls ( Figure 2A ) .
# ::tok At 18 wk of age , body weight was modestly but significantly greater in male and female PGC-1  /  mice compared to sex-matched PGC-1 + / + controls ( Figure 2A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.461
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt This weight difference was also significant for female PGC-1  /  mice at 24 wk of age ( Figure 2A ) .
# ::tok This weight difference was also significant for female PGC-1  /  mice at 24 wk of age ( Figure 2A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.465
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The abnormal weight gain in PGC-1  /  mice was not associated with differences in food intake ( unpublished data ) or alterations in general activity as monitored for 48 h ( Figure S1 ) .
# ::tok The abnormal weight gain in PGC-1  /  mice was not associated with differences in food intake ( unpublished data ) or alterations in general activity as monitored for 48 h ( Figure S1 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.468
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Percent body fat , as determined by dual-energy X-ray absorption ( DEXA ) , was greater in 18 - and 24-wk-old female PGC-1  /  mice compared to age-matched female PGC-1 + / + counterparts , indicating that the body weight difference was due , at least in part , to increased body fat ( Figure 2A ) .
# ::tok Percent body fat , as determined by dual-energy X-ray absorption ( DEXA ) , was greater in 18 - and 24-wk-old female PGC-1  /  mice compared to age-matched female PGC-1 + / + counterparts , indicating that the body weight difference was due , at least in part , to increased body fat ( Figure 2A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.472
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Lean mass was not significantly different between the genotypes ( unpublished data ) .
# ::tok Lean mass was not significantly different between the genotypes ( unpublished data ) .
# ::alignments 11-12|0.0 10-11|0 8-9|0.0.0.0.0.1 5-6|0.0.0.0.0 4-5|0.0.0.0.0.0 3-4|0.0.0.0.0.2 1-2|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.579
(u / unpublish 
      :mod-of (d / data 
            :ARG0-of (l / lean-01 
                  :ARG1 (m / mass 
                        :ARG1-of (d2 / differ-02 
                              :ARG1-of (s / significant-02) 
                              :ARG2 (g / genotyp) 
                              :polarity -)))))

# ::snt Although DEXA did not detect excess body fat in male PGC-1  /  mice at 18 or 24 wk of age , older male mutant mice ( over 7 mo of age ) accumulated more body fat than male WT controls ( Figure 2A and unpublished data ) .
# ::tok Although DEXA did not detect excess body fat in male PGC-1  /  mice at 18 or 24 wk of age , older male mutant mice ( over 7 mo of age ) accumulated more body fat than male WT controls ( Figure 2A and unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.582
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Individual organ weights were assessed , given the importance of mitochondrial energy metabolism for postnatal growth in certain organs .
# ::tok Individual organ weights were assessed , given the importance of mitochondrial energy metabolism for postnatal growth in certain organs .
# ::alignments 18-19|0.0.0.1.0.0.0.0.0 17-18|0.0.0.1.0.0.0.0.0.0 15-16|0.0 14-15|0 12-13|0.0.0 11-12|0.0.0.0 8-9|0.0.0.1 6-7|0.0.0.1.0 4-5|0.0.0.1.0.0.0.0 2-3|0.0.0.1.0.0.0 1-2|0.0.0.1.0.0 0-1|0.0.0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.736
(p / postnatal 
      :mod-of (g / grow-01 
            :purpose-of (m / metabolism 
                  :mod (e / energy) 
                  :mod-of (i / important 
                        :ARG1-of (g2 / give-01 
                              :ARG0 (o2 / organ 
                                    :ARG1-of (w / weight-01 
                                          :ARG1-of (a / assess-01 
                                                :ARG0 (o / organ 
                                                      :mod (c / certain))) 
                                          :mod (i2 / individual))))))))

# ::snt The weights of heart and slow-twitch fiber-enriched skeletal muscles , including gastrocnemius and soleus , but not the less oxidative tibialis anterior , were significantly lower in male and female PGC-1  /  mice compared with age and sex-matched PGC-1 + / + controls at 3 and 8 wk of age ( Figure 2B and unpublished data ) .
# ::tok The weights of heart and slow-twitch fiber-enriched skeletal muscles , including gastrocnemius and soleus , but not the less oxidative tibialis anterior , were significantly lower in male and female PGC-1  /  mice compared with age and sex-matched PGC-1 + / + controls at 3 and 8 wk of age ( Figure 2B and unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:53.742
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In contrast , the weights of brain , liver , kidney , and BAT were not significantly different between the genotypes at the 3-wk time point ( Figure 2B ) .
# ::tok In contrast , the weights of brain , liver , kidney , and BAT were not significantly different between the genotypes at the 3-wk time point ( Figure 2B ) .
# ::alignments 27-28|0.3.4.0 25-26|0.0 24-25|0.0.0 20-21|0.2 17-18|0 16-17|0.1 15-16|0.4 13-14|0.3.4 12-13|0.3 10-11|0.3.3 8-9|0.3.2 6-7|0.3.1 4-5|0.3.0 1-2|0.3.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.043
(d / differ-02 
      :ARG1 (p / point 
            :mod (t / time)) 
      :ARG1-of (s / significant-02) 
      :ARG2 (g / genotyp) 
      :op5-of (a / and 
            :ARG0-of (w / weight-01 
                  :ARG1-of (c / contrast-01)) 
            :op1 (b2 / brain) 
            :op2 (l / liver) 
            :op3 (k / kidney) 
            :op4 (b / bat-01 
                  :ARG1 (f / figure))) 
      :polarity -)

# ::snt Thus , certain tissues with high mitochondrial energy requirements , such as heart and slow-twitch skeletal muscle , exhibit modest growth defects in PGC-1  /  mice .
# ::tok Thus , certain tissues with high mitochondrial energy requirements , such as heart and slow-twitch skeletal muscle , exhibit modest growth defects in PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.045
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Abnormal Muscle Mitochondrial Phenotype in PGC-1  /  Mice .
# ::tok Abnormal Muscle Mitochondrial Phenotype in PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.049
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt General histologic analyses were performed to begin to evaluate the mild growth defect found in postnatal heart and skeletal muscle of the PGC-1  /  mice .
# ::tok General histologic analyses were performed to begin to evaluate the mild growth defect found in postnatal heart and skeletal muscle of the PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.053
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt There were no obvious abnormalities in cellularity , cell size , or extracellular matrix in the tissues of 1 -- 2-mo-old PGC-1  /  mice ( unpublished data ) .
# ::tok There were no obvious abnormalities in cellularity , cell size , or extracellular matrix in the tissues of 1 -- 2-mo-old PGC-1  /  mice ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.057
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Given the important role of PGC-1 in mitochondrial function and biogenesis , we examined mitochondrial ultrastructure in the relevant tissues .
# ::tok Given the important role of PGC-1 in mitochondrial function and biogenesis , we examined mitochondrial ultrastructure in the relevant tissues .
# ::alignments 19-20|0.0.0.0.1.0 18-19|0.0.0.0.1 15-16|0.0.0.0.0.0.0 13-14|0.0.0.0.0.0 12-13|0.0.0.0.0 10-11|0 9-10|0.0 8-9|0.0.0.1 7-8|0.0.0.1.0 3-4|0.0.0 2-3|0.0.0.2 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.244
(b / biogenesi 
      :op2-of (a / and 
            :op1 (r2 / role 
                  :ARG2-of (g / give-01 
                        :ARG0 (w / we 
                              :ARG0-of (e / examine-01 
                                    :ARG1 (u / ultrastructure))) 
                        :ARG1 (r / relevant-01 
                              :ARG1 (t / tissue))) 
                  :ARG2-of (f / function-01 
                        :ARG1 (m / mitochondrial)) 
                  :mod (i / important))))

# ::snt Electron microscopic analysis revealed fewer and smaller mitochondria in soleus muscle of PGC-1  /  mice compared to sex - and age - matched PGC-1 + / + controls ( Figure 3A ) .
# ::tok Electron microscopic analysis revealed fewer and smaller mitochondria in soleus muscle of PGC-1  /  mice compared to sex - and age - matched PGC-1 + / + controls ( Figure 3A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.246
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Quantitative morphometry of the electron micrographs confirmed that the cellular volume density of soleus mitochondria was significantly lower in PGC-1  /  mice compared to PGC-1 + / + controls independent of changes in the myofibrillar component ( Figure 3B ) .
# ::tok Quantitative morphometry of the electron micrographs confirmed that the cellular volume density of soleus mitochondria was significantly lower in PGC-1  /  mice compared to PGC-1 + / + controls independent of changes in the myofibrillar component ( Figure 3B ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.250
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Consistent with a defect in mitochondrial biogenesis , we found a reduction in the expression of nuclear genes encoding proteins involved in mitochondrial electron transport ( cytochrome c and cytochrome oxidase IV ) and oxidative phosphorylation ( beta subunit of ATP synthase ) in soleus muscle of PGC-1  /  mice compared with PGC-1 + / + controls .
# ::tok Consistent with a defect in mitochondrial biogenesis , we found a reduction in the expression of nuclear genes encoding proteins involved in mitochondrial electron transport ( cytochrome c and cytochrome oxidase IV ) and oxidative phosphorylation ( beta subunit of ATP synthase ) in soleus muscle of PGC-1  /  mice compared with PGC-1 + / + controls .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.258
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In addition , the expression of Tfam , a known PGC-1 target involved in mitochondrial DNA replication/transcription , was diminished in PGC-1  /  soleus , providing one potential mechanism for defective mitochondrial biogenesis ( Figure 3C ) .
# ::tok In addition , the expression of Tfam , a known PGC-1 target involved in mitochondrial DNA replication/transcription , was diminished in PGC-1  /  soleus , providing one potential mechanism for defective mitochondrial biogenesis ( Figure 3C ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.267
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In contrast to the results with soleus , no significant differences in mitochondrial ultrastructure or volume density were noted in heart or BAT of PGC-1  /  mice ( unpublished data ) .
# ::tok In contrast to the results with soleus , no significant differences in mitochondrial ultrastructure or volume density were noted in heart or BAT of PGC-1  /  mice ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.272
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To determine whether mitochondrial function was altered in the skeletal muscle of PGC-1  /  mice , mitochondrial respiration rates were measured using tissue strips prepared from soleus muscle .
# ::tok To determine whether mitochondrial function was altered in the skeletal muscle of PGC-1  /  mice , mitochondrial respiration rates were measured using tissue strips prepared from soleus muscle .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.275
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In soleus of PGC-1  /  mice , a significant defect in state 3 ( ADP-stimulated ) respiration , but not state 2 ( basal ) , was detected using succinate as the substrate ( Figure 3D ) .
# ::tok In soleus of PGC-1  /  mice , a significant defect in state 3 ( ADP-stimulated ) respiration , but not state 2 ( basal ) , was detected using succinate as the substrate ( Figure 3D ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.278
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt State 4 respiration rates ( in the presence of oligomycin ) were also similar between the genotypes , indicating that the coupling of respiration to ATP production was not significantly altered in PGC-1  /  mice .
# ::tok State 4 respiration rates ( in the presence of oligomycin ) were also similar between the genotypes , indicating that the coupling of respiration to ATP production was not significantly altered in PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.289
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These results are consistent with the modest but significant reduction in mitochondrial volume density .
# ::tok These results are consistent with the modest but significant reduction in mitochondrial volume density .
# ::alignments 13-14|0.1.0.0 12-13|0.1.0 9-10|0.1 8-9|0.1.1 7-8|0 6-7|0.0 3-4|0.1.2 1-2|0.1.2.0.0+0.1.2.0 0-1|0.1.2.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.415
(c / contrast-01 
      :ARG1 (m / modest) 
      :ARG2 (r / reduce-01 
            :ARG1 (v / volume 
                  :mod-of (d / density)) 
            :ARG1-of (s / significant-02) 
            :ARG2-of (c2 / consistent-01 
                  :ARG1 (t / thing 
                        :ARG2-of (r2 / result-01) 
                        :mod (t2 / this)))))

# ::snt Altered Skeletal Muscle Function in PGC-1  /  Mice .
# ::tok Altered Skeletal Muscle Function in PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.418
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The abnormality in mitochondrial number and respiratory function in skeletal muscle led us to further evaluate the skeletal muscle phenotype .
# ::tok The abnormality in mitochondrial number and respiratory function in skeletal muscle led us to further evaluate the skeletal muscle phenotype .
# ::alignments 19-20|0.2.0.0 18-19|0.2.0.0.0 17-18|0.2.0.1.0.0 15-16|0.2.0 14-15|0.2.0.2 11-12|0.2.0.1 10-11|0.2.0.1.0 9-10|0.2.0.1.0.1 7-8|0.1 6-7|0.1.0 5-6|0 4-5|0.0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:54.638
(a / and 
      :op1 (n / number) 
      :op2 (f2 / function-01 
            :ARG1 (r / respiratory)) 
      :topic-of (a2 / abnormality 
            :ARG0-of (e / evaluate-01 
                  :ARG1 (p / phenotype 
                        :ARG1-of (m / muscle-01)) 
                  :ARG1-of (l / lead-02 
                        :ARG0 (m2 / muscle-01 
                              :ARG1 (s / skeletal) 
                              :mod (s2 / skeletal))) 
                  :degree (f / further))))

# ::snt As an initial step , we measured locomotor activity levels over a 1-h period using a high-resolution photobeam system .
# ::tok As an initial step , we measured locomotor activity levels over a 1-h period using a high-resolution photobeam system .
# ::alignments 18-19|0.1.0 17-18|0.1 16-17|0.0.0.0.1 14-15|0.1.0.0 13-14|0.1.0.0.0 9-10|0.0.0 8-9|0.0.0.0 7-8|0.0.0.0.0 6-7|0 5-6|0.0 3-4|0.2 2-3|0.2.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.208
(m / measure-01 
      :ARG0 (w / we 
            :poss-of (l / level 
                  :mod (a / activity-06 
                        :ARG0 (l2 / locomotor) 
                        :ARG1 (h / high-resolution)))) 
      :ARG1 (p / photobeam 
            :mod-of (s / system 
                  :ARG1-of (u / use-01 
                        :ARG0 (p2 / period)))) 
      :prep-in (s2 / step 
            :mod (i / initial)))

# ::snt PGC-1  /  male mice exhibited a significantly lower mean number of ambulations and rearings during the hour compared to the PGC-1 + / + age-matched controls ( Figure 4 ) .
# ::tok PGC-1  /  male mice exhibited a significantly lower mean number of ambulations and rearings during the hour compared to the PGC-1 + / + age-matched controls ( Figure 4 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.210
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt However , an analysis of exploratory behavior showed that the PGC-1  /  mice were reluctant to go into the center of the `` field '' compared to controls .
# ::tok However , an analysis of exploratory behavior showed that the PGC-1  /  mice were reluctant to go into the center of the `` field '' compared to controls .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.213
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Specifically , PGC-1  /  mice made significantly fewer entries into , spent significantly less time in , and traveled a significantly shorter distance in the central area of the `` field , '' although differences in distance traveled in the peripheral zone of the `` field '' was not significantly different between groups ( Figure S2 ) .
# ::tok Specifically , PGC-1  /  mice made significantly fewer entries into , spent significantly less time in , and traveled a significantly shorter distance in the central area of the `` field , '' although differences in distance traveled in the peripheral zone of the `` field '' was not significantly different between groups ( Figure S2 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.217
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These data suggest that the general activity level may have been affected by the reluctance of the PGC-1  /  mice to go into the central area of the field and thus remain in the periphery ( thigmotaxis ) , possibly reflecting altered emotionality such as increased fear .
# ::tok These data suggest that the general activity level may have been affected by the reluctance of the PGC-1  /  mice to go into the central area of the field and thus remain in the periphery ( thigmotaxis ) , possibly reflecting altered emotionality such as increased fear .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.222
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt A battery of tests was performed to further evaluate the general sensorimotor phenotype of the PGC-1  /  mice .
# ::tok A battery of tests was performed to further evaluate the general sensorimotor phenotype of the PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.231
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt No differences were found between PGC-1  /  mice and PGC-1 + / + controls on the ledge , platform , walking initiation , and 60  and 90  inclined screen tests ( unpublished data ) , suggesting that several sensorimotor functions were intact in the PGC-1  /  mice .
# ::tok No differences were found between PGC-1  /  mice and PGC-1 + / + controls on the ledge , platform , walking initiation , and 60  and 90  inclined screen tests ( unpublished data ) , suggesting that several sensorimotor functions were intact in the PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.234
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt However , the PGC-1  /  mice were unable to remain on an inverted screen for as long as the PGC-1 + / + controls ( Figure 4A ) .
# ::tok However , the PGC-1  /  mice were unable to remain on an inverted screen for as long as the PGC-1 + / + controls ( Figure 4A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.237
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Since the groups did not differ on the times it took to turn around and climb to the top of 60  and 90  inclined screens , the differences on the inverted screen test suggest that impaired strength rather than deficits in coordination were responsible for these differences .
# ::tok Since the groups did not differ on the times it took to turn around and climb to the top of 60  and 90  inclined screens , the differences on the inverted screen test suggest that impaired strength rather than deficits in coordination were responsible for these differences .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.242
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To further evaluate the skeletal muscle phenotype , exercise capacity was assessed in the PGC-1  /  mice .
# ::tok To further evaluate the skeletal muscle phenotype , exercise capacity was assessed in the PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.247
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To this end , the PGC-1  /  mice were exercised on a motorized treadmill apparatus using a run-to-exhaustion format .
# ::tok To this end , the PGC-1  /  mice were exercised on a motorized treadmill apparatus using a run-to-exhaustion format .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.255
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt PGC-1  /  mice ( 6 -- 8 mo of age ) exhibited a markedly reduced capacity to sustain running exercise ( PGC-1  /  mice , 64  6 s ; age-matched PGC-1 + / + mice , 586  104 s ; Figure 4B ) .
# ::tok PGC-1  /  mice ( 6 -- 8 mo of age ) exhibited a markedly reduced capacity to sustain running exercise ( PGC-1  /  mice , 64  6 s ; age-matched PGC-1 + / + mice , 586  104 s ; Figure 4B ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.259
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The same result was obtained with younger PGC-1  /  mice , i.e. , at 3.5 mo of age ( unpublished data ) .
# ::tok The same result was obtained with younger PGC-1  /  mice , i.e. , at 3.5 mo of age ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:55.264
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To quantify aerobic exercise capacity , VO2max ( maximum oxygen consumption , measured in milliliters of oxygen per kilogram of body weight per minute ) was measured with the treadmill-running protocol using indirect calorimetry .
# ::tok To quantify aerobic exercise capacity , VO2max ( maximum oxygen consumption , measured in milliliters of oxygen per kilogram of body weight per minute ) was measured with the treadmill-running protocol using indirect calorimetry .
# ::alignments 33-34|0.1.0.0.1.1 32-33|0.1.0.0.1.1.0 31-32|0.1.0.0.1 30-31|0.1.0.0.1.0 29-30|0.1.0.0.1.0.0 26-27|0.1.0.0.1.2 23-24|0.1.0.0.1.2.0.0.0.0.0.0+0.1.0.0.1.2.0.0.0.0.0 21-22|0.0.0.0 20-21|0.0.0.0.0 18-19|0.0.0+0.0 16-17|0 14-15|0.1 12-13|0.1.0 10-11|0.1.0.0 9-10|0.1.0.0.0 8-9|0.1.0.0.0.0 6-7|0.1.0.0.1.2.0.1.0+0.1.0.0.1.2.0.1+0.1.0.0.1.2.0 4-5|0.1.0.0.1.2.0.0.0 3-4|0.1.0.0.1.2.0.0.0.0 2-3|0.1.0.0.1.2.0.0.0.1 1-2|0.1.0.0.1.2.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:56.630
(o / oxygen 
      :location (m3 / mass-quantity 
            :unit (k / kilogram 
                  :mod (w / weight 
                        :part-of (b / body)))) 
      :mod-of (m4 / milliliter 
            :ARG1-of (m5 / measure-01 
                  :ARG0 (c2 / consume-01 
                        :ARG0 (o2 / oxygen 
                              :mod (m6 / maximum)) 
                        :ARG1 (u / use-01 
                              :ARG0 (p / protocol 
                                    :mod (t / treadmill-runn)) 
                              :ARG1 (c / calorimetry 
                                    :ARG1-of (d / direct-02)) 
                              :manner-of (m / measure-01 
                                    :ARG1 (p2 / person 
                                          :ARG0-of (q / quantify-01 
                                                :ARG1 (c3 / capacity 
                                                      :mod (e / exercise-02 
                                                            :ARG0 (t2 / temporal-quantity 
                                                                  :unit (m2 / minute))) 
                                                      :mod (a / aerobic))) 
                                          :name (n / name 
                                                :op1 "VO2max"))))))))

# ::snt VO2max was significantly lower for the PGC-1  /  mice ( 120.9  2.0 ml O2  kg  1  min  1 ) compared to PGC-1 + / + controls ( 141.6  2.1 ml O2  kg  1  min  1 ) ( Figure 4B ) .
# ::tok VO2max was significantly lower for the PGC-1  /  mice ( 120.9  2.0 ml O2  kg  1  min  1 ) compared to PGC-1 + / + controls ( 141.6  2.1 ml O2  kg  1  min  1 ) ( Figure 4B ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:56.632
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To directly evaluate muscle fatigability , the force response to repetitive stimulation of isolated soleus muscle was determined .
# ::tok To directly evaluate muscle fatigability , the force response to repetitive stimulation of isolated soleus muscle was determined .
# ::alignments 17-18|0 15-16|0.1 14-15|0.1.0 13-14|0.1.1 11-12|0.0.0 10-11|0.2.0 8-9|0.0 7-8|0.0.1 4-5|0.2.1 3-4|0.2.1.0 2-3|0.2 1-2|0.2.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:56.818
(d / determined-02 
      :ARG0 (r2 / respond-01 
            :ARG1 (s2 / stimulation) 
            :ARG2 (f / force)) 
      :ARG1 (m / muscle-01 
            :ARG1 (s / soleu) 
            :ARG1-of (i / isolate-01)) 
      :purpose (e / evaluate-01 
            :ARG0 (r / repetitive) 
            :ARG1 (f2 / fatigability 
                  :ARG1-of (m2 / muscle-01)) 
            :ARG1-of (d2 / direct-02)))

# ::snt The capacity to generate force following a series of tetani is dependent upon mitochondrial ATP production .
# ::tok The capacity to generate force following a series of tetani is dependent upon mitochondrial ATP production .
# ::alignments 15-16|0.1 14-15|0.1.0.0.0+0.1.0.0+0.1.0 11-12|0 9-10|0.0.0.1.0.0 7-8|0.0.0.1.0 5-6|0.0.0.1 4-5|0.0.0.0 3-4|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:56.961
(d / depend-01 
      :ARG0 (c / capacity 
            :purpose (g / generate-01 
                  :ARG1 (f2 / force) 
                  :ARG1-of (f / follow-01 
                        :ARG2 (s / series 
                              :quant-of (t / tetani))))) 
      :ARG1 (p / produce-01 
            :ARG1 (o / organization 
                  :name (n / name 
                        :op1 "ATP"))))

# ::snt During the initial phase of the stimulation period , there was no difference in force generation in muscles isolated from PGC-1  /  mice and PGC-1 + / + controls .
# ::tok During the initial phase of the stimulation period , there was no difference in force generation in muscles isolated from PGC-1  /  mice and PGC-1 + / + controls .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:56.963
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt However , fatigue resistance index , defined as the percent of initial force generated following a 2-min series of fatiguing contractions , was significantly lower in the PGC-1  /  mice ( 14.6  1.5 % ) compared to PGC-1 + / + controls ( 24.8  2.9 % ) ( Figure 4C ) .
# ::tok However , fatigue resistance index , defined as the percent of initial force generated following a 2-min series of fatiguing contractions , was significantly lower in the PGC-1  /  mice ( 14.6  1.5 % ) compared to PGC-1 + / + controls ( 24.8  2.9 % ) ( Figure 4C ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:56.972
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These results , together with the observed abnormalities in skeletal muscle mitochondrial structure and function , indicate that PGC-1 is necessary for functional adaptation of skeletal muscle to physiologic demands .
# ::tok These results , together with the observed abnormalities in skeletal muscle mitochondrial structure and function , indicate that PGC-1 is necessary for functional adaptation of skeletal muscle to physiologic demands .
# ::alignments 29-30|0.0.1 28-29|0.0.1.1 26-27|0.0.1.0 25-26|0.0.1.0.1 23-24|0.0.1.0.0+0.0.1.0.0.0 22-23|0.0.1.0.0.1 16-17|0 14-15|0.0.3 13-14|0.0 12-13|0.0.2 11-12|0.0.3.1 10-11|0.1.0 9-10|0.0.2.0 7-8|0.0.0.0 6-7|0.0.0 3-4|0.0.3.0 1-2|0.1.1+0.1 0-1|0.1.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:57.789
(i / indicate-01 
      :ARG0 (a2 / and 
            :ARG0-of (o / observe-01 
                  :ARG1 (a3 / abnormaliti)) 
            :ARG1-of (d / demand-01 
                  :ARG2-of (m / muscle-01 
                        :ARG0-of (a / adapt-01 
                              :ARG1 (t / thing) 
                              :mod (f / functional)) 
                        :mod (s / skeletal)) 
                  :mod (p / physiologic)) 
            :op1 (s2 / structure 
                  :mod (s3 / skeletal)) 
            :op2 (f2 / function-01 
                  :ARG0 (t2 / together) 
                  :ARG1 (m2 / mitochondrial))) 
      :ARG1 (t3 / thing 
            :ARG1-of (m3 / muscle-01) 
            :ARG2-of (r / result-01) 
            :mod (t4 / this)))

# ::snt Functional Abnormalities in Hearts of PGC-1  /  Mice .
# ::tok Functional Abnormalities in Hearts of PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:57.790
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt PGC-1 expression is enriched in heart , a tissue that relies heavily on mitochondrial energy metabolism to maintain pump function throughout the postnatal life of the mammalian organism .
# ::tok PGC-1 expression is enriched in heart , a tissue that relies heavily on mitochondrial energy metabolism to maintain pump function throughout the postnatal life of the mammalian organism .
# ::alignments 27-28|0.0.0.0.0 26-27|0.0.0.0 23-24|0.1.0.2 22-23|0.1.0.2.0 20-21|0.1.0.2.1 19-20|0.1 18-19|0 17-18|0.1.0 15-16|0.1.0.0 14-15|0.1.0.0.0 11-12|0.1.0.1.1 10-11|0.1.0.1 8-9|0.1.0.1.0 5-6|0.0.1 3-4|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:58.138
(p2 / pump-01 
      :ARG1 (e2 / enrich-01 
            :ARG1 (e3 / express-01 
                  :ARG1 (m / mammalian 
                        :mod-of (o / organism))) 
            :ARG2 (h2 / heart)) 
      :ARG1-of (f / function-01 
            :ARG1-of (m2 / maintain-01 
                  :ARG0 (m3 / metabolism 
                        :mod (e / energy)) 
                  :ARG1-of (r / rely-01 
                        :ARG0 (t2 / tissue) 
                        :manner (h / heavy)) 
                  :manner (l / life 
                        :mod (p / postnatal) 
                        :op1-of (t / throughout)))))

# ::snt Echocardiographic screening studies of PGC-1  /  mice at ages 4 -- 6 mo did not reveal any significant differences in chamber sizes or ventricular function compared to WT controls ( unpublished data ) .
# ::tok Echocardiographic screening studies of PGC-1  /  mice at ages 4 -- 6 mo did not reveal any significant differences in chamber sizes or ventricular function compared to WT controls ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:58.140
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Cardiac functional and metabolic reserve was evaluated using exercise echocardiographic stress testing ( EST ) .
# ::tok Cardiac functional and metabolic reserve was evaluated using exercise echocardiographic stress testing ( EST ) .
# ::alignments 13-14|0.1 11-12|0.0.0 10-11|0.0.0.0 9-10|0.0.0.0.0 8-9|0.0.0.1 7-8|0.0 6-7|0.0.1 4-5|0 3-4|0.2.1 2-3|0.2 1-2|0.2.0 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:58.754
(r / reserve-01 
      :ARG0-of (u / use-01 
            :ARG1 (t / test-01 
                  :ARG1 (s / stress-02 
                        :ARG1 (e2 / echocardiographic)) 
                  :ARG1-of (e3 / exercise-02 
                        :ARG0 (c / cardiac))) 
            :ARG1-of (e4 / evaluate-01)) 
      :ARG1 (e / e) 
      :op3-of (a / and 
            :op1 (f / functional) 
            :op2 (m / metabolic)))

# ::snt Given that the exercise capacity of PGC-1  /  mice is diminished , a series of preliminary treadmill exercise studies were performed to define a reasonable exercise duration for run-to-exhaustion to be used as a target duration for the EST. .
# ::tok Given that the exercise capacity of PGC-1  /  mice is diminished , a series of preliminary treadmill exercise studies were performed to define a reasonable exercise duration for run-to-exhaustion to be used as a target duration for the EST. .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:58.756
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Based on the results of these studies , an EST regimen was performed in which PGC-1 + / + control animals were exercised for a duration of 60 s to match the predicted average for the PGC-1  /  mice ( ages 6 -- 8 mo ) .
# ::tok Based on the results of these studies , an EST regimen was performed in which PGC-1 + / + control animals were exercised for a duration of 60 s to match the predicted average for the PGC-1  /  mice ( ages 6 -- 8 mo ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:58.766
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Echocardiographic images were obtained immediately following 60 s of exercise for the PGC-1 + / + controls or at the point of exhaustion for PGC-1  /  mice ( mean 60  6.1 s , range 45 -- 90 s ) .
# ::tok Echocardiographic images were obtained immediately following 60 s of exercise for the PGC-1 + / + controls or at the point of exhaustion for PGC-1  /  mice ( mean 60  6.1 s , range 45 -- 90 s ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:58.778
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Echocardiographic-determined left ventricular fractional shortening and heart rate were monitored for the 10-min period immediately post exercise .
# ::tok Echocardiographic-determined left ventricular fractional shortening and heart rate were monitored for the 10-min period immediately post exercise .
# ::alignments 16-17|0.0.1.0 15-16|0.0.1.0.0 14-15|0.0.1.0.0.0 13-14|0.1 9-10|0 7-8|0.0.1 6-7|0.0.1.1 5-6|0.0 4-5|0.0.0 3-4|0.0.0.0 2-3|0.0.0.2 1-2|0.0.0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.056
(m / monitor-01 
      :ARG1 (a / and 
            :op1 (s / shorten-01 
                  :ARG1 (f / fractional 
                        :mod (l / left)) 
                  :mod (e2 / echocardiographic-determin) 
                  :mod (v / ventricular)) 
            :op2 (r / rate 
                  :ARG1-of (e / exercise-02 
                        :ARG1-of (p / post-01 
                              :time (i / immediate))) 
                  :mod (h / heart))) 
      :ARG2 (p2 / period))

# ::snt The mean heart rate of the PGC-1  /  mice exhibited an inappropriate decline during the post exercise period ( Figure 5A ) .
# ::tok The mean heart rate of the PGC-1  /  mice exhibited an inappropriate decline during the post exercise period ( Figure 5A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.057
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In addition , echocardiographically determined left ventricular fractional shortening was decreased in the PGC-1  /  mice , but not the PGC-1 + / + mice during the first 4 min of the post exercise period ( Figure 5A ) .
# ::tok In addition , echocardiographically determined left ventricular fractional shortening was decreased in the PGC-1  /  mice , but not the PGC-1 + / + mice during the first 4 min of the post exercise period ( Figure 5A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.061
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The results of the EST did not distinguish between a primary cardiac abnormality versus effects secondary to the exhaustion caused by reduced exercise tolerance related to skeletal muscle dysfunction .
# ::tok The results of the EST did not distinguish between a primary cardiac abnormality versus effects secondary to the exhaustion caused by reduced exercise tolerance related to skeletal muscle dysfunction .
# ::alignments 28-29|0.0.1.0 27-28|0.0.1.0.0 26-27|0.0.0.0.0.0.0.0 24-25|0.0.1 23-24|0.0 22-23|0.0.0 21-22|0.0.2 19-20|0 18-19|0.1 15-16|0.0.0.1 14-15|0.0.0.0.1.0.0 13-14|0.0.0.0.1.0 12-13|0.0.0.0.1 11-12|0.0.0.0.1.1 10-11|0.0.0.0.1.2 7-8|0.0.0.0.0.0.0 6-7|0.0.0.0.0.0.0.1 4-5|0.0.0.0 1-2|0.0.0.0.0+0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.454
(c / cause-01 
      :ARG0 (t / tolerate-01 
            :ARG1 (e / exercise-02 
                  :ARG0 (e4 / e 
                        :ARG1-of (r3 / result-01 
                              :ARG2 (t2 / thing 
                                    :ARG1-of (d2 / distinguish-01 
                                          :op1-of (s / skeletal) 
                                          :polarity -))) 
                        :consist (a / abnormality 
                              :location (v / versu 
                                    :op1 (e3 / effect)) 
                              :mod (c2 / cardiac) 
                              :mod (p / primary))) 
                  :ARG1 (s2 / secondary)) 
            :ARG1-of (r / relate-01 
                  :ARG2 (d / dysfunction 
                        :ARG1-of (m / muscle-01))) 
            :ARG1-of (r2 / reduce-01)) 
      :ARG1 (e2 / exhaustion))

# ::snt To directly assess cardiac function , the hearts of PGC-1  /  and PGC-1 + / + mice were isolated and perfused in the working mode .
# ::tok To directly assess cardiac function , the hearts of PGC-1  /  and PGC-1 + / + mice were isolated and perfused in the working mode .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.456
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Hearts isolated from PGC-1  /  mice generated lower cardiac work ( cardiac output multiplied by peak systolic pressure ) compared to PGC-1 + / + mice at identical loading conditions ( Table 1 ) .
# ::tok Hearts isolated from PGC-1  /  mice generated lower cardiac work ( cardiac output multiplied by peak systolic pressure ) compared to PGC-1 + / + mice at identical loading conditions ( Table 1 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.459
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt This reduction in cardiac work was due to a reduced cardiac output ( Table 1 ) .
# ::tok This reduction in cardiac work was due to a reduced cardiac output ( Table 1 ) .
# ::alignments 14-15|0.0.1.0 13-14|0.0.1.0.0 11-12|0.1 10-11|0.0.0 9-10|0 4-5|0.0 3-4|0.0.2 1-2|0.0.1 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.552
(r / reduce-01 
      :ARG0 (w / work-01 
            :ARG1 (c / cardiac) 
            :ARG1-of (r2 / reduce-01 
                  :ARG0 (1 / 1 
                        :mod-of (t / table)) 
                  :mod (t2 / this)) 
            :mod (c2 / cardiac)) 
      :ARG1 (o / output))

# ::snt The relative contribution of heart rate and stroke volume to diminished cardiac output in the PGC-1  /  mice could not be delineated , because both were decreased but neither to a significant degree ( Table 1 ) .
# ::tok The relative contribution of heart rate and stroke volume to diminished cardiac output in the PGC-1  /  mice could not be delineated , because both were decreased but neither to a significant degree ( Table 1 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.554
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To further distinguish between abnormalities in heart rate and ventricular function , in vivo hemodynamic response to the 1,1-adrenergic-selective agonist dobutamine was evaluated using a miniaturized Millar catheter .
# ::tok To further distinguish between abnormalities in heart rate and ventricular function , in vivo hemodynamic response to the 1,1-adrenergic-selective agonist dobutamine was evaluated using a miniaturized Millar catheter .
# ::alignments 27-28|0.3.0 26-27|0.3.1.0+0.3.1+0.3 25-26|0.3.0.0 23-24|0.3.0.1 22-23|0.3.0.1.0 20-21|0.0.0.0 19-20|0.0.0.0.0 15-16|0.0.0 14-15|0.0.0.1 10-11|0.2 9-10|0.2.0 8-9|0 7-8|0.3.2.0 6-7|0.3.2 4-5|0.1 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.896
(a2 / and 
      :ARG1-of (d2 / distinguish-01 
            :ARG2-of (r / respond-01 
                  :ARG1 (d / dobutamine 
                        :mod (a / agonist)) 
                  :mod (h / hemodynamic)) 
            :degree (f2 / further)) 
      :location-of (a3 / abnormaliti) 
      :op1 (f / function-01 
            :ARG1 (v / ventricular)) 
      :op2 (p / person 
            :mod-of (c / cathet 
                  :ARG1-of (m / miniaturize-01) 
                  :ARG1-of (u / use-01 
                        :ARG1-of (e / evaluate-01))) 
            :name (n / name 
                  :op1 "Millar") 
            :part (h2 / heart 
                  :mod-of (r2 / rate))))

# ::snt The ventricular functional response to dobutamine was similar in PGC-1 + / + and PGC-1  /  mice ( Figure 5B , right graph ) .
# ::tok The ventricular functional response to dobutamine was similar in PGC-1 + / + and PGC-1  /  mice ( Figure 5B , right graph ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.898
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt However , PGC-1  /  mice exhibited a significantly blunted heart rate response to -adrenergic stimulation ( Figure 5B , left graph ) .
# ::tok However , PGC-1  /  mice exhibited a significantly blunted heart rate response to -adrenergic stimulation ( Figure 5B , left graph ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.900
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Taken together with the EST , these results strongly suggest that the PGC-1  /  hearts are unable to mount an appropriate chronotropic response to exercise and other physiologic stimuli that activate -adrenergic input to the heart .
# ::tok Taken together with the EST , these results strongly suggest that the PGC-1  /  hearts are unable to mount an appropriate chronotropic response to exercise and other physiologic stimuli that activate -adrenergic input to the heart .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.910
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt However , our results did not reveal evidence for contractile dysfunction .
# ::tok However , our results did not reveal evidence for contractile dysfunction .
# ::alignments 10-11|0.1.0 9-10|0.1.0.0 7-8|0.1 6-7|0 5-6|0.2 3-4|0.0.0+0.0 2-3|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.984
(r / reveal-01 
      :ARG0 (t / thing 
            :ARG2-of (r2 / result-01 
                  :ARG1 (w / we))) 
      :ARG1 (e / evidence-01 
            :ARG1 (d / dysfunction 
                  :mod (c / contractile))) 
      :polarity -)

# ::snt PGC-1  /  Mice Exhibit an Abnormal Thermogenic Response .
# ::tok PGC-1  /  Mice Exhibit an Abnormal Thermogenic Response .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:56:59.985
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt PGC-1 has been implicated as an inducible regulator of mitochondrial respiratory uncoupling , an important source of heat production in BAT [ 2 ] .
# ::tok PGC-1 has been implicated as an inducible regulator of mitochondrial respiratory uncoupling , an important source of heat production in BAT [ 2 ] .
# ::alignments 22-23|0.0 20-21|0.1.0.2.0.0+0.1.0.2.0+0.1.0.2 18-19|0.1.0 17-18|0.1.0.0 15-16|0.1.0.1 14-15|0.1.0.1.0 11-12|0.1.1 10-11|0.1.1.0 7-8|0.1 3-4|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:00.268
(i2 / implicate-01 
      :ARG1 2 
      :ARG2 (r2 / regulator 
            :ARG0-of (p / produce-01 
                  :ARG1 (h / heat) 
                  :ARG2 (s / source 
                        :mod (i / important)) 
                  :location (c / country 
                        :name (n / name 
                              :op1 "BAT"))) 
            :mod (u / uncouple 
                  :mod (r / respiratory))))

# ::snt To determine whether PGC-1 is necessary for an appropriate thermogenic response , PGC-1 + / + and PGC-1  /  mice were subjected to cold exposure ( 4 C ) for a 5-h period while core body temperature was monitored .
# ::tok To determine whether PGC-1 is necessary for an appropriate thermogenic response , PGC-1 + / + and PGC-1  /  mice were subjected to cold exposure ( 4 C ) for a 5-h period while core body temperature was monitored .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:00.271
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt PGC-1  /  mice exhibited a markedly abnormal drop in core temperature compared to the WT controls ( Figure 6A ) .
# ::tok PGC-1  /  mice exhibited a markedly abnormal drop in core temperature compared to the WT controls ( Figure 6A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:00.274
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Specifically , the mean decline in core temperature was greater than 12 C at the 5-h time point in PGC-1  /  mice , compared to an approximately 3 C decrement in PGC-1 + / + controls .
# ::tok Specifically , the mean decline in core temperature was greater than 12 C at the 5-h time point in PGC-1  /  mice , compared to an approximately 3 C decrement in PGC-1 + / + controls .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:00.279
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Although this thermogenic phenotype was consistently present in mice aged 28 -- 37 d , it was absent in older mice ( unpublished data ) .
# ::tok Although this thermogenic phenotype was consistently present in mice aged 28 -- 37 d , it was absent in older mice ( unpublished data ) .
# ::alignments 23-24|0.2 22-23|0.2.0 20-21|0.0.0.1.2 19-20|0.0.0.1.2.0 17-18|0.0.0.1 13-14|0.0.0.1.1 12-13|0.0.0.1.3 10-11|0.0.0.1.0 9-10|0 8-9|0.1 6-7|0.0.0 5-6|0.0.0.0 3-4|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:00.758
(a2 / age-01 
      :ARG0 (p2 / phenotype 
            :domain-of (p / present 
                  :manner (c / consistent) 
                  :time-of (a / absent-01 
                        :ARG0 28 
                        :ARG2 (d2 / d) 
                        :manner (m / mouse 
                              :mod (o / old)) 
                        :manner 37)) 
            :mod (t / this)) 
      :ARG1 (m2 / mouse) 
      :op1-of (d / data 
            :mod (u / unpublish)))

# ::snt The histologic appearance and neutral lipid stores of BAT were assessed as an initial step to characterize the thermogenic phenotype exhibited by PGC-1  /  mice .
# ::tok The histologic appearance and neutral lipid stores of BAT were assessed as an initial step to characterize the thermogenic phenotype exhibited by PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:00.761
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Histologic and lipid quantification studies were performed .
# ::tok Histologic and lipid quantification studies were performed .
# ::alignments 6-7|0.0 4-5|0.0.0 3-4|0.0.0.0 2-3|0.0.0.1 1-2|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:00.807
(a / and 
      :ARG2-of (p / perform-02 
            :ARG1 (s / study-01 
                  :ARG1 (q / quantification) 
                  :ARG2 (l / lipid))) 
      :op1 (h / histologic))

# ::snt Electron microscopic analyses indicated that the mitochondrial ultrastructure was similar in BAT isolated from PGC-1  /  and PGC-1 + / + mice before and after cold exposure ( unpublished data ) .
# ::tok Electron microscopic analyses indicated that the mitochondrial ultrastructure was similar in BAT isolated from PGC-1  /  and PGC-1 + / + mice before and after cold exposure ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:00.809
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In addition , levels of BAT triglyceride were similar between the two genotypes ( unpublished data ) .
# ::tok In addition , levels of BAT triglyceride were similar between the two genotypes ( unpublished data ) .
# ::alignments 15-16|0.0 14-15|0 12-13|0.0.0.1.0.0 11-12|0.0.0.1.0.0.0 8-9|0.0.0.1.0 6-7|0.0.0.0 5-6|0.0.0 3-4|0.0.0.1 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:00.916
(u / unpublish 
      :mod-of (d / data 
            :ARG0-of (b / bat-01 
                  :ARG1 (t / triglyceride) 
                  :mod-of (l / level 
                        :ARG2-of (r / resemble-01 
                              :ARG1 (g / genotyp 
                                    :quant 2)))) 
            :mod-of (a / addition)))

# ::snt UCP-1 is a cold-inducible protein involved in mitochondrial respiratory uncoupling to generate heat in BAT .
# ::tok UCP-1 is a cold-inducible protein involved in mitochondrial respiratory uncoupling to generate heat in BAT .
# ::alignments 14-15|0.0 12-13|0.1.0 11-12|0.1 8-9|0.2.0 7-8|0.2.0.0 5-6|0.2 4-5|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:00.952
(p / protein 
      :ARG0-of (b / bat-01) 
      :ARG0-of (g / generate-01 
            :ARG1 (h / heat)) 
      :ARG1-of (i / involve-01 
            :ARG2 (r / respiratory 
                  :mod (m / mitochondrial))))

# ::snt UCP-1 gene transcription is known to be activated by PGC-1 [ 2 ] .
# ::tok UCP-1 gene transcription is known to be activated by PGC-1 [ 2 ] .
# ::alignments 11-12|0.0.1.0 7-8|0.0.0 4-5|0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:01.015
(k / know-02 
      :ARG1 (t / transcription 
            :ARG0-of (a / activate-01) 
            :mod (g / gene 
                  :mod-of 2)))

# ::snt Surprisingly , basal and cold-induced BAT UCP-1 mRNA levels were similar in PGC-1 + / + and PGC-1  /  mice ( Figure 6B ) .
# ::tok Surprisingly , basal and cold-induced BAT UCP-1 mRNA levels were similar in PGC-1 + / + and PGC-1  /  mice ( Figure 6B ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:01.017
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These results suggest that PGC-1 is not necessary for the induction of the expression of UCP-1 with cold exposure , and that other factors , such as reduced capacity for mitochondrial respiration , likely contribute to the abnormal thermogenic response in the PGC-1  /  mice .
# ::tok These results suggest that PGC-1 is not necessary for the induction of the expression of UCP-1 with cold exposure , and that other factors , such as reduced capacity for mitochondrial respiration , likely contribute to the abnormal thermogenic response in the PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:01.024
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Thermogenesis in rodents related to mitochondrial uncoupling is under the control of 3-adrenergic receptor coupled signaling .
# ::tok Thermogenesis in rodents related to mitochondrial uncoupling is under the control of 3-adrenergic receptor coupled signaling .
# ::alignments 15-16|0.0.1.0 14-15|0.0.1 13-14|0.0.0 10-11|0.0 6-7|0.1 5-6|0 3-4|0.1.0 2-3|0.1.0.0 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:01.149
(m / mitochondrial 
      :ARG2-of (c2 / control-01 
            :ARG1 (r / receptor) 
            :ARG2-of (c / couple-01 
                  :ARG1 (s / signal-01 
                        :ARG0 (t / thermogenesi)))) 
      :mod-of (u / uncouple 
            :ARG2-of (r2 / relate-01 
                  :ARG1 (r3 / rodent))))

# ::snt Accordingly , the in vivo oxygen consumption response to 3-adrenergic stimulation was examined in PGC-1  /  mice .
# ::tok Accordingly , the in vivo oxygen consumption response to 3-adrenergic stimulation was examined in PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:01.151
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt For these experiments , VO2 ( oxygen consumption ) was measured following administration of the 3-agonist BRL 37344 using indirect calorimetry .
# ::tok For these experiments , VO2 ( oxygen consumption ) was measured following administration of the 3-agonist BRL 37344 using indirect calorimetry .
# ::alignments 20-21|0 19-20|0.0 18-19|0.1 16-17|0.1.0.1.0+0.1.0.1+0.1.0 12-13|0.1.0.0 11-12|0.1.0.0.0 10-11|0.1.0.0.0.0 7-8|0.1.0.0.0.0.0 6-7|0.1.0.0.0.0.0.0 2-3|0.1.0.0.0.0.1 1-2|0.1.0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:01.244
(c / calorimetry 
      :ARG1-of (d / direct-02) 
      :ARG1-of (u / use-01 
            :ARG0 (o / organization 
                  :ARG1-of (a / administrate-01 
                        :ARG2-of (f / follow-01 
                              :ARG1 (m / measure-01 
                                    :ARG1-of (c2 / consume-01 
                                          :ARG0 (o2 / oxygen)) 
                                    :purpose (e / experiment-01 
                                          :mod (t / this))))) 
                  :name (n / name 
                        :op1 "BRL"))))

# ::snt VO2 was significantly increased in response to BRL 3744 in PGC-1 + / + but not PGC-1  /  mice ( Figure 6C ) .
# ::tok VO2 was significantly increased in response to BRL 3744 in PGC-1 + / + but not PGC-1  /  mice ( Figure 6C ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:01.246
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These results indicate that the metabolic response of BAT to an acute stimulus such as cold and/or 3-adrenergic stimulation is altered in the PGC-1 null mice , likely related to reduced capacity for mitochondrial respiratory uncoupling .
# ::tok These results indicate that the metabolic response of BAT to an acute stimulus such as cold and/or 3-adrenergic stimulation is altered in the PGC-1 null mice , likely related to reduced capacity for mitochondrial respiratory uncoupling .
# ::alignments 35-36|0.1.2.0.1.0.0 34-35|0.1.2.0.1.0.0.0 31-32|0.1.2.0.1 30-31|0.1.2.0.1.0 28-29|0.1.2.0 27-28|0.1.2.0.0 25-26|0.1.2 24-25|0.1.2.1 20-21|0.1 18-19|0.1.0 15-16|0.1.0.0 13-14|0.1.1.1 12-13|0.1.1.0.0 11-12|0.1.1.0.0.0 8-9|0.1.1.0 6-7|0.1.1 5-6|0.1.1.2 2-3|0 1-2|0.0.0+0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:01.744
(i / indicate-01 
      :ARG0 (t / thing 
            :ARG2-of (r5 / result-01) 
            :mod (t2 / this)) 
      :ARG1 (a / alter-01 
            :ARG0 (s / stimulation 
                  :mod (c2 / cold)) 
            :ARG1 (r4 / respond-01 
                  :ARG0 (b / bat-01 
                        :ARG1 (s3 / stimulus 
                              :mod (a2 / acute))) 
                  :ARG1 (s2 / such) 
                  :mod (m2 / metabolic)) 
            :ARG2 (m / mouse 
                  :ARG1-of (r3 / relate-01 
                        :ARG1-of (l / likely-01) 
                        :ARG2 (c / capacity 
                              :mod (r2 / reduce-01 
                                    :ARG1 (u / uncouple 
                                          :mod (r / respiratory))))) 
                  :ARG1-of (n / null-02))))

# ::snt Fasting-Induced Hepatic Steatosis in PGC-1  /  Mice .
# ::tok Fasting-Induced Hepatic Steatosis in PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:01.746
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Previous studies have implicated PGC-1 in several hepatic metabolic functions including fatty acid oxidation and gluconeogenesis [ 18,19,20,21 ] .
# ::tok Previous studies have implicated PGC-1 in several hepatic metabolic functions including fatty acid oxidation and gluconeogenesis [ 18,19,20,21 ] .
# ::alignments 14-15|0.1 13-14|0.0.0 12-13|0.0.0.0 11-12|0.0.0.1 9-10|0.0.2 8-9|0.0.2.0 7-8|0.0.2.1 6-7|0.0.2.2 3-4|0 1-2|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:01.896
(i / implicate-01 
      :ARG1 (s2 / study-01 
            :ARG0 (o / oxidation 
                  :mod (a2 / acid) 
                  :mod (f / fatty)) 
            :ARG1 (p / previou) 
            :ARG1-of (f2 / function-01 
                  :mod (m / metabolic) 
                  :mod (h / hepatic) 
                  :quant (s / several))) 
      :op1-of (a / and))

# ::snt Accordingly , the hepatic phenotype was evaluated under basal conditions and following a 24-h fast , a stimulus known to induce fatty acid oxidation and gluconeogenic rates in liver .
# ::tok Accordingly , the hepatic phenotype was evaluated under basal conditions and following a 24-h fast , a stimulus known to induce fatty acid oxidation and gluconeogenic rates in liver .
# ::alignments 28-29|0.1.1.0 26-27|0.2 25-26|0.2.0 24-25|0 23-24|0.0.2 22-23|0.0.2.0 21-22|0.2.1 20-21|0.0 18-19|0.0.1 17-18|0.0.0 14-15|0.1.1.1 11-12|0.1.1 10-11|0.1 9-10|0.1.0.1 8-9|0.1.0.1.0 6-7|0.1.0 4-5|0.1.0.0 3-4|0.1.0.0.0 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:02.486
(a / and 
      :ARG1-of (i / induce-01 
            :ARG0 (s / stimulus) 
            :ARG1-of (k / know-02 
                  :ARG0 (a4 / accordingly)) 
            :ARG2 (o / oxidation 
                  :mod (a2 / acid))) 
      :op1 (a3 / and 
            :ARG0-of (e / evaluate-01 
                  :ARG1 (p / phenotype 
                        :mod (h / hepatic)) 
                  :ARG2 (c / condition 
                        :mod (b / basal))) 
            :ARG1-of (f3 / follow-01 
                  :ARG0 (l / liver) 
                  :ARG2 (f2 / fast))) 
      :op2 (r / rate 
            :mod (g / gluconeogenic) 
            :mod (f / fatty)))

# ::snt Under basal fed conditions , the livers of the PGC-1  /  mice appeared grossly normal and did not exhibit histologic abnormalities ( unpublished data ) .
# ::tok Under basal fed conditions , the livers of the PGC-1  /  mice appeared grossly normal and did not exhibit histologic abnormalities ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:02.488
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt However , following a 24 h-fast , the PGC-1  /  mice exhibited marked hepatic steatosis as determined by gross inspection , oil red O staining , electron microscopy , and measurements of liver triglyceride ( TAG ) levels ( Figure 7 ) .
# ::tok However , following a 24 h-fast , the PGC-1  /  mice exhibited marked hepatic steatosis as determined by gross inspection , oil red O staining , electron microscopy , and measurements of liver triglyceride ( TAG ) levels ( Figure 7 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:02.491
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt There were no differences in plasma triglycerides or free fatty acids between the genotypes in fed or fasted states ( unpublished data ) .
# ::tok There were no differences in plasma triglycerides or free fatty acids between the genotypes in fed or fasted states ( unpublished data ) .
# ::alignments 21-22|0.0.1.0.1 20-21|0.0.1.0.1.0 18-19|0.0.0 17-18|0.1 16-17|0 15-16|0.0 13-14|0.0.1.0.0 10-11|0.0.1.2 9-10|0.0.1.2.1 8-9|0.0.1.2.0 7-8|0.0.1 6-7|0.0.1.1 5-6|0.0.1.1.0 3-4|0.0.1.0 2-3|0.0.1.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:02.747
(o / or 
      :op1 (f2 / feed-up-03 
            :ARG0 (s / state) 
            :ARG1 (o2 / or 
                  :op1 (d2 / differ-01 
                        :ARG0 (g / genotyp) 
                        :ARG1 (d / data 
                              :mod (u / unpublish)) 
                        :polarity -) 
                  :op2 (t / triglycerid 
                        :mod (p / plasma)) 
                  :op3 (a / acid 
                        :ARG1-of (f4 / free-04) 
                        :mod (f3 / fatty)))) 
      :op2 (f / fast))

# ::snt To further investigate the mechanisms involved in the fasting-induced hepatic steatotic response , hepatocytes were isolated from PGC-1  /  mice and WT controls .
# ::tok To further investigate the mechanisms involved in the fasting-induced hepatic steatotic response , hepatocytes were isolated from PGC-1  /  mice and WT controls .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:02.750
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Oleate loading experiments revealed that the PGC-1  /  hepatocytes accumulated neutral lipid to a significantly greater extent than the WT cells ( Figure 8A ) .
# ::tok Oleate loading experiments revealed that the PGC-1  /  hepatocytes accumulated neutral lipid to a significantly greater extent than the WT cells ( Figure 8A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:02.754
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt 3H-palmitate oxidation rates were significantly lower in PGC-1  /  hepatocytes compared to PGC-1 + / + hepatocytes under basal conditions and following exposure to oleate ( Figure 8B ) .
# ::tok 3H-palmitate oxidation rates were significantly lower in PGC-1  /  hepatocytes compared to PGC-1 + / + hepatocytes under basal conditions and following exposure to oleate ( Figure 8B ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:02.758
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Taken together , these latter results indicate a cell-autonomous defect in PGC-1  /  hepatocytes that results in an inability to maintain cellular lipid balance in the context of increased delivery of lipid such as occurs with fasting .
# ::tok Taken together , these latter results indicate a cell-autonomous defect in PGC-1  /  hepatocytes that results in an inability to maintain cellular lipid balance in the context of increased delivery of lipid such as occurs with fasting .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:02.762
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt PPAR , a known regulator of hepatic mitochondrial fatty acid oxidation enzyme gene expression , is a target for coactivation by PGC-1 [ 31 ] .
# ::tok PPAR , a known regulator of hepatic mitochondrial fatty acid oxidation enzyme gene expression , is a target for coactivation by PGC-1 [ 31 ] .
# ::alignments 23-24|0.0 19-20|0.1.2 17-18|0.1 13-14|0 12-13|0.2 11-12|0.2.0 10-11|0.2.0.0 9-10|0.2.0.0.0 8-9|0.1.0 6-7|0.1.2.0 4-5|0.1.1.0 3-4|0.1.1.0.0 0-1|0.1.1.1.0+0.1.1.1+0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:02.945
(e / express-01 
      :ARG1 31 
      :ARG2-of (t / target-01 
            :ARG0 (f / fatty) 
            :ARG1 (o2 / organization 
                  :mod (r / regulator 
                        :ARG1-of (k / know-02)) 
                  :name (n / name 
                        :op1 "PPAR")) 
            :purpose (c / coactivation 
                  :mod (h / hepatic))) 
      :mod (g / gene 
            :mod (e2 / enzyme 
                  :mod (o / oxidation 
                        :mod (a / acid)))))

# ::snt Therefore , we sought to determine whether the steatotic phenotype of the PGC-1  /  mice related to reduced expression of PPAR target genes .
# ::tok Therefore , we sought to determine whether the steatotic phenotype of the PGC-1  /  mice related to reduced expression of PPAR target genes .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:02.946
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To this end , a survey of candidate genes and gene expression profiling experiments were performed .
# ::tok To this end , a survey of candidate genes and gene expression profiling experiments were performed .
# ::alignments 15-16|0.1.0.0.0 13-14|0.1.0 12-13|0.1 11-12|0 10-11|0.0 9-10|0.1.0.0 8-9|0.1.0.0.1.0 7-8|0.1.0.0.1.0.0 5-6|0.1.0.0.1 2-3|0.1.0.0.1.1 1-2|0.1.0.0.1.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:03.107
(e2 / express-01 
      :ARG1 (g / gene) 
      :ARG1-of (p2 / profile-01 
            :ARG1-of (e / experiment-01 
                  :op2-of (a / and 
                        :ARG1-of (p / perform-02) 
                        :op1 (s / survey-01 
                              :ARG1 (g2 / gene 
                                    :mod (c / candidate)) 
                              :ARG1-of (e3 / end-01 
                                    :mod (t / this)))))))

# ::snt Surprisingly , the hepatic expression of PPAR target genes involved in cellular fatty acid and oxidation ( MCPT and MCAD ) were not significantly different between the genotypes under fed or fasted conditions ( Table 2 ) .
# ::tok Surprisingly , the hepatic expression of PPAR target genes involved in cellular fatty acid and oxidation ( MCPT and MCAD ) were not significantly different between the genotypes under fed or fasted conditions ( Table 2 ) .
# ::alignments 35-36|0.0.1.0.0.0.0 34-35|0.0.1.0.0.0.0.0 32-33|0.0.1.0.0.3.0 31-32|0.0.1.0.0.3.1.0 30-31|0.0.1.0.0.3.1 29-30|0.0.1.0.0.3 27-28|0.0.1.0.0.1 24-25|0.0.1.0.0 23-24|0.0.1.0.0.0 22-23|0.0.1.0.0.2 18-19|0.2.0 15-16|0.2 14-15|0 13-14|0.1 12-13|0.1.0 11-12|0.1.1 9-10|0.0 8-9|0.0.1 7-8|0.0.1.1 6-7|0.0.1.1.0.0.0+0.0.1.1.0.0+0.0.1.1.0 4-5|0.0.1.0 3-4|0.0.1.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:03.845
(a2 / and 
      :ARG2-of (i / involve-01 
            :ARG0 (s2 / surprisingly) 
            :ARG1 (g2 / gene 
                  :ARG1-of (e / express-01 
                        :ARG1-of (d / differ-02 
                              :ARG1-of (s / significant-02 
                                    :ARG0 (2 / 2 
                                          :mod-of (t / table))) 
                              :ARG2 (g / genotyp) 
                              :polarity - 
                              :purpose (f2 / feed-up-03 
                                    :ARG1 (c / condition) 
                                    :op1-of (o / or 
                                          :op2 (f / fast)))) 
                        :mod (h / hepatic)) 
                  :ARG1-of (t2 / target-01 
                        :ARG0 (o3 / organization 
                              :name (n / name 
                                    :op1 "PPAR"))))) 
      :op1 (a3 / acid 
            :mod (f3 / fatty) 
            :mod (c2 / cell)) 
      :op2 (o2 / oxidation 
            :op1-of (a / and)))

# ::snt Next , we performed experiments to determine whether the reduced capacity for fat oxidation in the hepatocytes of the PGC-1  /  mice was related to altered mitochondrial respiratory function .
# ::tok Next , we performed experiments to determine whether the reduced capacity for fat oxidation in the hepatocytes of the PGC-1  /  mice was related to altered mitochondrial respiratory function .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:03.848
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Compared to the WT controls , PGC-1  /  hepatocytes exhibited a modest but significant reduction in both state 2 and state 3 respiration rates ( Figure 8C ) .
# ::tok Compared to the WT controls , PGC-1  /  hepatocytes exhibited a modest but significant reduction in both state 2 and state 3 respiration rates ( Figure 8C ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:03.851
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These results identify one potential mechanism responsible for the fasting-induced hepatic steatosis : reduced capacity for fat oxidation due to mitochondrial respiratory dysfunction .
# ::tok These results identify one potential mechanism responsible for the fasting-induced hepatic steatosis : reduced capacity for fat oxidation due to mitochondrial respiratory dysfunction .
# ::alignments 22-23|0.1.0.0.0 21-22|0.1.0.0 17-18|0 16-17|0.0 14-15|0.1 13-14|0.1.0 11-12|0.1.0.1 10-11|0.1.0.1.1 9-10|0.1.0.1.2 6-7|0.1.0.1.0 5-6|0.1.0.1.0.0 4-5|0.1.0.1.0.0.1 2-3|0.1.0.1.0.0.0 1-2|0.1.0.1.0.0.0.0.0+0.1.0.1.0.0.0.0 0-1|0.1.0.1.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:04.017
(o / oxidation 
      :ARG1-of (f / fat-03) 
      :prep-for-of (c / capacity 
            :mod (r2 / reduce-01 
                  :ARG1 (r / respiratory 
                        :mod-of (d / dysfunction)) 
                  :ARG2 (s / steatosi 
                        :ARG1-of (r3 / responsible-01 
                              :ARG0 (m / mechanism 
                                    :ARG1-of (i / identify-01 
                                          :ARG0 (t / thing 
                                                :ARG2-of (r4 / result-01) 
                                                :mod (t2 / this))) 
                                    :mod (p / potential))) 
                        :mod (h / hepatic) 
                        :mod (f2 / fasting-induc)))))

# ::snt Although the liver gene expression profiling studies did not reveal abnormalities in the fatty acid oxidation pathway in the PGC-1  /  mice , several interesting differences in the activity of the sterol regulatory element binding protein-1c ( SREBP-1c ) pathway were noted .
# ::tok Although the liver gene expression profiling studies did not reveal abnormalities in the fatty acid oxidation pathway in the PGC-1  /  mice , several interesting differences in the activity of the sterol regulatory element binding protein-1c ( SREBP-1c ) pathway were noted .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:04.019
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Specifically , the fasting-mediated down-regulation of SREBP-1c and its target gene stearoyl-CoA desaturase ( SCD1 ) , was abolished in PGC-1  /  mice ( Table 2 ) .
# ::tok Specifically , the fasting-mediated down-regulation of SREBP-1c and its target gene stearoyl-CoA desaturase ( SCD1 ) , was abolished in PGC-1  /  mice ( Table 2 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:04.023
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Furthermore , expression of the gene encoding diglyceride acyltransferase ( DGAT ) , which catalyzes the last step in TAG synthesis , was activated at baseline and induced by fasting to a greater level in PGC-1  /  mice ( Table 2 ) .
# ::tok Furthermore , expression of the gene encoding diglyceride acyltransferase ( DGAT ) , which catalyzes the last step in TAG synthesis , was activated at baseline and induced by fasting to a greater level in PGC-1  /  mice ( Table 2 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:04.028
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These results suggest that , in addition to a defect in oxidation , components of the TAG synthesis pathway are activated in the PGC-1  /  mice .
# ::tok These results suggest that , in addition to a defect in oxidation , components of the TAG synthesis pathway are activated in the PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:04.037
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To evaluate this possibility directly , rates of 3H-glycerol incorporation into TAG were determined in isolated hepatocytes .
# ::tok To evaluate this possibility directly , rates of 3H-glycerol incorporation into TAG were determined in isolated hepatocytes .
# ::alignments 16-17|0.2 15-16|0.2.0 13-14|0 11-12|0.3.0.0.0.0+0.3.0.0.0+0.3.0.0 9-10|0.1 6-7|0.0 4-5|0.3.1 3-4|0.3.0 2-3|0.3.0.1 1-2|0.3 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:04.194
(d / determined-02 
      :ARG0 (r / rate) 
      :ARG1 (i2 / incorporation) 
      :ARG2 (h / hepatocyt 
            :ARG1-of (i / isolate-01)) 
      :time (e / evaluate-01 
            :ARG1 (p / possible-01 
                  :ARG1 (t / thing 
                        :name (n / name 
                              :op1 "TAG")) 
                  :mod (t2 / this)) 
            :ARG1-of (d2 / direct-02)))

# ::snt 3H-TAG incorporation was increased nearly 50 % in hepatocytes isolated from PGC-1  /  mice compared to PGC-1 + / + controls ( Figure 8D ) , confirming that TAG synthesis rates are increased in PGC-1 null hepatocytes , identifying a second potential mechanism contributing to the fasting-induced hepatic steatosis .
# ::tok 3H-TAG incorporation was increased nearly 50 % in hepatocytes isolated from PGC-1  /  mice compared to PGC-1 + / + controls ( Figure 8D ) , confirming that TAG synthesis rates are increased in PGC-1 null hepatocytes , identifying a second potential mechanism contributing to the fasting-induced hepatic steatosis .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:04.196
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Despite a Mild Obese Phenotype , Female PGC-1  /  Mice Do Not Exhibit Insulin Resistance .
# ::tok Despite a Mild Obese Phenotype , Female PGC-1  /  Mice Do Not Exhibit Insulin Resistance .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:04.198
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Recent studies have suggested that specific PGC-1 single nucleotide polymorphisms and haplotypes may influence the development of insulin resistance and diabetes [ 27,30 ] and that PGC-1 activity is diminished in insulin-resistant and diabetic muscle [ 22,23 ] .
# ::tok Recent studies have suggested that specific PGC-1 single nucleotide polymorphisms and haplotypes may influence the development of insulin resistance and diabetes [ 27,30 ] and that PGC-1 activity is diminished in insulin-resistant and diabetic muscle [ 22,23 ] .
# ::alignments 34-35|0.1.0.0.1.2.0.0 33-34|0.1.0.0.1.2.0 32-33|0.1.0.0.1.2 29-30|0.1.0.0.1 27-28|0.1.0.0.1.1 24-25|0.1.0.0.1.3 20-21|0.1.0.1 19-20|0.1.0.0.0.1 18-19|0.1.0.0.0.0 17-18|0.1.0.0.0.0.0 15-16|0.1.0.0.0 13-14|0.1.0 12-13|0.1 11-12|0.1.0.0.1.3.0 10-11|0.1.0.0 9-10|0.1.0.0.1.0 8-9|0.1.0.0.1.0.1 7-8|0.1.0.0.1.0.0 5-6|0.1.0.0.1.3.0.0 3-4|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.065
(s3 / suggest-01 
      :ARG0 (s4 / study-01 
            :time (r2 / recent)) 
      :ARG1 (p / possible-01 
            :ARG1 (i2 / influence-01 
                  :ARG0 (a5 / and 
                        :location-of (d4 / develop-02 
                              :ARG1 (r / resist-01 
                                    :ARG1 (i / insulin)) 
                              :op1-of (a4 / and)) 
                        :op1 (d2 / diminish-01 
                              :ARG0 (p2 / polymorphism 
                                    :ARG1-of (s / single-02) 
                                    :mod (n / nucleotide)) 
                              :ARG1 (a2 / activity-06) 
                              :ARG2 (a / and 
                                    :op1 (d / diabetic 
                                          :ARG0-of (m / muscle-01))) 
                              :op2-of (a3 / and 
                                    :op1 (h / haplotyp 
                                          :ARG1-of (s2 / specific-02))))) 
                  :ARG1 (d3 / diabetes))))

# ::snt Accordingly , peripheral glucose disposal and insulin responsiveness were examined in PGC-1  /  mice .
# ::tok Accordingly , peripheral glucose disposal and insulin responsiveness were examined in PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.066
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Glucose tolerance testing of 2-mo-old male and female mice revealed no significant difference in blood glucose excursion between PGC-1 + / + and PGC-1  /  groups ( unpublished data ) .
# ::tok Glucose tolerance testing of 2-mo-old male and female mice revealed no significant difference in blood glucose excursion between PGC-1 + / + and PGC-1  /  groups ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.072
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Given that older female PGC-1  /  mice develop an increase in body fat stores , glucose tolerance and insulin responsiveness were further evaluated in this group .
# ::tok Given that older female PGC-1  /  mice develop an increase in body fat stores , glucose tolerance and insulin responsiveness were further evaluated in this group .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.075
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Glucose tolerance testing in 4.5-mo-old female PGC-1  /  mice revealed that , despite increased body weight [ mean  standard error of the mean ( SEM ) weight of PGC-1 + / + mice = 22.4  0.79 g ; PGC-1  /  mice = 25.2  1.04 g ) , PGC-1  /  mice exhibited similar levels of glucose tolerance compared to WT mice on standard rodent chow ( Figure 9 ) .
# ::tok Glucose tolerance testing in 4.5-mo-old female PGC-1  /  mice revealed that , despite increased body weight [ mean  standard error of the mean ( SEM ) weight of PGC-1 + / + mice = 22.4  0.79 g ; PGC-1  /  mice = 25.2  1.04 g ) , PGC-1  /  mice exhibited similar levels of glucose tolerance compared to WT mice on standard rodent chow ( Figure 9 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.079
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt To examine glucose homeostasis in response to high-fat diet , female PGC-1 + / + and PGC-1  /  mice were placed on high-fat chow ( 43 % calories from fat ) for 6 wk starting at 8 wk of age .
# ::tok To examine glucose homeostasis in response to high-fat diet , female PGC-1 + / + and PGC-1  /  mice were placed on high-fat chow ( 43 % calories from fat ) for 6 wk starting at 8 wk of age .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.083
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The weight gained on the high-fat diet was similar for the PGC-1 + / + and PGC-1  /  groups ( Figure S3 ) .
# ::tok The weight gained on the high-fat diet was similar for the PGC-1 + / + and PGC-1  /  groups ( Figure S3 ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.087
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Surprisingly , the PGC-1  /  mice on a high-fat diet were significantly more glucose-tolerant and insulin-sensitive compared to the PGC-1 + / + mice ( Figure 9B ) .
# ::tok Surprisingly , the PGC-1  /  mice on a high-fat diet were significantly more glucose-tolerant and insulin-sensitive compared to the PGC-1 + / + mice ( Figure 9B ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.095
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Taken together , these results indicate that , despite excess body fat under standard conditions , the female PGC-1  /  mice do not exhibit insulin resistance .
# ::tok Taken together , these results indicate that , despite excess body fat under standard conditions , the female PGC-1  /  mice do not exhibit insulin resistance .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.099
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Moreover , the PGC-1  /  mice are more glucose-tolerant and insulin-sensitive than WT mice on a high-fat diet .
# ::tok Moreover , the PGC-1  /  mice are more glucose-tolerant and insulin-sensitive than WT mice on a high-fat diet .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.101
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Structural Abnormalities of the Central Nervous System in PGC-1  /  Mice .
# ::tok Structural Abnormalities of the Central Nervous System in PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.104
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt In surveying the tissues of the PGC-1  /  mice , structural abnormalities of the brain were observed .
# ::tok In surveying the tissues of the PGC-1  /  mice , structural abnormalities of the brain were observed .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.107
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Light microscopic examination of PGC-1  /  brain tissue samples demonstrated a well-preserved cerebral cortical neuronal complement , a result confirmed by measurement of neuron density in sections of the parietal lobe ( PGC-1 + / + , 1,261  91 neurons/mm2 versus PGC-1  /  , 1,299  82 neurons/mm2 ; not significant ) .
# ::tok Light microscopic examination of PGC-1  /  brain tissue samples demonstrated a well-preserved cerebral cortical neuronal complement , a result confirmed by measurement of neuron density in sections of the parietal lobe ( PGC-1 + / + , 1,261  91 neurons/mm2 versus PGC-1  /  , 1,299  82 neurons/mm2 ; not significant ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.109
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Patchy areas of microvacuolation involving the neuropil and individual pyramidal neurons of the deep layers of the cerebral cortex were noted in the PGC-1  /  mice but not the PGC-1 + / + mice ( Figure 10A ) .
# ::tok Patchy areas of microvacuolation involving the neuropil and individual pyramidal neurons of the deep layers of the cerebral cortex were noted in the PGC-1  /  mice but not the PGC-1 + / + mice ( Figure 10A ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.113
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Immunolocalization of an astrocytic marker , glial fibrillary acidic protein , failed to show an increase in numbers of astrocytic processes in PGC-1  /  mouse cerebral cortex ( unpublished data ) .
# ::tok Immunolocalization of an astrocytic marker , glial fibrillary acidic protein , failed to show an increase in numbers of astrocytic processes in PGC-1  /  mouse cerebral cortex ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.123
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The hippocampus also showed neuronal microvacuolation , albeit to a lesser degree than the parietal cortex .
# ::tok The hippocampus also showed neuronal microvacuolation , albeit to a lesser degree than the parietal cortex .
# ::alignments 15-16|0.4.0 14-15|0.4 11-12|0.2 10-11|0.2.0 5-6|0.1 4-5|0.1.0 3-4|0 2-3|0.3 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.259
(s / show-01 
      :ARG0 (h / hippocampu) 
      :ARG1 (m / microvacuolation 
            :mod (n / neuronal)) 
      :ARG2 (d / degree 
            :compared-to-of (l / less)) 
      :mod (a / also) 
      :op1-of (p / parietal 
            :mod-of (c / cortex)))

# ::snt Microvacuolation of the neuropil and neurons of the PGC-1  /  basal ganglia ( caudate and putamen ) was also noted in association with a patchy increase in the number and intensity of glial fibrillary acidic protein-immunoreactive astrocytic processes ( unpublished data ) .
# ::tok Microvacuolation of the neuropil and neurons of the PGC-1  /  basal ganglia ( caudate and putamen ) was also noted in association with a patchy increase in the number and intensity of glial fibrillary acidic protein-immunoreactive astrocytic processes ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.260
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Areas of microvacuolation also involved multiple brainstem regions .
# ::tok Areas of microvacuolation also involved multiple brainstem regions .
# ::alignments 7-8|0.1 6-7|0.1.1 5-6|0.1.0 4-5|0 3-4|0.3 2-3|0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.332
(i / involve-01 
      :ARG0 (m2 / microvacuolation) 
      :ARG1 (r / region 
            :location (m / multiple) 
            :mod (b / brainstem)) 
      :ARG2 (a2 / area) 
      :mod (a / also))

# ::snt Only rare vacuolated Purkinje and granule cell neurons were identified in the PGC-1  /  cerebellar cortex .
# ::tok Only rare vacuolated Purkinje and granule cell neurons were identified in the PGC-1  /  cerebellar cortex .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.333
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Neither microglial proliferation nor perivascular lymphocytic inflammatory infiltrates were noted in the PGC-1  /  CNS .
# ::tok Neither microglial proliferation nor perivascular lymphocytic inflammatory infiltrates were noted in the PGC-1  /  CNS .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.337
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Ultrastructural examination of the PGC-1  /  parietal cerebral cortex confirmed the presence of microvacuolated neurons and neuropil ( Figure 10B ) .
# ::tok Ultrastructural examination of the PGC-1  /  parietal cerebral cortex confirmed the presence of microvacuolated neurons and neuropil ( Figure 10B ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.344
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Vacuoles containing aggregates of membranous material were present in a subset of cortical neurons .
# ::tok Vacuoles containing aggregates of membranous material were present in a subset of cortical neurons .
# ::alignments 13-14|0.0.0.0.0.0.0.0 12-13|0.0.0.0.0.0.0.0.0 10-11|0.0.0.0.0.0.0 7-8|0.0.0.0.0.0 5-6|0.0 4-5|0 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:05.406
(m2 / membranou 
      :mod-of (m / material 
            :ARG1-of (a / aggregate-01 
                  :ARG1-of (c2 / contain-01 
                        :ARG0 (v / vacuol 
                              :domain-of (p / present 
                                    :location (s / subset 
                                          :mod (n / neuron 
                                                :mod (c / cortical)))))))))

# ::snt Subcellular localization of the vacuoles was difficult to establish ; some may represent vacuolated elements of the neuropil , material in phagocytic cells , presynaptic nerve terminals compressing the soma , or genuine intraperikaryal deposits .
# ::tok Subcellular localization of the vacuoles was difficult to establish ; some may represent vacuolated elements of the neuropil , material in phagocytic cells , presynaptic nerve terminals compressing the soma , or genuine intraperikaryal deposits .
# ::alignments 34-35|0.0.0.2 32-33|0.0.0.0.0.0.1.0 31-32|0.0.0 29-30|0.1 27-28|0 26-27|0.0 25-26|0.0.0.0.0.0.2.0 22-23|0.0.0.1.0 21-22|0.0.0.1.0.0 19-20|0.0.0.1 17-18|0.0.0.0 14-15|0.0.0.0.0 13-14|0.0.0.0.0.1 12-13|0.0.0.0.0.0 11-12|0.0.0.0.0.0.1 10-11|0.0.0.0.0.0.0 9-10|0.0.0.0.0.0.3 8-9|0.0.0.0.0.0.2 6-7|0.0.0.0.0.0.2.1 4-5|0.0.0.0.0.0.2.1.0.0 1-2|0.0.0.0.0.0.2.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:06.374
(c / compress-01 
      :ARG0 (t / terminal 
            :op3-of (o / or 
                  :op1 (n2 / neuropil 
                        :poss-of (e / element 
                              :ARG1-of (r / represent-01 
                                    :ARG0 (s2 / some) 
                                    :ARG1-of (p2 / possible-01 
                                          :ARG0 (g / genuine)) 
                                    :ARG1-of (e2 / establish-01 
                                          :ARG0 (n / nerve) 
                                          :domain-of (d2 / difficult 
                                                :domain (l / localization 
                                                      :poss (v2 / vacuol)))) 
                                    :ARG2 (a / and)) 
                              :mod (v / vacuolat))) 
                  :op2 (m / material 
                        :purpose (c2 / cell 
                              :mod (p / phagocytic))) 
                  :op4 (d / deposit))) 
      :ARG1 (s / soma))

# ::snt Previous studies using gain-of-function strategies have shown that the coactivator PGC-1 is capable of coactivating an array of transcription factors involved in energy metabolic processes including fatty acid oxidation , electron transport , and oxidative phosphorylation [ 6 ] .
# ::tok Previous studies using gain-of-function strategies have shown that the coactivator PGC-1 is capable of coactivating an array of transcription factors involved in energy metabolic processes including fatty acid oxidation , electron transport , and oxidative phosphorylation [ 6 ] .
# ::alignments 37-38|0.0.1.1.0.1.0.0 35-36|0.0.2 34-35|0.0.2.0 33-34|0.0.1 31-32|0.0.1.1 30-31|0.0.1.1.1 28-29|0.0.1.0 27-28|0.0.1.0.0 26-27|0.0.1.0.1 24-25|0.0.0 23-24|0.0.0.0 22-23|0.0.0.0.0 20-21|0.0 19-20|0 18-19|0.1 16-17|0.2 12-13|0.0.1.1.0.1.0 9-10|0.0.1.1.2 6-7|0.0.1.1.0.1 4-5|0.0.1.1.0.0.0 2-3|0.0.1.1.0.0 1-2|0.0.1.1.0 0-1|0.0.1.1.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:07.577
(f2 / factor 
      :ARG1-of (i / involve-01 
            :ARG2 (p2 / process-02 
                  :ARG1 (m / metabolic 
                        :mod (e2 / energy))) 
            :op1-of (a / and 
                  :op2 (o2 / oxidation 
                        :mod (a2 / acid) 
                        :mod (f / fatty)) 
                  :op3 (t / transport-01 
                        :ARG1 (s3 / study-01 
                              :ARG0-of (u / use-01 
                                    :ARG1 (s2 / strategy)) 
                              :ARG0-of (s / show-01 
                                    :ARG1 (c / capable-01 
                                          :ARG1 6)) 
                              :ARG1 (p3 / previou)) 
                        :mod (e / electron) 
                        :mod (c2 / coactivator))) 
            :purpose (p / phosphorylate-01 
                  :ARG1 (o / oxidative))) 
      :mod (t2 / transcription) 
      :quant (a3 / array))

# ::snt Forced expression of PGC-1 triggers mitochondrial biogenesis by activating a complex circuitry of factors including NRF-1 , NRF-2 , and the orphan nuclear receptor estrogen-related receptor  [ 23,32 ] .
# ::tok Forced expression of PGC-1 triggers mitochondrial biogenesis by activating a complex circuitry of factors including NRF-1 , NRF-2 , and the orphan nuclear receptor estrogen-related receptor  [ 23,32 ] .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:07.580
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt However , gain-of-function strategies can not determine whether PGC-1 is essential for critical energy metabolic processes including mitochondrial biogenesis and function .
# ::tok However , gain-of-function strategies can not determine whether PGC-1 is essential for critical energy metabolic processes including mitochondrial biogenesis and function .
# ::alignments 20-21|0.2.0.1 19-20|0.2.0 18-19|0.2.0.0 15-16|0.1.0 14-15|0.1.0.0 13-14|0.1.0.0.0 12-13|0.1.0.1 10-11|0.1 6-7|0 5-6|0.3 4-5|0.2 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:07.963
(d / determine-01 
      :ARG0 (s / strategy) 
      :ARG1 (e2 / essential 
            :purpose (p / process-02 
                  :ARG1 (m / metabolic 
                        :mod (e / energy)) 
                  :ARG1-of (c / critical-02))) 
      :ARG1-of (p2 / possible-01 
            :op1-of (a / and 
                  :op2 (b / biogenesi) 
                  :op3 (f / function-01))) 
      :polarity -)

# ::snt Using targeted gene deletion in mice , we show here that PGC-1 is not essential for normal embryologic development or the fundamental events of mitochondrial biogenesis .
# ::tok Using targeted gene deletion in mice , we show here that PGC-1 is not essential for normal embryologic development or the fundamental events of mitochondrial biogenesis .
# ::alignments 25-26|0.1.1.2.0.0 22-23|0.1.1.2.0 21-22|0.1.1.2.0.1 19-20|0.1.1.2 18-19|0.1.1 17-18|0.1.1.0 16-17|0.1.1.1 14-15|0.1 13-14|0.1.0 9-10|0.2 8-9|0 7-8|0.0 5-6|0.0.0.0.1 3-4|0.0.0.0 2-3|0.0.0.0.2 1-2|0.0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:08.098
(s / show-01 
      :ARG0 (w / we 
            :ARG0-of (u / use-01 
                  :ARG1 (d2 / deletion 
                        :ARG1-of (t / target-01) 
                        :location (m / mouse) 
                        :mod (g / gene)))) 
      :ARG1 (e3 / essential 
            :polarity - 
            :purpose (d / develop-02 
                  :ARG1 (e2 / embryologic) 
                  :ARG1-of (n / normal-02) 
                  :op1-of (o / or 
                        :op2 (e / event 
                              :mod (b / biogenesi) 
                              :mod (f / fundamental))))) 
      :location (h / here))

# ::snt However , several lines of evidence support the conclusion that PGC-1 is necessary for the programs that regulate postnatal mitochondrial function and cellular energy metabolism , processes that equip the organism for the energy metabolic rigors of the postnatal environment .
# ::tok However , several lines of evidence support the conclusion that PGC-1 is necessary for the programs that regulate postnatal mitochondrial function and cellular energy metabolism , processes that equip the organism for the energy metabolic rigors of the postnatal environment .
# ::alignments 39-40|0.0.0.2 38-39|0.0.0.2.0 35-36|0.0.0 34-35|0.0.0.1 33-34|0.0.0.0 30-31|0.0 28-29|0 26-27|0.1 24-25|0.1.0.1.1 23-24|0.1.0.1.1.0 22-23|0.1.0.1.0.0.0.0 21-22|0.1.0.1 20-21|0.1.0.2 18-19|0.1.0.2.0 17-18|0.1.0 15-16|0.1.0.0 8-9|0.1.0.1.0.1 6-7|0.1.0.1.0 5-6|0.1.0.1.0.0.0 3-4|0.1.0.1.0.0 2-3|0.1.0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.019
(e3 / equip-01 
      :ARG1 (o / organism 
            :purpose (r / rigor 
                  :mod (e2 / energy) 
                  :mod (m / metabolic) 
                  :poss (e / environment 
                        :mod (p / postnatal)))) 
      :ARG2-of (p2 / process-02 
            :ARG1 (r2 / regulate-01 
                  :ARG0 (p4 / program) 
                  :ARG1 (a / and 
                        :op1 (s / support-01 
                              :ARG0 (l / line 
                                    :consist-of (e5 / evidence-01 
                                          :ARG1 (c / cell)) 
                                    :quant (s2 / several)) 
                              :ARG1 (c2 / conclude-01)) 
                        :op2 (m2 / metabolism 
                              :mod (e4 / energy))) 
                  :ARG2 (f / function-01 
                        :ARG1 (p3 / postnatal)))))

# ::snt First , mitochondrial volume density is diminished in slow-twitch skeletal muscle of PGC-1  /  mice .
# ::tok First , mitochondrial volume density is diminished in slow-twitch skeletal muscle of PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.020
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Second , mitochondrial respiratory capacity is modestly but significantly altered in skeletal muscle and liver of PGC-1  /  mice .
# ::tok Second , mitochondrial respiratory capacity is modestly but significantly altered in skeletal muscle and liver of PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.023
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Third , the growth of heart and soleus muscle , tissues with high reliance on mitochondrial energy production , is blunted .
# ::tok Third , the growth of heart and soleus muscle , tissues with high reliance on mitochondrial energy production , is blunted .
# ::alignments 20-21|0.2.0.1 17-18|0.3 16-17|0.3.0 13-14|0.3.1 12-13|0.3.1.0 10-11|0.3.1.1 8-9|0.2 7-8|0.1 6-7|0 5-6|0.0 3-4|0.2.0 0-1|0.2.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.190
(a / and 
      :op1 (h2 / heart) 
      :op2 (s / soleu) 
      :op3 (m / muscle-01 
            :ARG1-of (g / grow-01 
                  :ARG0 (t2 / third) 
                  :ARG1-of (b / blunt-01))) 
      :op4 (p / produce-01 
            :ARG1 (e / energy) 
            :purpose-of (r / reliance 
                  :ARG1-of (h / high-02) 
                  :prep-with-of (t / tissue))))

# ::snt Fourth , control of body fat mass is abnormal in the PGC-1  /  mice .
# ::tok Fourth , control of body fat mass is abnormal in the PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.191
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Finally , PGC-1  /  mice do not respond normally to a variety of physiologic and dietary stresses known to increase oxidative energy demands .
# ::tok Finally , PGC-1  /  mice do not respond normally to a variety of physiologic and dietary stresses known to increase oxidative energy demands .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.194
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Taken together , these results strongly suggest that PGC-1 is necessary for the terminal stages of mitochondrial maturation necessary to meet the energy demands of the postnatal environment .
# ::tok Taken together , these results strongly suggest that PGC-1 is necessary for the terminal stages of mitochondrial maturation necessary to meet the energy demands of the postnatal environment .
# ::alignments 27-28|0.1.0.0 26-27|0.1.0.0.0 23-24|0.1.0 22-23|0.1.0.2 20-21|0.1.0.1 17-18|0.1.0.1.0.1 14-15|0.1.0.1.0 13-14|0.1.0.1.0.0 6-7|0 5-6|0.2 4-5|0.0.0+0.0 3-4|0.0.1 1-2|0.1.1 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.323
(s2 / suggest-01 
      :ARG0 (t2 / thing 
            :ARG2-of (r / result-01) 
            :mod (t3 / this)) 
      :ARG1 (t5 / take-01 
            :ARG1 (d / demand-01 
                  :ARG1 (e / environment 
                        :mod (p / postnatal)) 
                  :ARG1-of (m / meet-03 
                        :ARG0 (s / stage 
                              :mod (t / terminal) 
                              :mod-of (m2 / maturation))) 
                  :mod (e2 / energy)) 
            :mod (t4 / together)) 
      :ARG1-of (s3 / strong-02))

# ::snt Extensive phenotypic analyses demonstrated that mice lacking PGC-1 are unable to cope with physiologic stressors relevant to postnatal survival .
# ::tok Extensive phenotypic analyses demonstrated that mice lacking PGC-1 are unable to cope with physiologic stressors relevant to postnatal survival .
# ::alignments 18-19|0.0.0 17-18|0.0.0.0 15-16|0.0.0.1 14-15|0.0.0.2.1 13-14|0.0.0.2.1.0 11-12|0.0.0.2 6-7|0.0.0.2.0.0 5-6|0.0.0.2.0 3-4|0 2-3|0.0 1-2|0.0.1 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.542
(d / demonstrate-01 
      :ARG0 (a / analysis 
            :ARG0-of (s / survive-01 
                  :ARG1 (p / postnatal) 
                  :ARG1-of (r / relevant-01) 
                  :ARG2-of (c / cope-01 
                        :ARG0 (m / mouse 
                              :ARG1-of (l / lack-01)) 
                        :ARG1 (s2 / stressor 
                              :mod (p2 / physiologic)))) 
            :mod (p3 / phenotypic) 
            :mod (e / extensive)))

# ::snt For example , a skeletal muscle phenotype was unveiled in PGC-1  /  mice under conditions in which energy supply becomes limiting .
# ::tok For example , a skeletal muscle phenotype was unveiled in PGC-1  /  mice under conditions in which energy supply becomes limiting .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.543
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt This was most clearly demonstrated by the profound abnormalities exhibited by PGC-1  /  mice with exercise-to-exhaustion and repetitive muscle stimulation studies .
# ::tok This was most clearly demonstrated by the profound abnormalities exhibited by PGC-1  /  mice with exercise-to-exhaustion and repetitive muscle stimulation studies .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.546
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Similarly , cardiac performance of PGC-1  /  mice was compromised following severe exertion .
# ::tok Similarly , cardiac performance of PGC-1  /  mice was compromised following severe exertion .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.554
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt This effect was largely due to an abnormal heart rate response .
# ::tok This effect was largely due to an abnormal heart rate response .
# ::alignments 10-11|0.1 9-10|0 8-9|0.1.1 7-8|0.1.2 3-4|0.1.0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:09.596
(r2 / rate 
      :ARG1-of (e / effect-03 
            :mod (t / this)) 
      :mod-of (r / respond-01 
            :ARG1 (l / large) 
            :ARG2 (h / heart) 
            :mod (a / abnormal)))

# ::snt The basis for the observed abnormalities of cardiac heart rate , including a blunted response to -adrenergic stimulation , is unknown , but could be related to the effects of late-stage growth arrest and corresponding derangements in energy metabolism on sinus node function .
# ::tok The basis for the observed abnormalities of cardiac heart rate , including a blunted response to -adrenergic stimulation , is unknown , but could be related to the effects of late-stage growth arrest and corresponding derangements in energy metabolism on sinus node function .
# ::alignments 42-43|0.1.0.0 41-42|0.1.0.0.0 40-41|0.1.0.0.1 38-39|0.1.0.0.2 37-38|0.1.0.0.2.0 35-36|0.1.0.1.0.1 34-35|0.1.0.1.0.1.0 33-34|0.1.0.1.0 32-33|0.1.0.1.0.0 31-32|0.1.0.1.0.0.0 28-29|0.1.0.1 25-26|0.1.0 23-24|0.1 22-23|0 20-21|0.0.2+0.0 17-18|0.0.1.0 14-15|0.0.1 13-14|0.0.1.1 9-10|0.0.0.0 8-9|0.0.0 7-8|0.0.0.0.0 5-6|0.1.0.1.0.0.0.0.0 4-5|0.1.0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.244
(c2 / contrast-01 
      :ARG1 (k / know-01 
            :ARG0 (h / heart 
                  :mod-of (r3 / rate 
                        :mod (c3 / cardiac))) 
            :ARG1 (r2 / respond-01 
                  :ARG1 (s2 / stimulation) 
                  :ARG1-of (b / blunt-01)) 
            :polarity -) 
      :ARG2 (p / possible-01 
            :ARG1 (r / relate-01 
                  :ARG1 (f / function-01 
                        :ARG0 (n / node) 
                        :ARG1 (s / sinu) 
                        :purpose-of (m / metabolism 
                              :mod (e / energy))) 
                  :ARG2 (e2 / effect 
                        :consist-of (a / and 
                              :op1 (a2 / arrest-01 
                                    :mod (g / grow-01 
                                          :ARG1 (o / observe-01 
                                                :ARG1 (a3 / abnormaliti)))) 
                              :op2 (d / derangement 
                                    :ARG1-of (c / correspond-01)))))))

# ::snt PGC-1 was first identified as a coactivator in BAT [ 2 ] .
# ::tok PGC-1 was first identified as a coactivator in BAT [ 2 ] .
# ::alignments 10-11|0.0 8-9|0.1.0.0.0+0.1.0.0+0.1.0 6-7|0.1 3-4|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.265
(i / identify-01 
      :ARG1 2 
      :ARG2 (c2 / coactivator 
            :location (c / country 
                  :name (n / name 
                        :op1 "BAT"))))

# ::snt Indeed , we found that exposure of the PGC-1  /  mice to cold , another relevant physiologic stress , resulted in an untoward drop in core body temperature consistent with an abnormality in thermogenesis despite normal cold induction of UCP-1 mRNA in BAT .
# ::tok Indeed , we found that exposure of the PGC-1  /  mice to cold , another relevant physiologic stress , resulted in an untoward drop in core body temperature consistent with an abnormality in thermogenesis despite normal cold induction of UCP-1 mRNA in BAT .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.266
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Studies with a 3-adrenergic agonist confirmed that the peak oxygen consumption rate in thermogenic tissue is diminished in PGC-1  /  mice .
# ::tok Studies with a 3-adrenergic agonist confirmed that the peak oxygen consumption rate in thermogenic tissue is diminished in PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.275
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt We propose that the thermogenic phenotype is related to reduced capacity for mitochondrial respiration in BAT .
# ::tok We propose that the thermogenic phenotype is related to reduced capacity for mitochondrial respiration in BAT .
# ::alignments 15-16|0.1.1.1.0.0.0+0.1.1.1.0.0+0.1.1.1.0 13-14|0.1.1.1 10-11|0.1.1 9-10|0.1.1.0 7-8|0.1 5-6|0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.323
(p2 / propose-01 
      :ARG0 (w / we) 
      :ARG1 (r3 / relate-01 
            :ARG1 (p / phenotype) 
            :ARG2 (c2 / capacity 
                  :mod (r2 / reduce-01) 
                  :prep-for (r / respiration 
                        :location (c / country 
                              :name (n / name 
                                    :op1 "BAT"))))))

# ::snt Interestingly , this phenotype was only evident during a rather narrow window of postnatal life .
# ::tok Interestingly , this phenotype was only evident during a rather narrow window of postnatal life .
# ::alignments 14-15|0.0.0.0.0.0 13-14|0.0.0.0.0.0.0 11-12|0.0.0.0.0 10-11|0.0.0.0 6-7|0 5-6|0.1 3-4|0.0 2-3|0.0.0 0-1|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.387
(e / evident 
      :domain (p2 / phenotype 
            :mod (t / this 
                  :ARG0-of (n / narrow-02 
                        :ARG1 (w / window 
                              :part-of (l / life 
                                    :mod (p / postnatal)))))) 
      :mod (o / only) 
      :mod (i / interesting))

# ::snt Animals at an older age did not exhibit cold intolerance , possibly due to the insulating properties of increased body mass .
# ::tok Animals at an older age did not exhibit cold intolerance , possibly due to the insulating properties of increased body mass .
# ::alignments 20-21|0.3.0 19-20|0.3.0.0 18-19|0.3 16-17|0.3.1.0.1.0 15-16|0.3.1.0.1 11-12|0.3.1 9-10|0.1 8-9|0.1.0 7-8|0 6-7|0.2 4-5|0.3.1.0 3-4|0.3.1.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.655
(e / exhibit-01 
      :ARG0 (a2 / animal) 
      :ARG1 (i3 / intolerance 
            :mod (c / cold)) 
      :polarity - 
      :purpose (i / increase-01 
            :ARG1 (m / mass 
                  :mod (b / body)) 
            :ARG1-of (p2 / possible-01 
                  :ARG2-of (a / age-01 
                        :mod (o / old) 
                        :purpose (i2 / insulate-01 
                              :ARG1 (p / property))))))

# ::snt Collectively , these results demonstrate the importance of PGC-1 as a key transducer of physiologic stimuli to the control of energy metabolism .
# ::tok Collectively , these results demonstrate the importance of PGC-1 as a key transducer of physiologic stimuli to the control of energy metabolism .
# ::alignments 21-22|0.2.0 20-21|0.2.0.0 18-19|0.2 15-16|0.3.1 14-15|0.3.1.0 12-13|0.3 11-12|0.3.0 6-7|0.1 4-5|0 3-4|0.0.0+0.0 2-3|0.0.1 0-1|0.4 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.767
(d / demonstrate-01 
      :ARG0 (t2 / thing 
            :ARG2-of (r / result-01) 
            :mod (t3 / this)) 
      :ARG1 (i / important) 
      :ARG2 (c / control-01 
            :ARG1 (m / metabolism 
                  :mod (e / energy))) 
      :manner (t / transduc 
            :ARG1-of (k / key-02) 
            :mod (s / stimulus 
                  :mod (p / physiologic))) 
      :time (c2 / collectively))

# ::snt The observation of fasting-induced hepatic steatosis is another example of the inability of PGC-1  /  mice to respond to postnatal environmental metabolic demands .
# ::tok The observation of fasting-induced hepatic steatosis is another example of the inability of PGC-1  /  mice to respond to postnatal environmental metabolic demands .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.770
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Following short-term starvation , we found that the PGC-1  /  mice developed marked hepatocyte triglyceride accumulation .
# ::tok Following short-term starvation , we found that the PGC-1  /  mice developed marked hepatocyte triglyceride accumulation .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.774
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Further analysis revealed that palmitate oxidation rates were reduced in hepatocytes isolated from the PGC-1  /  mice , which would predispose to lipid accumulation .
# ::tok Further analysis revealed that palmitate oxidation rates were reduced in hepatocytes isolated from the PGC-1  /  mice , which would predispose to lipid accumulation .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:10.778
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Surprisingly , the reduction in fatty acid oxidation rates in PGC-1 null hepatocytes was not due to altered expression of PGC-1 / PPAR target genes involved in mitochondrial fatty acid oxidation .
# ::tok Surprisingly , the reduction in fatty acid oxidation rates in PGC-1 null hepatocytes was not due to altered expression of PGC-1 / PPAR target genes involved in mitochondrial fatty acid oxidation .
# ::alignments 30-31|0.0.1.0.1 29-30|0.0.1.0.1.0 28-29|0 25-26|0.0.1.0 24-25|0.0.1 23-24|0.0 21-22|0.0.1.2 18-19|0.0.1.1 17-18|0.0.1.1.1 14-15|0.0.0 12-13|0.0.1.1.0 11-12|0.0.1.1.0.0 8-9|0.0.1.0.2.0 7-8|0.0.1.0.2.0.0 6-7|0.0.1.0.2.0.2 5-6|0.0.1.0.2.0.1 3-4|0.0.1.0.2 0-1|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:11.471
(f / fatty 
      :ARG3-of (t / target-01 
            :ARG0 - 
            :ARG1 (g / gene 
                  :ARG1-of (i / involve-01 
                        :ARG0 (s2 / surprisingly) 
                        :ARG2 (o / oxidation 
                              :mod (a / acid)) 
                        :ARG2-of (r2 / reduce-01 
                              :ARG1 (r / rate 
                                    :mod (o2 / oxidation) 
                                    :mod (f2 / fatty) 
                                    :mod (a3 / acid)))) 
                  :ARG1-of (e / express-01 
                        :ARG0 (h / hepatocyt 
                              :ARG1-of (n / null-02)) 
                        :ARG1-of (a2 / alter-01)) 
                  :op1-of (s / slash))))

# ::snt However , mitochondrial respiratory rates were diminished .
# ::tok However , mitochondrial respiratory rates were diminished .
# ::alignments 6-7|0 4-5|0.0 3-4|0.0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:11.485
(d / diminish-01 
      :ARG1 (r / rate 
            :mod (r2 / respiratory) 
            :mod (m / mitochondrial)))

# ::snt In addition , we found that triglyceride synthesis was abnormally activated , and the expression of genes encoding SREBP-1c and SCD-1 , key proteins in the hepatic lipogenic pathway , failed to be appropriately down-regulated in fasted PGC-1  /  mice .
# ::tok In addition , we found that triglyceride synthesis was abnormally activated , and the expression of genes encoding SREBP-1c and SCD-1 , key proteins in the hepatic lipogenic pathway , failed to be appropriately down-regulated in fasted PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:11.489
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The mechanism involved in this latter finding is unknown .
# ::tok The mechanism involved in this latter finding is unknown .
# ::alignments 8-9|0.1+0 6-7|0.0.0.0 5-6|0.0.0.0.1 4-5|0.0.0.0.0 2-3|0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:11.515
(k / know-01 
      :ARG1 (m / mechanism 
            :ARG1-of (i / involve-01 
                  :ARG2 (f / find-01 
                        :mod (t / this) 
                        :quant (l / latter)))) 
      :polarity -)

# ::snt Indeed , the relative contribution of increased triglyceride synthesis rates to the steatotic phenotype can not be fully discerned from our data , given that this response could reflect the direct effects of PGC-1 deficiency on target genes or a secondary compensatory response to hepatocyte fatty acid accumulation .
# ::tok Indeed , the relative contribution of increased triglyceride synthesis rates to the steatotic phenotype can not be fully discerned from our data , given that this response could reflect the direct effects of PGC-1 deficiency on target genes or a secondary compensatory response to hepatocyte fatty acid accumulation .
# ::alignments 47-48|0.1.0.3.0.0 46-47|0.1.0.3.0.0.0 45-46|0.1.0.3.0.0.1 42-43|0.1.0.0.1 40-41|0.1.0.0.0 38-39|0.1.0.0.1.0 37-38|0.1.0.0.1.0.0 36-37|0.1.0.0.1.0.0.0 34-35|0.1.0.1 31-32|0.1.0.3 30-31|0.1.0.3.0 28-29|0.1.0 27-28|0.1.0.2 26-27|0.1.0.0 25-26|0.1.0.0.2 23-24|0.1 21-22|0.0.1 20-21|0.0.1.0 18-19|0.0 17-18|0.0.2 15-16|0.0.3 14-15|0 13-14|0.0.0.0 9-10|0.0.0.1.1 8-9|0.0.0.1.1.0 7-8|0.0.0.1.1.1 6-7|0.0.0.1 4-5|0.0.0 3-4|0.0.0.2 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:12.637
(p2 / possible-01 
      :ARG1 (d4 / discern-01 
            :ARG1 (c / contribute-01 
                  :ARG1 (p3 / phenotype) 
                  :ARG2 (i / increase-01 
                        :ARG0 (i2 / indeed) 
                        :ARG1 (r4 / rate 
                              :mod (s2 / synthesi) 
                              :mod (t3 / triglyceride))) 
                  :mod (r5 / relative)) 
            :ARG2 (d3 / data 
                  :poss (w / we)) 
            :manner (f2 / full) 
            :polarity -) 
      :condition (g2 / give-01 
            :ARG1 (r2 / reflect-01 
                  :ARG0 (r3 / respond-01 
                        :ARG1 (s / secondary) 
                        :ARG1-of (r / respond-01 
                              :op2-of (o / or 
                                    :op1 (g / gene 
                                          :ARG1-of (t / target-01)))) 
                        :mod (t2 / this)) 
                  :ARG1 (d / deficiency) 
                  :ARG1-of (p / possible-01) 
                  :ARG2 (e / effect 
                        :ARG1-of (d2 / direct-02 
                              :ARG0 (a / accumulation 
                                    :mod (a2 / acid) 
                                    :mod (f / fatty)))))))

# ::snt Consistent with the former possibility , recent evidence indicates that PGC-1 coactivates the nuclear receptor FXR , a negative regulator of SREBP-1c expression and triglyceride synthesis [ 33 ] .
# ::tok Consistent with the former possibility , recent evidence indicates that PGC-1 coactivates the nuclear receptor FXR , a negative regulator of SREBP-1c expression and triglyceride synthesis [ 33 ] .
# ::alignments 27-28|0.0.0 25-26|0.0.1.0 24-25|0.1.2.1.1.0 23-24|0.1.2 22-23|0.1.2.1 21-22|0.1.2.1.0.0.0+0.1.2.1.0.0+0.1.2.1.0 19-20|0.1.2.0 18-19|0.1.2.0.0 15-16|0.1.1.0+0.1.1+0.1 14-15|0.1.0 13-14|0.1.0.0 8-9|0 7-8|0.0 6-7|0.0.1 4-5|0.1.2.1.1 3-4|0.1.2.1.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:12.899
(i / indicate-01 
      :ARG0 (e2 / evidence-01 
            :ARG0 33 
            :time (r3 / recent 
                  :mod-of (s / synthesi))) 
      :ARG1 (o2 / organization 
            :mod (r2 / receptor 
                  :mod (n4 / nucleus)) 
            :name (n3 / name 
                  :op1 "FXR") 
            :op1-of (a / and 
                  :op2 (r / regulator 
                        :mod (n2 / negative)) 
                  :op3 (e / express-01 
                        :ARG0 (o / organization 
                              :name (n / name 
                                    :op1 "SREBP-1c")) 
                        :ARG1 (p / possible-01 
                              :ARG1 (t / triglyceride) 
                              :time (f / former))))))

# ::snt We conclude that reduced hepatocyte mitochondrial respiratory capacity , and possibly activation of lipogenic programs , result in hepatocyte triglyceride accumulation in the context of increased hepatic delivery of fatty acids such as occurs with fasting .
# ::tok We conclude that reduced hepatocyte mitochondrial respiratory capacity , and possibly activation of lipogenic programs , result in hepatocyte triglyceride accumulation in the context of increased hepatic delivery of fatty acids such as occurs with fasting .
# ::alignments 35-36|0.1.1.0.0.0 33-34|0.1.1.0.0 31-32|0.1.0.1.0.0 30-31|0.1.0.3.0.0.0 29-30|0.1.0.3.0.0.0.0 27-28|0.1.0.3.0.0 26-27|0.1.0.3.0.0.1 25-26|0.1.0.3.0 23-24|0.1.1.0 20-21|0.1.1 19-20|0.1.1.1 16-17|0.1 14-15|0.1.0.3 11-12|0.1.0.2 10-11|0.1.0.0 9-10|0.1.0 7-8|0.1.0.1 6-7|0.1.0.1.1 3-4|0.1.0.1.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.546
(c3 / conclude-02 
      :ARG0 (w / we) 
      :ARG1 (r / result-01 
            :ARG1 (a4 / and 
                  :ARG1-of (p2 / possible-01) 
                  :op1 (c2 / capacity 
                        :mod (r3 / reduce-01 
                              :ARG1 (s / such)) 
                        :mod (r2 / respiratory)) 
                  :op2 (a3 / activation) 
                  :op3 (p / program 
                        :ARG0-of (i / increase-01 
                              :ARG1 (d / deliver-01 
                                    :ARG1 (a / acid 
                                          :mod (f2 / fatty)) 
                                    :mod (h / hepatic))))) 
            :ARG2 (a2 / accumulation 
                  :location (c / context 
                        :ARG0-of (o / occur-01 
                              :ARG1 (f / fast))) 
                  :mod (t / triglyceride))))

# ::snt We found that after 18 wk of age , female PGC-1  /  mice exhibit a mild but significantly abnormal weight increase associated with increased fat stores .
# ::tok We found that after 18 wk of age , female PGC-1  /  mice exhibit a mild but significantly abnormal weight increase associated with increased fat stores .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.548
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Lean mass was unchanged at the time points examined .
# ::tok Lean mass was unchanged at the time points examined .
# ::alignments 8-9|0.2.0 7-8|0.2.0.0 6-7|0.2 3-4|0.1+0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.603
(c / change-01 
      :ARG1 (m / mass 
            :ARG1-of (l / lean-01)) 
      :polarity - 
      :time (t / time 
            :time-of (e / examine-01 
                  :ARG1 (p / point))))

# ::snt With further aging , a modest but significant increase in body fat was also noted in male PGC-1  /  mice ( unpublished data ) .
# ::tok With further aging , a modest but significant increase in body fat was also noted in male PGC-1  /  mice ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.605
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The basis for the observed abnormalities in weight control is unknown .
# ::tok The basis for the observed abnormalities in weight control is unknown .
# ::alignments 10-11|0.1+0 8-9|0.0 7-8|0.0.0 5-6|0.0.1 4-5|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.634
(k / know-01 
      :ARG1 (c / control-01 
            :ARG1 (w / weight) 
            :topic-of (a / abnormaliti 
                  :ARG1-of (o / observe-01))) 
      :polarity -)

# ::snt We did not find differences in food intake or activity levels in female PGC-1  /  mice .
# ::tok We did not find differences in food intake or activity levels in female PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.636
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt It is possible that a reduction in systemic energy utilization , related to the mitochondrial dysfunction , leads to increased fat mass and weight gain in the PGC-1  /  mice .
# ::tok It is possible that a reduction in systemic energy utilization , related to the mitochondrial dysfunction , leads to increased fat mass and weight gain in the PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.644
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Interestingly , an association between PGC-1 gene polymorphisms and obesity in humans has been recently reported [ 26 ] .
# ::tok Interestingly , an association between PGC-1 gene polymorphisms and obesity in humans has been recently reported [ 26 ] .
# ::alignments 17-18|0.0.1 15-16|0 14-15|0.2 11-12|0.0.0.1.0.0 9-10|0.0.0.1.0 8-9|0.0.0.1 7-8|0.0.0 6-7|0.0.0.0 3-4|0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.795
(r / report-01 
      :ARG1 (a2 / associate-01 
            :ARG0 (p / polymorphism 
                  :mod (g / gene) 
                  :op1-of (a / and 
                        :op2 (o / obesity 
                              :mod (h / human)))) 
            :ARG1 26) 
      :mod (i / interesting) 
      :time (r2 / recent))

# ::snt Clearly , future studies of male and female PGC-1  /  mice in pure-strain backgrounds over a range of ages will be necessary to fully investigate the observed abnormalities in weight control and fat distribution .
# ::tok Clearly , future studies of male and female PGC-1  /  mice in pure-strain backgrounds over a range of ages will be necessary to fully investigate the observed abnormalities in weight control and fat distribution .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.797
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt We did not find evidence for glucose intolerance or insulin resistance in the PGC-1  /  animals on standard chow .
# ::tok We did not find evidence for glucose intolerance or insulin resistance in the PGC-1  /  animals on standard chow .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.800
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Moreover , female PGC-1  /  mice were more glucose-tolerant and insulin-sensitive than PGC-1 + / + controls when consuming a high-fat diet .
# ::tok Moreover , female PGC-1  /  mice were more glucose-tolerant and insulin-sensitive than PGC-1 + / + controls when consuming a high-fat diet .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:13.802
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These findings are surprising , given the results of several recent studies demonstrating reduced expression of PGC-1 in human diabetic skeletal muscle [ 24,34 ] .
# ::tok These findings are surprising , given the results of several recent studies demonstrating reduced expression of PGC-1 in human diabetic skeletal muscle [ 24,34 ] .
# ::alignments 21-22|0.0.0 20-21|0.0.1 19-20|0.0.0.0.0 18-19|0.0.0.0 14-15|0.1.0.0.1 13-14|0.1.0.0.1.0 12-13|0.1.0.0 11-12|0.0 10-11|0.0.3 9-10|0.0.2 7-8|0+0.1 5-6|0.1.0 3-4|0.1.0.0.0.0 1-2|0.1.0.0.0.1+0.1.0.0.0 0-1|0.1.0.0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:14.409
(r3 / result-01 
      :ARG1 (s2 / study-01 
            :ARG0-of (m / muscle-01 
                  :ARG1 (h / human 
                        :mod-of (d / diabetic))) 
            :ARG1 (s / skeletal) 
            :quant (s3 / several) 
            :time (r2 / recent)) 
      :ARG2 (t / thing 
            :ARG2-of (g / give-01 
                  :ARG1 (d2 / demonstrate-01 
                        :ARG0 (t2 / thing 
                              :ARG1-of (s4 / surprise-01) 
                              :ARG1-of (f / find-01) 
                              :mod (t3 / this)) 
                        :ARG1 (e / express-01 
                              :ARG1-of (r / reduce-01))))))

# ::snt It is certainly possible that compensatory metabolic regulatory mechanisms have been activated in the PGC-1-deficient mice , accounting for this observation .
# ::tok It is certainly possible that compensatory metabolic regulatory mechanisms have been activated in the PGC-1-deficient mice , accounting for this observation .
# ::alignments 20-21|0.0.0.1.0 19-20|0.0.0.1.0.0 17-18|0.0.0.1 15-16|0.0.1 11-12|0.0 8-9|0.0.0 7-8|0.0.0.0 6-7|0.0.0.2 3-4|0 2-3|0.2 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:14.546
(p / possible-01 
      :ARG1 (a2 / activate-01 
            :ARG1 (m2 / mechanism 
                  :ARG0-of (r / regulate-01) 
                  :ARG0-of (a / account-01 
                        :ARG1 (o / observation 
                              :mod (t / this))) 
                  :mod (m3 / metabolic)) 
            :location (m / mouse)) 
      :domain (i / it) 
      :mod (c / certain))

# ::snt Alternatively , PGC-1 could serve as a coactivator of factors that mediate diet-induced insulin resistance .
# ::tok Alternatively , PGC-1 could serve as a coactivator of factors that mediate diet-induced insulin resistance .
# ::alignments 14-15|0.0.1.1 13-14|0.0.1.1.0 12-13|0.0.1.1.1 11-12|0.0.1 9-10|0.0.1.0 7-8|0.0.0 4-5|0.0 3-4|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:14.718
(p / possible-01 
      :ARG1 (s / serve-01 
            :ARG1 (c / coactivator) 
            :ARG2-of (m / mediate-01 
                  :ARG0 (f / factor) 
                  :ARG1 (r / resist-01 
                        :ARG1 (i / insulin) 
                        :time (d / diet-induc)))) 
      :location (a / alternatively))

# ::snt Consistent with this notion , we and others have shown that mice lacking the PGC-1 target PPAR exhibit resistance to diet-induced glucose intolerance [ 21,35,36 ] .
# ::tok Consistent with this notion , we and others have shown that mice lacking the PGC-1 target PPAR exhibit resistance to diet-induced glucose intolerance [ 21,35,36 ] .
# ::alignments 22-23|0.0.0.1.0 21-22|0.0.0.1.0.0 20-21|0.0.0.0.0.0 18-19|0.0.0.1 17-18|0 16-17|0.1 15-16|0.0.0.1.1 12-13|0.0.0 11-12|0.0 9-10|0.0.0.0.0 7-8|0.0.0.0.2 6-7|0.0.0.0 5-6|0.0.0.0.1 3-4|0.0.0.1.1.0 2-3|0.0.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:15.507
(e / exhibit-01 
      :ARG0 (m / mouse 
            :ARG2-of (l / lack-01 
                  :ARG0 (a / and 
                        :ARG0-of (s / show-01 
                              :ARG1 (d / diet-induc)) 
                        :op1 (w / we) 
                        :op2 (o / other)) 
                  :ARG1 (r / resist-01 
                        :ARG1 (i / intolerance 
                              :mod (g / glucose)) 
                        :ARG1-of (t / target-01 
                              :ARG0 (n / notion 
                                    :mod (t2 / this)))))) 
      :ARG1 (p / PPAR))

# ::snt Histologic surveys of the PGC-1  /  mice revealed ultrastructural abnormalities in the central nervous system .
# ::tok Histologic surveys of the PGC-1  /  mice revealed ultrastructural abnormalities in the central nervous system .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:15.508
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Inspection of sections prepared from the brains of PGC-1  /  mice revealed patchy areas of microvacuolation in the pyramidal neurons of the cerebral cortex , accompanied by a mild increase in the number of astrocytes in the basal ganglia .
# ::tok Inspection of sections prepared from the brains of PGC-1  /  mice revealed patchy areas of microvacuolation in the pyramidal neurons of the cerebral cortex , accompanied by a mild increase in the number of astrocytes in the basal ganglia .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:15.511
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The basis for this interesting but relatively nonspecific finding is unknown .
# ::tok The basis for this interesting but relatively nonspecific finding is unknown .
# ::alignments 10-11|0.2.1+0.2 8-9|0.1 7-8|0.1.0 6-7|0.2.0 5-6|0 4-5|0.0 3-4|0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:15.589
(c / contrast-01 
      :ARG1 (i / interest-01) 
      :ARG1-of (f / find-01 
            :mod (n / nonspecific) 
            :mod (t / this)) 
      :ARG2 (k / know-01 
            :ARG1 (r / relative) 
            :polarity -))

# ::snt It is possible that PGC-1 plays an important role in lipid metabolism related to membrane synthesis .
# ::tok It is possible that PGC-1 plays an important role in lipid metabolism related to membrane synthesis .
# ::alignments 15-16|0.0.1.1.0.0 14-15|0.0.1.1.0.0.0 12-13|0.0.1.1.0 11-12|0.0.1.1 10-11|0.0.1.1.1 8-9|0.0.1 7-8|0.0.1.0 5-6|0.0 2-3|0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:15.855
(p2 / possible-01 
      :ARG1 (p / play-02 
            :ARG0 (i2 / it) 
            :ARG1 (r2 / role 
                  :mod (i / important) 
                  :mod (m2 / metabolism 
                        :ARG1-of (r / relate-01 
                              :ARG2 (s / synthesi 
                                    :mod (m / membrane))) 
                        :mod (l / lipid)))))

# ::snt Alternatively , the normal process of cellular debris turnover could be altered due to a defect in the energetics of the microglial component of the central nervous system .
# ::tok Alternatively , the normal process of cellular debris turnover could be altered due to a defect in the energetics of the microglial component of the central nervous system .
# ::alignments 27-28|0.0.0.2.0 26-27|0.0.0.2 25-26|0.0.0.2.0.0 22-23|0.0.0.2.0.1 21-22|0.0.0.2.0.1.0 18-19|0.0.0.2.0.1.1 15-16|0.0.0.2.0.1.1.0 11-12|0.0 9-10|0 8-9|0.0.0.0 7-8|0.0.0.0.0 6-7|0.0.0.3 4-5|0.0.0 3-4|0.0.0.1 0-1|0.0.0.2.0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:16.381
(p / possible-01 
      :ARG1 (a / alter-01 
            :ARG1 (p2 / process-02 
                  :ARG1 (t / turnover 
                        :mod (d2 / debris)) 
                  :ARG1-of (n2 / normal-02) 
                  :ARG2 (n / nervous-01 
                        :ARG1 (s / system 
                              :mod (c / central) 
                              :mod-of (c2 / component 
                                    :mod (m / microglial) 
                                    :poss-of (e / energetic 
                                          :ARG1-of (d / defect-01 
                                                :ARG0 (a2 / alternatively)))))) 
                  :location (c3 / cell))))

# ::snt Although overt neurologic dysfunction was not apparent in PGC-1  /  mice during the first 6 mo of life ( no group differences were found on five of six sensorimotor tests ) , the PGC-1  /  mice showed clear deficits on the inverted screen test .
# ::tok Although overt neurologic dysfunction was not apparent in PGC-1  /  mice during the first 6 mo of life ( no group differences were found on five of six sensorimotor tests ) , the PGC-1  /  mice showed clear deficits on the inverted screen test .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:16.383
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These deficits are likely due to impaired muscle strength in the PGC-1  /  mice , but contributions by peripheral or central nervous system determinants ( or both ) could be contributory .
# ::tok These deficits are likely due to impaired muscle strength in the PGC-1  /  mice , but contributions by peripheral or central nervous system determinants ( or both ) could be contributory .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:16.386
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Moreover , evidence of altered emotionality from the 1-h locomotor activity test also suggests the possibility of altered brain function in PGC-1  /  mice .
# ::tok Moreover , evidence of altered emotionality from the 1-h locomotor activity test also suggests the possibility of altered brain function in PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:16.390
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt It will be of interest to determine whether the neurologic abnormalities contribute to the systemic metabolic abnormalities of the PGC-1 null mice .
# ::tok It will be of interest to determine whether the neurologic abnormalities contribute to the systemic metabolic abnormalities of the PGC-1 null mice .
# ::alignments 21-22|0.0.0.0.0 20-21|0.0.0.0 16-17|0.0.0.2 15-16|0.0.0.2.0 14-15|0.0.0.2.1 11-12|0.0.0 10-11|0.0 9-10|0 6-7|0.0.0.1 4-5|0.0.0.1.1 0-1|0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:16.644
(n2 / neurologic 
      :mod-of (a2 / abnormaliti 
            :ARG0-of (c / contribute-01 
                  :ARG1 (n / null-02 
                        :ARG1 (m / mouse)) 
                  :ARG1-of (d / determine-01 
                        :ARG0 (i2 / it) 
                        :ARG1-of (i / interest-01)) 
                  :ARG2 (a / abnormaliti 
                        :mod (m2 / metabolic) 
                        :mod (s / systemic)))))

# ::snt During the preparation of this manuscript , Lin et al. reported an independent mouse line in which the PGC-1 gene was targeted [ 37 ] .
# ::tok During the preparation of this manuscript , Lin et al. reported an independent mouse line in which the PGC-1 gene was targeted [ 37 ] .
# ::alignments 23-24|0.0.0.1 21-22|0.0.1 19-20|0.0.1.0 14-15|0.1 13-14|0.1.1 12-13|0.1.0.0+0.1.0 10-11|0 7-8|0.0.3+0.0.2.0+0.0.2+0.0 5-6|0.0.0.0 4-5|0.0.0.0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:16.832
(r / report-01 
      :ARG0 (p / person 
            :ARG0-of (p2 / prepare-02 
                  :ARG1 (m2 / manuscript 
                        :mod (t2 / this)) 
                  :ARG2 37) 
            :ARG0-of (t / target-01 
                  :ARG1 (g / gene)) 
            :name (n / name 
                  :op1 "Lin") 
            :wiki -) 
      :ARG1 (l / line 
            :ARG1-of (d / depend-01 
                  :polarity -) 
            :mod (m / mouse)))

# ::snt Phenotypic comparison of the our PGC-1-deficient line with that of Lin et al. reveals a number of similarities and several interesting differences .
# ::tok Phenotypic comparison of the our PGC-1-deficient line with that of Lin et al. reveals a number of similarities and several interesting differences .
# ::alignments 21-22|0.1.1.0 20-21|0.1.1.0.1 19-20|0.1.1.0.2 18-19|0.1 17-18|0.1.1 15-16|0.1.1.1 13-14|0 10-11|0.1.0.1+0.1.0.0.0+0.1.0.0+0.1.0 8-9|0.0.0 6-7|0.0.1 4-5|0.0.1.0 1-2|0.0 0-1|0.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.042
(r / reveal-01 
      :ARG0 (c / compare-01 
            :ARG0 (t / that) 
            :ARG1 (l / line 
                  :poss (w / we))) 
      :ARG1 (a / and 
            :op1 (p / person 
                  :name (n2 / name 
                        :op1 "Lin") 
                  :wiki -) 
            :op2 (s2 / similar-00 
                  :ARG1 (d / differ-01 
                        :ARG1 (p2 / phenotypic) 
                        :ARG2-of (i / interest-01) 
                        :quant (s / several)) 
                  :quant (n / number))))

# ::snt Both PGC-1-deficient lines exhibit cold intolerance , reduced hepatocyte respiration rates , and neurologic lesions .
# ::tok Both PGC-1-deficient lines exhibit cold intolerance , reduced hepatocyte respiration rates , and neurologic lesions .
# ::alignments 14-15|0.1.1.1 13-14|0.1.1.1.0 12-13|0.1.1 10-11|0.1.1.0 9-10|0.1.1.0.1 8-9|0.1.1.0.2 7-8|0.1.1.0.0 5-6|0.1 4-5|0.1.0 3-4|0 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.555
(e / exhibit-01 
      :ARG0 (l2 / line 
            :mod (b / both)) 
      :ARG1 (i / intolerance 
            :mod (c / cold) 
            :op1-of (a / and 
                  :op2 (r / rate 
                        :ARG1-of (r3 / reduce-01) 
                        :mod (r2 / respiration) 
                        :mod (h / hepatocyte)) 
                  :op3 (l / lesion 
                        :mod (n / neurologic)))))

# ::snt However , a number of interesting differences are notable .
# ::tok However , a number of interesting differences are notable .
# ::alignments 8-9|0 6-7|0.0.0 5-6|0.0.0.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.572
(n / notable 
      :domain (n2 / number 
            :quant-of (d / differ-01 
                  :ARG2-of (i / interest-01))))

# ::snt First , in contrast to Lin et al. , the PGC-1  /  mice described here do not exhibit any postnatal mortality .
# ::tok First , in contrast to Lin et al. , the PGC-1  /  mice described here do not exhibit any postnatal mortality .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.574
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Second , we did not find evidence for a defect in gluconeogenesis based on fasting blood glucose levels ( unpublished data ) .
# ::tok Second , we did not find evidence for a defect in gluconeogenesis based on fasting blood glucose levels ( unpublished data ) .
# ::alignments 20-21|0.0 19-20|0 17-18|0.0.0.0.1.0.0.0 16-17|0.0.0.0.1.0.0.0.1 15-16|0.0.0.0.1.0.0.0.0 14-15|0.0.0.0.0.0.0 12-13|0.0.0.0.1.0.0 11-12|0.0.0.0.1.0 9-10|0.0.0.0.1 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.2 2-3|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.735
(u / unpublish 
      :mod-of (d / data 
            :ARG0-of (e / evidence-01 
                  :ARG1-of (f2 / find-01 
                        :ARG0 (w / we 
                              :ARG1-of (s / second-01 
                                    :ARG0 (f / fast))) 
                        :ARG3 (d2 / defect-01 
                              :ARG1 (g2 / gluconeogenesi 
                                    :ARG1-of (b2 / base-02 
                                          :ARG2 (l / level 
                                                :mod (b / blood) 
                                                :mod (g / glucose))))) 
                        :polarity -))))

# ::snt In addition , whereas Lin et al. found an abnormal expression profile forCCAAT-enhancer-binding protein  and  and the gluconeogenic genes encoding phosphoenolpyruvate carboxykinase and glucose-6-phosphatase at baseline and with fasting in the PGC-1  /  mice , we did not ( unpublished data ) .
# ::tok In addition , whereas Lin et al. found an abnormal expression profile forCCAAT-enhancer-binding protein  and  and the gluconeogenic genes encoding phosphoenolpyruvate carboxykinase and glucose-6-phosphatase at baseline and with fasting in the PGC-1  /  mice , we did not ( unpublished data ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.737
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Third , we found evidence for an age-related increase in body fat in PGC-1  /  mice ( females earlier than males ) , whereas Lin et al. identified a male-specific resistance to diet-induced obesity and insulin resistance .
# ::tok Third , we found evidence for an age-related increase in body fat in PGC-1  /  mice ( females earlier than males ) , whereas Lin et al. identified a male-specific resistance to diet-induced obesity and insulin resistance .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.741
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt We have also found that male PGC-1-deficient mice are somewhat protected against diet-induced obesity ( Figure S4 ) .
# ::tok We have also found that male PGC-1-deficient mice are somewhat protected against diet-induced obesity ( Figure S4 ) .
# ::alignments 16-17|0.2.0 15-16|0.2 13-14|0.1.0 12-13|0.1.0.0 10-11|0.1 9-10|0.1.2 7-8|0.1.1 5-6|0.2.0.0 3-4|0 2-3|0.3 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.912
(f2 / find-01 
      :ARG0 (w / we) 
      :ARG1 (p / protect-01 
            :ARG0 (o / obesity 
                  :degree (d / diet-induc)) 
            :ARG1 (m / mouse) 
            :degree (s2 / somewhat)) 
      :ARG2 (f / figure 
            :mod (s / S4 
                  :poss (m2 / male))) 
      :mod (a / also))

# ::snt However , we observed that the insulin-sensitive phenotype of the female PGC-1  /  mice occurred in the context of normal weight gain with high-fat diet .
# ::tok However , we observed that the insulin-sensitive phenotype of the female PGC-1  /  mice occurred in the context of normal weight gain with high-fat diet .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.913
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt These latter results indicate that the insulin-sensitive phenotype of PGC-1  /  mice can not be fully explained by a lean phenotype .
# ::tok These latter results indicate that the insulin-sensitive phenotype of PGC-1  /  mice can not be fully explained by a lean phenotype .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.924
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Of interest , mice lacking the nuclear receptor estrogen-related receptor  , a known target of PGC-1 , exhibit resistance to diet-induced obesity similar to that of male PGC-1 null mice [ 38 ] .
# ::tok Of interest , mice lacking the nuclear receptor estrogen-related receptor  , a known target of PGC-1 , exhibit resistance to diet-induced obesity similar to that of male PGC-1 null mice [ 38 ] .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.927
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Fourth , the PGC-1  /  mice described here exhibit a dramatic fasting-induced hepatic steatotic phenotype , whereas the Lin et al. mouse does not .
# ::tok Fourth , the PGC-1  /  mice described here exhibit a dramatic fasting-induced hepatic steatotic phenotype , whereas the Lin et al. mouse does not .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.930
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Fifth , Lin et al. found a neurologic phenotype in males characterized by hyperactivity , whereas the PGC-1  /  mice described here show reduced locomotor activity .
# ::tok Fifth , Lin et al. found a neurologic phenotype in males characterized by hyperactivity , whereas the PGC-1  /  mice described here show reduced locomotor activity .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:17.938
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt However , it should be noted that we did not study activity levels over an extended period of time in males as did Lin et al. , so it is possible that our findings reflect an emotional disturbance that manifests only when the animals are placed in a new environment .
# ::tok However , it should be noted that we did not study activity levels over an extended period of time in males as did Lin et al. , so it is possible that our findings reflect an emotional disturbance that manifests only when the animals are placed in a new environment .
# ::alignments 49-50|0.0.0.0.1.1.1.2 48-49|0.0.0.0.1.1.1.2.0 45-46|0.0.0.0.1.1.1 43-44|0.0.0.0.1.1.1.1 40-41|0.0.0.0.1.1.0 39-40|0.0.0.0.1.1 37-38|0.0.0.0.1 36-37|0.0.0.0.1.0 34-35|0.0.0.0 33-34|0.0.0.0.0.0+0.0.0.0.0 32-33|0.0.0.0.0.0.0 30-31|0.0.0 27-28|0.0 23-24|0.1.1.0.1+0.1.1.0.0.0+0.1.1.0.0+0.1.1.0 20-21|0.0.0.0.1.1.1.0 18-19|0.1.2.1 16-17|0.1.2 15-16|0.1.2.0 12-13|0.1.0.0 11-12|0.1.1 10-11|0.1 9-10|0.1.3 7-8|0.1.0 5-6|0 3-4|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:18.860
(n3 / note-01 
      :ARG0-of (c / cause-01 
            :ARG1 (p2 / possible-01 
                  :ARG1 (r / reflect-01 
                        :ARG1 (t / thing 
                              :ARG1-of (f / find-01 
                                    :ARG0 (w / we))) 
                        :ARG2 (d / disturbance 
                              :ARG0-of (e2 / emotional-02) 
                              :ARG0-of (m / manifest-01 
                                    :ARG1 (o / only) 
                                    :condition (p / place-01 
                                          :ARG0 (m2 / male) 
                                          :ARG1 (a / animal) 
                                          :ARG2 (e / environment 
                                                :mod (n / new)))))))) 
      :ARG1 (s / study-01 
            :ARG0 (w2 / we 
                  :poss-of (l / level)) 
            :ARG1 (a2 / activity-06 
                  :ARG0 (p3 / person 
                        :name (n2 / name 
                              :op1 "Lin") 
                        :wiki -)) 
            :location (p4 / period 
                  :ARG1-of (e3 / extend-01) 
                  :mod (t2 / time)) 
            :polarity -) 
      :ARG1-of (r2 / recommend-01))

# ::snt Finally , we report significant skeletal muscle and cardiac functional abnormalities ( although the report by Lin et al. did not address these phenotypes , so this may not represent a true difference ) .
# ::tok Finally , we report significant skeletal muscle and cardiac functional abnormalities ( although the report by Lin et al. did not address these phenotypes , so this may not represent a true difference ) .
# ::alignments 32-33|0.1.1 31-32|0.1.1.0 29-30|0.1 28-29|0.1.3 27-28|0.1.2 26-27|0.1.0 25-26|0 23-24|0.0.1 22-23|0.0.1.0 21-22|0.0 20-21|0.0.2 16-17|0.2.0.0.0.1.1+0.2.0.0.0.1.0.0+0.2.0.0.0.1.0+0.2.0.0.0.1 14-15|0.0.0 10-11|0.2.0.0.0.0 9-10|0.2.0.0.0.0.0 8-9|0.2.0.0.0.0.1 7-8|0.2.0.0.0 6-7|0.2 5-6|0.2.2 4-5|0.2.1 3-4|0.2.0.0 2-3|0.2.0 0-1|0.2.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:20.463
(c / cause-01 
      :ARG0 (a / address-02 
            :ARG0 (r2 / report) 
            :ARG1 (p2 / phenotyp 
                  :mod (t3 / this)) 
            :polarity -) 
      :ARG1 (r / represent-01 
            :ARG0 (t2 / this) 
            :ARG1 (d / differ-02 
                  :mod (t / true)) 
            :ARG1-of (p / possible-01) 
            :polarity -) 
      :ARG1-of (m / muscle-01 
            :ARG0 (w / we 
                  :ARG0-of (r3 / report-01 
                        :ARG1 (a3 / and 
                              :op1 (a2 / abnormaliti 
                                    :mod (f / functional) 
                                    :mod (c2 / cardiac)) 
                              :op2 (p3 / person 
                                    :name (n / name 
                                          :op1 "Lin") 
                                    :wiki -)) 
                        :time (f2 / final))) 
            :ARG1-of (s2 / significant-02) 
            :mod (s / skeletal)))

# ::snt The reasons for the interesting differences between the two PGC-1-deficient mouse lines are not clear .
# ::tok The reasons for the interesting differences between the two PGC-1-deficient mouse lines are not clear .
# ::alignments 14-15|0 13-14|0.2 11-12|0.2.0.0 10-11|0.2.0.0.0 8-9|0.0 5-6|0.2.0 4-5|0.2.0.1 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:20.548
(c / clear-06 
      :ARG0 2 
      :ARG1 (r / reason) 
      :polarity (- / - 
            :ARG0-of (d / differ-01 
                  :ARG1 (l / line 
                        :mod (m / mouse)) 
                  :ARG2-of (i / interest-01))))

# ::snt It is possible that distinct genetic backgrounds related to hybrid strains confer different degrees of secondary compensatory responses .
# ::tok It is possible that distinct genetic backgrounds related to hybrid strains confer different degrees of secondary compensatory responses .
# ::alignments 17-18|0.1.1.1.0+0.1.1.1 15-16|0.1.0.0.0 13-14|0.1.1 12-13|0.1.1.0 11-12|0.1 10-11|0.1.0.0.1 9-10|0.1.0.0.2 7-8|0.1.0.0 6-7|0.1.0 5-6|0.1.0.2 4-5|0.1.0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:21.112
(p / possible-01 
      :ARG0 (i / it) 
      :ARG1 (c / confer-01 
            :ARG0 (b / background 
                  :ARG1-of (r2 / relate-01 
                        :ARG0 (s / secondary) 
                        :ARG2 (s2 / strain) 
                        :purpose (h / hybrid)) 
                  :mod (d3 / distinct) 
                  :mod (g / gene)) 
            :ARG1 (d / degree 
                  :ARG1-of (d2 / differ-02) 
                  :poss (t / thing 
                        :ARG2-of (r / respond-01)))))

# ::snt In addition , the incompletely penetrant postnatal mortality noted in the PGC-1  /  mice reported by Lin et al. could have resulted in a selection bias toward greater levels of compensatory responses in liver and other tissues in the surviving group .
# ::tok In addition , the incompletely penetrant postnatal mortality noted in the PGC-1  /  mice reported by Lin et al. could have resulted in a selection bias toward greater levels of compensatory responses in liver and other tissues in the surviving group .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:21.114
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt It is also possible that the method of gene targeting led to different phenotypes .
# ::tok It is also possible that the method of gene targeting led to different phenotypes .
# ::alignments 13-14|0.0.2 12-13|0.0.2.0 10-11|0.0 9-10|0.0.0.0 8-9|0.0.0.0.0 6-7|0.0.0 3-4|0 2-3|0.1 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:21.172
(p2 / possible-01 
      :ARG1 (l / lead-02 
            :ARG0 (m / method 
                  :ARG1-of (t / target-01 
                        :ARG0 (g / gene))) 
            :ARG1 (i / it) 
            :ARG4 (p / phenotyp 
                  :ARG1-of (d / differ-02))) 
      :mod (a / also))

# ::snt Lin et al. generated PGC-1  /  mice by Cre recombinase-mediated excision of exons 3 -- 5 in oocytes .
# ::tok Lin et al. generated PGC-1  /  mice by Cre recombinase-mediated excision of exons 3 -- 5 in oocytes .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:21.173
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The PGC-1  /  mice described here were generated by a targeting event that involved a 3  homologous recombination leading to an insertion of the targeting vector including an extra exon 3 between exons 5 and 6 .
# ::tok The PGC-1  /  mice described here were generated by a targeting event that involved a 3  homologous recombination leading to an insertion of the targeting vector including an extra exon 3 between exons 5 and 6 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:21.176
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The exon 3 insertion , which was confirmed by RT-PCR , results in a mutant transcript that encodes a truncated protein .
# ::tok The exon 3 insertion , which was confirmed by RT-PCR , results in a mutant transcript that encodes a truncated protein .
# ::alignments 20-21|0.1.0.0 19-20|0.1.0.0.0 17-18|0.1.0 15-16|0.1.1+0.1 14-15|0.1.2 11-12|0 7-8|0.0 3-4|0.0.0 2-3|0.1.0.0.0.0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:21.278
(r / result-01 
      :ARG1 (c / confirm-01 
            :ARG1 (i / insert-01 
                  :ARG1 (e2 / exon))) 
      :ARG2 (t2 / thing 
            :ARG0-of (e / encode-01 
                  :ARG1 (p / protein 
                        :mod (t / truncate-01 
                              :ARG1 3))) 
            :ARG1-of (t3 / transcribe-01) 
            :mod (m / mutant)))

# ::snt We were unable to detect normal transcript containing an exon 5 -- 6 border , indicating that the targeting was accurate and complete .
# ::tok We were unable to detect normal transcript containing an exon 5 -- 6 border , indicating that the targeting was accurate and complete .
# ::alignments 22-23|0.2 21-22|0 20-21|0.1 18-19|0.0 15-16|0.1.0 13-14|0.1.0.0.0.0.0.0 12-13|0.1.0.0.0.0.0.0.1 10-11|0.1.0.0.0.0.0.0.0 9-10|0.2.0 7-8|0.1.0.0.0.0.0 6-7|0.1.0.0.0.0.1+0.1.0.0.0.0 5-6|0.1.0.0.0.0.2 4-5|0.1.0.0.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:21.578
(a / and 
      :ARG1-of (t / target-01) 
      :op1 (a2 / accurate 
            :ARG1-of (i / indicate-01 
                  :ARG0 (w / we 
                        :ARG0-of (d / detect-01 
                              :ARG1 (t2 / thing 
                                    :ARG0-of (c2 / contain-01 
                                          :ARG1 (b / border-01 
                                                :ARG1 5 
                                                :li 6)) 
                                    :ARG1-of (t3 / transcribe-01) 
                                    :ARG1-of (n / normal-02)))))) 
      :op2 (c / complete-02 
            :ARG1 (e / exon)))

# ::snt In addition , we could not detect full-length or smaller PGC-1 proteins by Western blotting .
# ::tok In addition , we could not detect full-length or smaller PGC-1 proteins by Western blotting .
# ::alignments 14-15|0.0.2 13-14|0.0.2.1.1+0.0.2.1.0.0+0.0.2.1.0+0.0.2.1 11-12|0.0.1.1 9-10|0.0.1.1.0 8-9|0.0.1 7-8|0.0.1.0 6-7|0.0 5-6|0.1 4-5|0 3-4|0.0.0 1-2|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:21.786
(p2 / possible-01 
      :ARG1 (d / detect-01 
            :ARG0 (w2 / we) 
            :ARG1 (o / or 
                  :op1 (f / full-length) 
                  :op2 (p / protein 
                        :quant (s / small))) 
            :ARG1-of (b / blot-01 
                  :ARG0 (a / addition) 
                  :mod (w / world-region 
                        :name (n / name 
                              :op1 "West") 
                        :wiki "Western_world"))) 
      :polarity -)

# ::snt However , we can not exclude the possibility that the sensitivity of the immunoblotting was not high enough to pick up a small amount of mutant ( truncated ) PGC-1 protein that could have some activity , given that it would contain nuclear receptor-interacting domains and the amino-terminal activation domain .
# ::tok However , we can not exclude the possibility that the sensitivity of the immunoblotting was not high enough to pick up a small amount of mutant ( truncated ) PGC-1 protein that could have some activity , given that it would contain nuclear receptor-interacting domains and the amino-terminal activation domain .
# ::alignments 49-50|0.0.0.0.0.1 48-49|0.0.0.0.0.1.0 45-46|0.0.0.0.0 44-45|0.0.0.0.0.0 43-44|0.0.0.0.0.0.0 42-43|0.0.0.0.0.0.1 41-42|0.0.0.0 37-38|0.0.0 35-36|0.0 34-35|0.0.1 32-33|0.1 30-31|0 27-28|0.2 25-26|0.3.0.1.0.0.1.0 23-24|0.3 22-23|0.3.1 19-20|0.3.0 17-18|0.3.0.1.1 16-17|0.3.0.1 15-16|0.3.0.1.1.0 13-14|0.3.0.0.0 10-11|0.3.0.0 7-8|0.3.0.1.0 5-6|0.3.0.1.0.0 4-5|0.3.0.1.0.0.1.1 3-4|0.3.0.1.0.0.1 2-3|0.3.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:22.590
(p2 / protein 
      :ARG0-of (a3 / activity-06 
            :ARG2-of (g / give-01 
                  :ARG1 (c / contain-01 
                        :ARG1 (a2 / and 
                              :op1 (d2 / domain 
                                    :mod (r / receptor-interact) 
                                    :mod (n / nucleus)) 
                              :op2 (d / domain 
                                    :mod (a / activation))))) 
            :mod (s / some)) 
      :ARG1-of (p / possible-01) 
      :ARG1-of (t / truncate-01) 
      :quant (a4 / amount 
            :ARG1-of (p3 / pick-01 
                  :ARG0 (s3 / sensitivity 
                        :poss (i / immunoblott)) 
                  :ARG1-of (h / high-02 
                        :ARG1-of (p4 / possible-01 
                              :ARG1-of (e2 / exclude-01 
                                    :ARG0 (w / we) 
                                    :ARG1-of (p5 / possible-01 
                                          :ARG0 (m / mutant) 
                                          :polarity -))) 
                        :degree (e / enough 
                              :polarity -))) 
            :mod (s2 / small)))

# ::snt If small amounts of PGC-1 activity are present in the mice reported here , it could explain some of the observed differences between the models .
# ::tok If small amounts of PGC-1 activity are present in the mice reported here , it could explain some of the observed differences between the models .
# ::alignments 24-25|0.1.0 21-22|0.1 20-21|0.1.2 17-18|0.0.0 16-17|0.0 15-16|0 12-13|0.1.1.0.0.1 11-12|0.1.1.0.0 10-11|0.1.1.0.0.0 7-8|0.1.1.0.1 5-6|0.1.1 2-3|0.1.1.0 1-2|0.1.1.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:22.838
(p / possible-01 
      :ARG1 (e / explain-01 
            :ARG1 (s / some)) 
      :manner (d / differ-01 
            :ARG0 (m / model) 
            :ARG1 (a / activity-06 
                  :quant (a2 / amount 
                        :ARG0-of (r / report-01 
                              :ARG1 (m2 / mouse) 
                              :location (h / here)) 
                        :domain-of (p2 / present) 
                        :mod (s2 / small))) 
            :ARG1-of (o / observe-01)))

# ::snt However , the bulk of data presented here support the conclusion that the PGC-1  /  mice described are completely deficient in PGC-1 .
# ::tok However , the bulk of data presented here support the conclusion that the PGC-1  /  mice described are completely deficient in PGC-1 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:22.840
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Future direct comparison of the two mouse lines in pure background strains will be of interest .
# ::tok Future direct comparison of the two mouse lines in pure background strains will be of interest .
# ::alignments 15-16|0 11-12|0.1 10-11|0.1.0.0 9-10|0.1.0 7-8|0.0.0.0 6-7|0.0.0 5-6|0.0.0.0.0 2-3|0.0 1-2|0.0.1 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:23.035
(i / interest-01 
      :ARG0 (c / compare-01 
            :ARG1 (m / mouse 
                  :mod-of (l / line 
                        :quant 2)) 
            :ARG1-of (d / direct-02) 
            :mod (f / future)) 
      :ARG1 (s / strain 
            :ARG0-of (p / pure-02 
                  :ARG1 (b / background))))

# ::snt In summary , this body of work provides evidence that PGC-l is critical for the adaptive responses necessary to meet postnatal energy demands .
# ::tok In summary , this body of work provides evidence that PGC-l is critical for the adaptive responses necessary to meet postnatal energy demands .
# ::alignments 22-23|0.0.0.0 21-22|0.0.0.0.0 20-21|0.0.0.0.1 19-20|0.0.0 16-17|0+0.0 15-16|0.1 12-13|0.0.1 8-9|0.0.1.0 7-8|0.0.1.0.0 6-7|0.0.1.0.0.0.0 4-5|0.0.1.0.0.0 3-4|0.0.1.0.0.0.1 1-2|0.0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:23.132
(r / respond-01 
      :ARG2 (t / thing 
            :ARG0-of (m / meet-03 
                  :ARG1 (d / demand-01 
                        :mod (e / energy) 
                        :mod (p / postnatal))) 
            :ARG1-of (c / critical-02 
                  :ARG1-of (e2 / evidence-01 
                        :ARG1-of (p2 / provide-01 
                              :ARG0 (b / body 
                                    :consist-of (w / work-01 
                                          :ARG2 (s / summary)) 
                                    :mod (t2 / this)))))) 
      :mod (a / adaptive))

# ::snt Our results also suggest a broader role for inducible transcriptional coactivators such as PGC-1 in transducing cellular signals triggered by physiologic and developmental cues to the transcriptional control of energy metabolism and other dynamic cellular processes .
# ::tok Our results also suggest a broader role for inducible transcriptional coactivators such as PGC-1 in transducing cellular signals triggered by physiologic and developmental cues to the transcriptional control of energy metabolism and other dynamic cellular processes .
# ::alignments 35-36|0.1.2.0.0.0.2 34-35|0.1.2.0.0.0.2.1 33-34|0.1.2.0.0.0.2.2 32-33|0.1.2.0.0.0.2.3 31-32|0.1.2.0.0.0.2.4 30-31|0.1.2.0.0.0.2.4.1 29-30|0.1.2.0.0.0.2.4.1.0 27-28|0.1.2.0.0.0.2.4.0 23-24|0.1.2.0.0 22-23|0.1.2.0.0.0.1 21-22|0.1.2.0.0.0 20-21|0.1.2.0.0.0.0 18-19|0.1.2.0 17-18|0.1.2 16-17|0.1.2.2 15-16|0.1.2.1 11-12|0.1.2.0.0.0.2.0 10-11|0.1.1 6-7|0.1 5-6|0.1.0 3-4|0 2-3|0.2 1-2|0.0.0+0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:24.539
(s3 / suggest-01 
      :ARG0 (t3 / thing 
            :ARG2-of (r2 / result-01 
                  :ARG1 (w / we))) 
      :ARG1 (r / role 
            :ARG1-of (b / broad-02) 
            :beneficiary (c5 / coactivator) 
            :op1 (s / signal 
                  :ARG1-of (t / trigger-01 
                        :ARG0 (c3 / cue 
                              :op3-of (a2 / and 
                                    :op1 (p2 / physiologic) 
                                    :op2 (d2 / developmental) 
                                    :op4 (p / process-02 
                                          :ARG0 (s2 / such) 
                                          :ARG1 (c / cell) 
                                          :mod (d / dynamic) 
                                          :mod (o / other) 
                                          :op2-of (a / and 
                                                :ARG1-of (c2 / control-01) 
                                                :op1 (m / metabolism 
                                                      :mod (e / energy))))))) 
                  :mod (t2 / transduce) 
                  :mod (c4 / cell))) 
      :mod (a3 / also))

# ::snt In this regard , the inducible coactivator PGC-1 serves as a transcriptional `` booster '' to augment the capacity of downstream metabolic pathways critical for metabolic maturation and postnatal growth .
# ::tok In this regard , the inducible coactivator PGC-1 serves as a transcriptional `` booster '' to augment the capacity of downstream metabolic pathways critical for metabolic maturation and postnatal growth .
# ::alignments 29-30|0.2 28-29|0.2.0 27-28|0 26-27|0.1 25-26|0.1.1 23-24|0.1.0 22-23|0.0.1.0 21-22|0.0.1.0.0 20-21|0.0.1.0.1 18-19|0.0.1 16-17|0.0 13-14|0.0.0 11-12|0.0.0.0 8-9|0.0.2 6-7|0.0.2.0 2-3|0.0.2.1 1-2|0.0.2.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:24.826
(a / and 
      :op1 (a2 / augment-01 
            :ARG0 (b / boost-01 
                  :ARG1 (t / transcriptional)) 
            :ARG1 (c2 / capacity 
                  :poss (p2 / pathway 
                        :mod (m3 / metabolic) 
                        :mod (d / downstream))) 
            :time-of (s / serve-01 
                  :ARG0 (c3 / coactivator) 
                  :ARG1 (r / regard-01 
                        :mod (t2 / this)))) 
      :op2 (m / maturation 
            :ARG1-of (c / critical-02) 
            :mod (m2 / metabolic)) 
      :op3 (g / grow-01 
            :mod (p / postnatal)))

# ::snt Indeed , although PGC-1 null mice survive in the protected environment of the laboratory , our results indicate that in the rigors of a typical external environment , PGC-1 would be necessary for survival .
# ::tok Indeed , although PGC-1 null mice survive in the protected environment of the laboratory , our results indicate that in the rigors of a typical external environment , PGC-1 would be necessary for survival .
# ::alignments 33-34|0.0.0.1.0.0 26-27|0.0.1.0.0 25-26|0.0.1.0.0.1 24-25|0.0.1.0.0.0 21-22|0.0.1.0.0.2 17-18|0 16-17|0.0.1+0.0 15-16|0.0.1.0 13-14|0.0.0.1.1 10-11|0.0.0.1 9-10|0.0.0.1.0 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.0 0-1|0.0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:25.016
(i / indicate-01 
      :ARG0 (t2 / thing 
            :ARG1-of (s2 / survive-01 
                  :ARG0 (m / mouse 
                        :ARG1-of (n / null-02)) 
                  :ARG2 (e3 / environment 
                        :ARG1-of (p / protect-01 
                              :ARG1-of (s / survive-01)) 
                        :poss (l / laboratory))) 
            :ARG2-of (r2 / result-01 
                  :ARG1 (w / we 
                        :poss-of (e / environment 
                              :ARG1-of (t / typical-02 
                                    :ARG0 (i2 / indeed)) 
                              :mod (e2 / external) 
                              :poss-of (r / rigor))))))

# ::snt Lastly , we propose that the PGC-1  /  mice should serve as a useful murine model to investigate the role of altered energy metabolism in obesity , diabetes , hepatic steatosis , and diseases of the heart , skeletal muscle , and central nervous system .
# ::tok Lastly , we propose that the PGC-1  /  mice should serve as a useful murine model to investigate the role of altered energy metabolism in obesity , diabetes , hepatic steatosis , and diseases of the heart , skeletal muscle , and central nervous system .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:25.017
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Targeting the PGC-1 gene in mice .
# ::tok Targeting the PGC-1 gene in mice .
# ::alignments 5-6|0.1 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:25.032
(t / target-01 
      :ARG1 (g / gene) 
      :prep-in (m / mouse))

# ::snt A BAC genomic clone containing the murine PGC-1 gene , isolated from an Sv129 genomic library , was obtained from Incyte Genomics ( Palo Alto , California , United States ) .
# ::tok A BAC genomic clone containing the murine PGC-1 gene , isolated from an Sv129 genomic library , was obtained from Incyte Genomics ( Palo Alto , California , United States ) .
# ::alignments 28-30|0.1.1.3.1+0.1.1.3.0.1+0.1.1.3.0.0+0.1.1.3.0+0.1.1.3 26-27|0.1.1.2.1+0.1.1.2.0.0+0.1.1.2.0+0.1.1.2 23-25|0.1.0.0.1+0.1.0.0.0+0.1.0.0+0.1.0 20-22|0.1.1.0.0.0.0.1+0.1.1.0.0.0.0.0+0.1.1.0.0.0.0+0.1.1.0.0.0 18-19|0.1.1.0.0 15-16|0 13-14|0.0.0.0+0.0.0+0.0 10-11|0.1 8-9|0.1.1.1 6-7|0.1.1.1.0 4-5|0.1.1 3-4|0.1.1.0 1-2|0.1.1.0.1.0.0+0.1.1.0.1.0+0.1.1.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:25.921
(l / library 
      :quant (t / thing 
            :name (n5 / name 
                  :op1 "Sv129")) 
      :time-of (i / isolate-01 
            :ARG1 (c2 / country 
                  :name (n3 / name 
                        :op1 "Palo" 
                        :op2 "Alto")) 
            :ARG2 (c3 / contain-01 
                  :ARG0 (c4 / clone 
                        :ARG1-of (o / obtain-01 
                              :ARG0 (p / person 
                                    :name (n4 / name 
                                          :op1 "Incyte" 
                                          :op2 "Genomics"))) 
                        :mod (t2 / thing 
                              :name (n6 / name 
                                    :op1 "BAC"))) 
                  :ARG1 (g / gene 
                        :mod (m / murine)) 
                  :ARG2 (s / state 
                        :name (n2 / name 
                              :op1 "California") 
                        :wiki "California") 
                  :op1-of (c / country 
                        :name (n / name 
                              :op1 "United" 
                              :op2 "States") 
                        :wiki "United_States"))))

# ::snt A 3-kb region spanning exon 3 was amplified from the genomic clone .
# ::tok A 3-kb region spanning exon 3 was amplified from the genomic clone .
# ::alignments 11-12|0.1 7-8|0 5-6|0.1.0 4-5|0.0.0.0 3-4|0.0.0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:26.046
(a / amplify-01 
      :ARG1 (r / region 
            :ARG0-of (s / span-01 
                  :ARG1 (e / exon))) 
      :ARG2 (c / clone 
            :op1-of 3))

# ::snt A 5  primer was designed to amplify a fragment with the 5  end beginning 732 bp upstream of exon 3 just upstream of an endogenous Kpn1 restriction site ( 5  - AGTTTCCTTAGCAACTTCATA-3  ) .
# ::tok A 5  primer was designed to amplify a fragment with the 5  end beginning 732 bp upstream of exon 3 just upstream of an endogenous Kpn1 restriction site ( 5  - AGTTTCCTTAGCAACTTCATA-3  ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:26.047
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The 3  primer contained a BamH1 site engineered by mutating the bases shown in lowercase ( 5  - AAGGATTTTAgGATccCAGTAC-3  ) .
# ::tok The 3  primer contained a BamH1 site engineered by mutating the bases shown in lowercase ( 5  - AAGGATTTTAgGATccCAGTAC-3  ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:26.050
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt A second fragment downstream of exon 5 was amplified .
# ::tok A second fragment downstream of exon 5 was amplified .
# ::alignments 8-9|0 6-7|0.0.1 5-6|0.0.0 3-4|0.0.2 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:26.079
(a / amplify-01 
      :ARG1 (f / fragment-01 
            :ARG1 (e / exon) 
            :ARG2 5 
            :time (d / downstream)))

# ::snt In this latter amplicon , Not1 and Xho1 sites were engineered into the 5  and 3  primers , respectively ( 5  - TGGAGTgcGGCCGCTGGGA-3  and 5  - AAAGAGTCTCgAgAATAGTTTCT-3  ) .
# ::tok In this latter amplicon , Not1 and Xho1 sites were engineered into the 5  and 3  primers , respectively ( 5  - TGGAGTgcGGCCGCTGGGA-3  and 5  - AAAGAGTCTCgAgAATAGTTTCT-3  ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:26.080
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The fragments were cloned into p1339-PGK-Neomycin targeting vector .
# ::tok The fragments were cloned into p1339-PGK-Neomycin targeting vector .
# ::alignments 7-8|0.1.0 6-7|0.1 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:26.109
(c / clone-01 
      :ARG1 (f / fragment-01) 
      :ARG2 (t / target-01 
            :ARG1 (v / vector)))

# ::snt The construct was linearized with Xho1 and electroporated into RW4 ES cells ( Sv129 derived ) using G418 selection .
# ::tok The construct was linearized with Xho1 and electroporated into RW4 ES cells ( Sv129 derived ) using G418 selection .
# ::alignments 18-19|0.2.0.0.0 17-18|0.2.0.0.0.0 16-17|0.2.0.0 14-15|0.2.0.0.1 13-14|0.2.0.0.1.0.0.0+0.2.0.0.1.0.0+0.2.0.0.1.0 11-12|0.2.0 9-11|0.2.1.1+0.2.1.0+0.2.1+0.2 6-7|0 5-6|0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:26.311
(a / and 
      :ARG1-of (c2 / construct-01) 
      :op1 (x / Xho1) 
      :op2 (t2 / thing 
            :mod-of (c / cell 
                  :ARG0-of (u / use-01 
                        :ARG1 (s / select-01 
                              :ARG1 (g / G418)) 
                        :ARG1-of (d / derive-01 
                              :ARG0 (t / thing 
                                    :name (n / name 
                                          :op1 "Sv129"))))) 
            :name (n2 / name 
                  :op1 (r / RW4) 
                  :op2 (e / ES))))

# ::snt The electroporation was performed by the Siteman Cancer Center ES Cell Core at Washington University ( St. Louis , Missouri , United States ) .
# ::tok The electroporation was performed by the Siteman Cancer Center ES Cell Core at Washington University ( St. Louis , Missouri , United States ) .
# ::alignments 21-23|0.0.2.1+0.0.2.0.1+0.0.2.0.0+0.0.2.0+0.0.2 19-20|0.1.1+0.1.0.0+0.1.0+0.1 16-18|0.0.3.0.1+0.0.3.0.0+0.0.3.0+0.0.3 13-15|0.0.1.0.1+0.0.1.0.0+0.0.1.0+0.0.1 6-12|0.0.0.0.5+0.0.0.0.4+0.0.0.0.3+0.0.0.0.2+0.0.0.0.1+0.0.0.0.0+0.0.0.0+0.0.0 3-4|0.0 1-2|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:26.605
(e / electroporation 
      :ARG1-of (p / perform-02 
            :ARG0 (o2 / organization 
                  :name (n5 / name 
                        :op1 "Siteman" 
                        :op2 "Cancer" 
                        :op3 "Center" 
                        :op4 "ES" 
                        :op5 "Cell" 
                        :op6 "Core")) 
            :ARG2 (o / organization 
                  :name (n4 / name 
                        :op1 "Washington" 
                        :op2 "University")) 
            :op1-of (c / country 
                  :name (n / name 
                        :op1 "United" 
                        :op2 "States") 
                  :wiki "United_States") 
            :op1-of (c2 / country 
                  :name (n3 / name 
                        :op1 "St." 
                        :op2 "Louis"))) 
      :poss (s / state 
            :name (n2 / name 
                  :op1 "Missouri") 
            :wiki "Missouri"))

# ::snt The clones were screened by Southern blot using an Xba1 digest ( see Figure 1A and 1B ) .
# ::tok The clones were screened by Southern blot using an Xba1 digest ( see Figure 1A and 1B ) .
# ::alignments 15-16|0.2.1.0.0 13-14|0.2.1.0.1 12-13|0.2.1.0 10-11|0.2.1 9-10|0.2.0 7-8|0.2 6-7|0.0 5-6|0.0.0.0.0+0.0.0.0+0.0.0 3-4|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:27.081
(s2 / screen-01 
      :ARG0 (b / blot-01 
            :ARG1 (t / thing 
                  :name (n / name 
                        :op1 "Southern"))) 
      :ARG1 (c / clone-01) 
      :purpose (u / use-01 
            :ARG1 (x / Xba1) 
            :manner (d / digest-01 
                  :time-of (s / see-01 
                        :ARG1 (a / and) 
                        :ARG2 (f / figure)))))

# ::snt One clone out of approximately 400 screened was positive for the homologous recombination on the 3  end and an insertion on the 5  end .
# ::tok One clone out of approximately 400 screened was positive for the homologous recombination on the 3  end and an insertion on the 5  end .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:27.082
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt This clone was injected into a C57BL6/J blastocyst .
# ::tok This clone was injected into a C57BL6/J blastocyst .
# ::alignments 7-8|0 3-4|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:27.123
(b / blastocyst 
      :location-of (i / inject-01 
            :ARG2 (c / clone 
                  :mod (t / this))))

# ::snt Chimeras were mated to C57BL6/J mice and germline transmission was confirmed by Southern blotting of tail DNA ( see Figure 1B ) .
# ::tok Chimeras were mated to C57BL6/J mice and germline transmission was confirmed by Southern blotting of tail DNA ( see Figure 1B ) .
# ::alignments 19-20|0.1.0.0.0 18-19|0.1.0.0 16-17|0.1.0.1 15-16|0.1.0.1.0 13-14|0.1.0 12-13|0.1.0.2.0.0+0.1.0.2.0+0.1.0.2 10-11|0.1 8-9|0.1.1 7-8|0.1.1.0 6-7|0 5-6|0.0.1 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:27.389
(a / and 
      :op1 (m2 / mate-01 
            :ARG1 (c2 / chimera) 
            :ARG2 (m / mouse)) 
      :op2 (c / confirm-01 
            :ARG0 (b / blot-01 
                  :ARG0 (s / see-01 
                        :ARG1 (f / figure)) 
                  :ARG1 (d / DNA 
                        :ARG1-of (t / tail-01)) 
                  :ARG2 (t2 / thing 
                        :name (n / name 
                              :op1 "Southern"))) 
            :ARG1 (t3 / transmission 
                  :mod (g / germline))))

# ::snt All experiments were performed using sex - and age-matched or littermate controls as noted .
# ::tok All experiments were performed using sex - and age-matched or littermate controls as noted .
# ::alignments 13-14|0 11-12|0.0 9-10|0.0.1 8-9|0.0.1.0 7-8|0.0.0 5-6|0.0.0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.1 1-2|0.0.0.0.2 0-1|0.0.0.0.2.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:27.697
(n / note-01 
      :ARG1-of (c / control-01 
            :op1-of (a2 / and 
                  :ARG0-of (u / use-01 
                        :ARG1 (s / sex) 
                        :ARG1-of (p / perform-02) 
                        :ARG2 (e / experiment-01 
                              :quant (a3 / all)))) 
            :op2-of (o / or 
                  :op1 (a / age-match))))

# ::snt All animal experiments and euthanasia protocols were conducted in strict accordance with the National Institutes of Health guidelines for humane treatment of animals and were reviewed and approved by the Animal Care Committee of Washington University .
# ::tok All animal experiments and euthanasia protocols were conducted in strict accordance with the National Institutes of Health guidelines for humane treatment of animals and were reviewed and approved by the Animal Care Committee of Washington University .
# ::alignments 34-36|0.0.0.1.0.0.1.0.1+0.0.0.1.0.0.1.0.0+0.0.0.1.0.0.1.0+0.0.0.1.0.0.1 30-33|0.0.0.1.0.0.0.2+0.0.0.1.0.0.0.1+0.0.0.1.0.0.0.0+0.0.0.1.0.0.0+0.0.0.1.0.0 27-28|0.1.0 26-27|0.1 25-26|0.0 23-24|0 22-23|0.1.1.0 20-21|0.1.1 19-20|0.1.1.1 17-18|0.0.0.1.0.1.1 13-17|0.0.0.1.0.1.0.0.3+0.0.0.1.0.1.0.0.2+0.0.0.1.0.1.0.0.1+0.0.0.1.0.1.0.0.0+0.0.0.1.0.1.0.0+0.0.0.1.0.1.0 10-11|0.0.0.1.0.1 9-10|0.0.0.1.0.1.2 7-8|0.0.0.1.0 5-6|0.0.0.1.1 4-5|0.0.0.1.1.0 3-4|0.0.0.1 2-3|0.0.0 1-2|0.0.0.0 0-1|0.0.0.1.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:28.673
(a3 / and 
      :op1 (r / review-01 
            :ARG1 (e2 / experiment-01 
                  :ARG1 (a7 / animal) 
                  :op1-of (a6 / and 
                        :ARG1-of (c / conduct-01 
                              :ARG0 (o2 / organization 
                                    :name (n2 / name 
                                          :op1 "Animal" 
                                          :op2 "Care" 
                                          :op3 "Committee") 
                                    :part-of (o / organization 
                                          :name (n / name 
                                                :op1 "Washington" 
                                                :op2 "University"))) 
                              :ARG3-of (a5 / accord-02 
                                    :ARG1 (o3 / organization 
                                          :name (n3 / name 
                                                :op1 "National" 
                                                :op2 "Institutes" 
                                                :op3 "of" 
                                                :op4 "Health")) 
                                    :ARG2 (g / guideline) 
                                    :mod (s / strict))) 
                        :op2 (p / protocol 
                              :mod (e / euthanasia)) 
                        :quant (a8 / all)))) 
      :op2 (a2 / and 
            :ARG0-of (a / approve-01) 
            :ARG0-of (t / treat-03 
                  :ARG1 (a4 / animal) 
                  :manner (h / humane))))

# ::snt Animals were weighed at different time points .
# ::tok Animals were weighed at different time points .
# ::alignments 6-7|0.1 5-6|0.1.1 4-5|0.1.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:28.692
(w / weigh-01 
      :ARG1 (a / animal) 
      :ARG2 (p / point 
            :ARG1-of (d / differ-02) 
            :mod (t / time)))

# ::snt Male and female 3 - to 8-wk-old PGC-1 + / + and PGC-1  /  mice were euthanized , and tissues were dissected and weighed on an analytical balance .
# ::tok Male and female 3 - to 8-wk-old PGC-1 + / + and PGC-1  /  mice were euthanized , and tissues were dissected and weighed on an analytical balance .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:28.693
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Tissue weights were corrected for total body weight before comparison .
# ::tok Tissue weights were corrected for total body weight before comparison .
# ::alignments 9-10|0.2.0 8-9|0.2 7-8|0.0 6-7|0.0.1 5-6|0.0.0 3-4|0 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:28.733
(c2 / correct-01 
      :ARG0 (w / weight 
            :mod (t / total-01) 
            :part-of (b2 / body)) 
      :ARG1 (w2 / weight-01 
            :ARG1 (t2 / tissue)) 
      :time (b / before 
            :op1 (c / compare-01)))

# ::snt DEXA studies were performed as previously described [ 39 ] using a Lunar PIXIMUS DEXA system at 10 , 18 , and 24 wk in male and female PGC-1 + / + and PGC-1  /  mice .
# ::tok DEXA studies were performed as previously described [ 39 ] using a Lunar PIXIMUS DEXA system at 10 , 18 , and 24 wk in male and female PGC-1 + / + and PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:28.735
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt For cold exposure experiments , male and female PGC-1 + / + and PGC-1  /  mice were singly housed and placed at 4 C for 5 h without food .
# ::tok For cold exposure experiments , male and female PGC-1 + / + and PGC-1  /  mice were singly housed and placed at 4 C for 5 h without food .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:28.739
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Core body temperatures were monitored by rectal probe at baseline and every hour thereafter .
# ::tok Core body temperatures were monitored by rectal probe at baseline and every hour thereafter .
# ::alignments 13-14|0 12-13|0.0.0.1+0.0.0.1.0 11-12|0.0.0.1.0.0 10-11|0.0.0 9-10|0.0 7-8|0.0.0.0 6-7|0.0.0.0.0 4-5|0.0.0.0.1 2-3|0.0.0.0.1.0 1-2|0.0.0.0.1.0.1 0-1|0.0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:28.911
(t / thereaft 
      :mod-of (b / baseline 
            :op1-of (a / and 
                  :ARG1-of (p / probe-01 
                        :ARG0 (r / rectal) 
                        :ARG0-of (m / monitor-01 
                              :ARG1 (t3 / temperature 
                                    :ARG1-of (c / core-01) 
                                    :mod (b2 / body)))) 
                  :op2 (h / hour 
                        :unit-of (t2 / temporal-quantity 
                              :mod (e / every))))))

# ::snt Mice were monitored at least every 30 min to check for lethargy .
# ::tok Mice were monitored at least every 30 min to check for lethargy .
# ::alignments 11-12|0.0.0 9-10|0.0 7-8|0 6-7|0.0.1.0 5-6|0.0.1.0.0 2-3|0.0.1 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:28.970
(m / min 
      :domain (c / check-01 
            :ARG1 (l / lethargy) 
            :ARG2-of (m2 / monitor-01 
                  :ARG0 (3 / 30 
                        :op1-of (e / every)) 
                  :ARG1 (m3 / mouse))))

# ::snt At the end of 5 h , mice were sacrificed and tissues harvested for RNA and protein extraction .
# ::tok At the end of 5 h , mice were sacrificed and tissues harvested for RNA and protein extraction .
# ::alignments 17-18|0.0 16-17|0 15-16|0.0.1 14-15|0.0.1.0.0.0.0+0.0.1.0.0.0+0.0.1.0.0 12-13|0.0.1.0 11-12|0.0.1.0.1.1 10-11|0.0.1.0.1 9-10|0.0.1.0.1.0 7-8|0.0.1.0.1.0.0 5-6|0.0.1.0.1.0.1.0 4-5|0.0.0 2-3|0.0.1.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:29.158
(p / protein 
      :ARG1-of (e / extract-01 
            :ARG0 5 
            :op1-of (a / and 
                  :ARG2-of (h / harvest-01 
                        :ARG0 (o / organization 
                              :name (n / name 
                                    :op1 "RNA")) 
                        :op3-of (a2 / and 
                              :op1 (s / sacrifice-01 
                                    :ARG1 (m / mouse) 
                                    :time (e2 / end-01 
                                          :ARG1 (h2 / h))) 
                              :op2 (t / tissue))))))

# ::snt For fasting studies , animals were singly housed and given water ad libitum .
# ::tok For fasting studies , animals were singly housed and given water ad libitum .
# ::alignments 12-13|0.1.1 11-12|0.1.1.0 10-11|0.0.0 9-10|0.1 8-9|0 7-8|0.0 6-7|0.0.2 4-5|0.1.0 2-3|0.0.1 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:29.299
(a2 / and 
      :op1 (h / house-01 
            :ARG1 (w / water) 
            :ARG2 (s2 / study-01 
                  :ARG1 (f / fast)) 
            :manner (s / singly)) 
      :op2 (g / give-01 
            :ARG0 (a3 / animal) 
            :ARG1 (l / libitum 
                  :mod (a / ad))))

# ::snt Food was removed from cages in the morning and tissues harvested at 24 h for RNA and histology .
# ::tok Food was removed from cages in the morning and tissues harvested at 24 h for RNA and histology .
# ::alignments 17-18|0 16-17|0.0 15-16|0.0.1.0.0+0.0.1.0+0.0.1 13-14|0.0.0.1 12-13|0.0.0.1.0 10-11|0.0.0 9-10|0.0.0.0.1 8-9|0.0.0.0 7-8|0.0.0.0.0.2 4-5|0.0.0.0.0.1 2-3|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:29.551
(h / histology 
      :op3-of (a / and 
            :op1 (h3 / harvest-01 
                  :ARG0 (a2 / and 
                        :op1 (r / remove-01 
                              :ARG1 (f / food) 
                              :ARG2 (c / cage) 
                              :time (m / morning)) 
                        :op2 (t / tissue)) 
                  :ARG1 (h2 / h 
                        :quant 24)) 
            :op2 (o / organization 
                  :name (n / name 
                        :op1 "RNA"))))

# ::snt Photography of the mice was performed by MedPic at Washington University School of Medicine .
# ::tok Photography of the mice was performed by MedPic at Washington University School of Medicine .
# ::alignments 9-14|0.2.0.4+0.2.0.3+0.2.0.2+0.2.0.1+0.2.0.0+0.2.0+0.2 7-8|0.0.0.0+0.0.0+0.0 5-6|0 3-4|0.1.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:29.652
(p / perform-02 
      :ARG0 (o2 / organization 
            :name (n2 / name 
                  :op1 "MedPic")) 
      :ARG1 (p2 / photography 
            :poss (m / mouse)) 
      :ARG2 (o / organization 
            :name (n / name 
                  :op1 "Washington" 
                  :op2 "University" 
                  :op3 "School" 
                  :op4 "of" 
                  :op5 "Medicine")))

# ::snt 48-h activity monitoring was performed by JAX Services ( The Jackson Laboratory , West Sacramento , California , United States ) using a Comprehensive Laboratory Animal Monitoring System ( CLAMS , Columbus Instruments , Columbus , Ohio , United States ) .
# ::tok 48-h activity monitoring was performed by JAX Services ( The Jackson Laboratory , West Sacramento , California , United States ) using a Comprehensive Laboratory Animal Monitoring System ( CLAMS , Columbus Instruments , Columbus , Ohio , United States ) .
# ::alignments 38-40|0.2.1.4.1+0.2.1.4.0.1+0.2.1.4.0.0+0.2.1.4.0+0.2.1.4 36-37|0.0.0.0+0.0.0+0.0 31-33|0.2.1.3.0.1+0.2.1.3.0.0+0.2.1.3.0+0.2.1.3 29-30|0.2.0.0.0+0.2.0.0+0.2.0 23-28|0.1.0.4+0.1.0.3+0.1.0.2+0.1.0.1+0.1.0.0+0.1.0+0.1 21-22|0 18-20|0.2.1.1.1+0.2.1.1.0.1+0.2.1.1.0.0+0.2.1.1.0+0.2.1.1 16-17|0.2.1.0.1+0.2.1.0.0.0+0.2.1.0.0+0.2.1.0 13-15|0.2.1.2.0.1+0.2.1.2.0.0+0.2.1.2.0+0.2.1.2 10-12|0.2.2.0.0.0.1+0.2.2.0.0.0.0+0.2.2.0.0.0+0.2.2.0.0 7-8|0.2.2.0 4-5|0.2.2 2-3|0.2 1-2|0.2.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:30.299
(u / use-01 
      :ARG0 (c2 / country 
            :name (n2 / name 
                  :op1 "Ohio")) 
      :ARG1 (o2 / organization 
            :name (n5 / name 
                  :op1 "Comprehensive" 
                  :op2 "Laboratory" 
                  :op3 "Animal" 
                  :op4 "Monitoring" 
                  :op5 "System")) 
      :ARG2 (m / monitor-01 
            :ARG0 (o / organization 
                  :name (n4 / name 
                        :op1 "CLAMS")) 
            :ARG1 (a / activity-06 
                  :ARG1 (s / state 
                        :name (n7 / name 
                              :op1 "California") 
                        :wiki "California") 
                  :location (c4 / country 
                        :name (n6 / name 
                              :op1 "United" 
                              :op2 "States") 
                        :wiki "United_States") 
                  :location (c5 / country 
                        :name (n8 / name 
                              :op1 "West" 
                              :op2 "Sacramento")) 
                  :location (c3 / country 
                        :name (n3 / name 
                              :op1 "Columbus" 
                              :op2 "Instruments")) 
                  :location (c / country 
                        :name (n / name 
                              :op1 "United" 
                              :op2 "States") 
                        :wiki "United_States")) 
            :ARG1-of (p / perform-02 
                  :ARG0 (s2 / service-01 
                        :ARG1 (o3 / organization 
                              :name (n9 / name 
                                    :op1 "Jackson" 
                                    :op2 "Laboratory"))))))

# ::snt Briefly , 3-mo-old female mice were acclimated for 17 h before data collection .
# ::tok Briefly , 3-mo-old female mice were acclimated for 17 h before data collection .
# ::alignments 12-13|0.0 11-12|0.0.0 10-11|0.0.1 9-10|0.0.1.0 8-9|0.0.1.0.0 4-5|0.0.0.0 3-4|0.0.0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:30.362
(b2 / briefly 
      :ARG0-of (c / collect-01 
            :ARG1 (d / data 
                  :location-of (m / mouse 
                        :mod (f / female))) 
            :op1-of (b / before 
                  :time-of (h / h 
                        :quant 17))))

# ::snt Data were collected every 30 min .
# ::tok Data were collected every 30 min .
# ::alignments 5-6|0.0.0 4-5|0.0.0.1 3-4|0.0.0.0 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:30.459
(c / collect-01 
      :ARG1 (d / data 
            :domain-of (m / min 
                  :mod (e / every) 
                  :quant 30)))

# ::snt Total beam breaks in the XY direction were tabulated for the 12-h light and dark cycles and compared across genotypes .
# ::tok Total beam breaks in the XY direction were tabulated for the 12-h light and dark cycles and compared across genotypes .
# ::alignments 19-20|0.1.0.0 18-19|0.1.0 17-18|0.1.1 16-17|0.1 15-16|0.1.1.0.1 14-15|0.1.1.0.1.0 13-14|0.1.1.0 12-13|0.1.1.0.0 8-9|0 6-7|0.0.0 5-6|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 2-3|0.0 1-2|0.0.2 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:30.636
(t / tabulate-01 
      :ARG1 (b / break-01 
            :ARG1 (d2 / direction 
                  :mod (c3 / country 
                        :name (n / name 
                              :op1 "XY"))) 
            :ARG1-of (t2 / total-01) 
            :mod (b2 / beam-01)) 
      :op1-of (a2 / and 
            :location (a / across 
                  :op1 (g / genotyp)) 
            :op2 (c / compare-01 
                  :ARG1 (a3 / and 
                        :op1 (l / light-06) 
                        :op2 (c2 / cycle-02 
                              :ARG1-of (d / dark-02))))))

# ::snt RNA , DNA , and protein analyses .
# ::tok RNA , DNA , and protein analyses .
# ::alignments 6-7|0.2 5-6|0.2.0 4-5|0 2-3|0.1 0-1|0.0.0.0+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:30.656
(a2 / and 
      :op1 (o / organization 
            :name (n / name 
                  :op1 "RNA")) 
      :op2 (d / DNA) 
      :op3 (a / analysis 
            :mod (p / protein)))

# ::snt Total RNA was isolated by the RNAzol method ( Tel-Test , Friendswood , Texas ) and Northern blotting was performed as previously described [ 40 ] .
# ::tok Total RNA was isolated by the RNAzol method ( Tel-Test , Friendswood , Texas ) and Northern blotting was performed as previously described [ 40 ] .
# ::alignments 24-25|0.0.1.0.1 22-23|0.1.1.0 21-22|0.1.1.0.0 19-20|0.1 16-18|0.1.1.1.1+0.1.1.1.0+0.1.1.1+0.1.1 15-16|0 13-14|0.0.1.0.0.1+0.0.1.0.0.0.0+0.0.1.0.0.0+0.0.1.0.0 11-12|0.0.0.0.0+0.0.0.0+0.0.0 9-10|0.1.0 7-8|0.0.2 6-7|0.0.2.0.0.0+0.0.2.0.0+0.0.2.0 3-4|0.0 1-2|0.0.1.1.0+0.0.1.1+0.0.1 0-1|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:31.467
(a / and 
      :op1 (i / isolate-01 
            :ARG0 (c2 / country 
                  :name (n3 / name 
                        :op1 "Friendswood")) 
            :ARG1 (o / organization 
                  :ARG1-of (t3 / total-01 
                        :ARG0 (s / state 
                              :name (n2 / name 
                                    :op1 "Texas") 
                              :wiki "Texas") 
                        :ARG2 40) 
                  :name (n5 / name 
                        :op1 "RNA")) 
            :manner (m / method 
                  :mod (t2 / thing 
                        :name (n4 / name 
                              :op1 "RNAzol")))) 
      :op2 (p2 / perform-02 
            :ARG0 (t / tel-t) 
            :ARG1 (c / country 
                  :ARG1-of (d / describe-01 
                        :time (p / previous)) 
                  :name (n / name 
                        :op1 "Northern" 
                        :op2 "blotting"))))

# ::snt The PGC-1 and PRC cDNAs were generous gifts from Bruce Spiegelman and Richard Scarpulla , respectively .
# ::tok The PGC-1 and PRC cDNAs were generous gifts from Bruce Spiegelman and Richard Scarpulla , respectively .
# ::alignments 15-16|0.0.1.0 12-14|0.0.0.1.0.1+0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 11-12|0.0.0 9-11|0.0.0.0.0.1+0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 7-8|0.0 6-7|0.0.1 4-5|0 3-4|0.0.0.0.1.0.0.0+0.0.0.0.1.0.0+0.0.0.0.1.0 2-3|0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:31.600
(c / cdna 
      :ARG1-of (g / gift-01 
            :ARG0 (a / and 
                  :op1 (p2 / person 
                        :name (n2 / name 
                              :op1 "Bruce" 
                              :op2 "Spiegelman") 
                        :op2-of (a2 / and 
                              :op1 (c2 / country 
                                    :name (n3 / name 
                                          :op1 "PRC")))) 
                  :op2 (p / person 
                        :name (n / name 
                              :op1 "Richard" 
                              :op2 "Scarpulla"))) 
            :ARG2-of (g2 / generous-01 
                  :ARG1 (r / respective))))

# ::snt The UCP-1 cDNA was a gift from Daniel Ricquier .
# ::tok The UCP-1 cDNA was a gift from Daniel Ricquier .
# ::alignments 7-9|0.0.0.0.1+0.0.0.0.0+0.0.0.0+0.0.0 5-6|0.0+0 2-3|0.1 1-2|0.1.0.0.0+0.1.0.0+0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:31.700
(t / thing 
      :ARG1-of (g / gift-01 
            :ARG0 (p / person 
                  :name (n / name 
                        :op1 "Daniel" 
                        :op2 "Ricquier"))) 
      :domain (c / cdna 
            :mod (t2 / thing 
                  :name (n2 / name 
                        :op1 "UCP-1"))))

# ::snt RT-PCR was performed as described [ 41 ] .
# ::tok RT-PCR was performed as described [ 41 ] .
# ::alignments 6-7|0.0 4-5|0.1 2-3|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:31.716
(p / perform-02 
      :ARG0 41 
      :ARG1 (d / describe-01))

# ::snt In brief , total RNA isolated from soleus muscle , BAT , and heart of 1 -- 2-mo-old PGC-1 + / + or PGC  /  mice was reverse transcribed with Taqman reverse transcription reagents ( Applied Biosystems , Foster City , California , United States ) .
# ::tok In brief , total RNA isolated from soleus muscle , BAT , and heart of 1 -- 2-mo-old PGC-1 + / + or PGC  /  mice was reverse transcribed with Taqman reverse transcription reagents ( Applied Biosystems , Foster City , California , United States ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:31.719
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Reactions were performed in triplicate in 96-well format using Taqman core reagents and a Prism 7500 Sequence Detector ( Applied Biosystems ) .
# ::tok Reactions were performed in triplicate in 96-well format using Taqman core reagents and a Prism 7500 Sequence Detector ( Applied Biosystems ) .
# ::alignments 19-21|0.0.0.1.0.1.0.0.1+0.0.0.1.0.1.0.0.0+0.0.0.1.0.1.0.0+0.0.0.1.0.1.0 16-18|0+0.0.1+0.0+0.0.0 15-16|0.0.0.0.1+0.0.0.0 14-15|0.0.0.0.0 12-13|0.0.0.1 11-12|0.0.0.1.1 10-11|0.0.0.1.1.0 8-9|0.0.0.1.0 7-8|0.0.0.1.0.0 4-5|0.0.0.1.0.1.2 2-3|0.0.0.1.0.1 0-1|0.0.0.1.0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:33.098
(d / Detector 
      :op2-of (n2 / name 
            :name-of (t / thing 
                  :mod (d2 / date-entity 
                        :mod (p / prism) 
                        :year 7500) 
                  :op2-of (a / and 
                        :ARG1-of (u / use-01 
                              :ARG0 (f / format) 
                              :manner-of (p2 / perform-02 
                                    :ARG0 (o / organization 
                                          :name (n / name 
                                                :op1 "Applied" 
                                                :op2 "Biosystems")) 
                                    :ARG1 (r2 / reaction) 
                                    :manner (t2 / triplicate))) 
                        :op1 (r / reagent 
                              :mod (c / core)))) 
            :op1 (s / Sequence)))

# ::snt The mouse-specific primer-probe sets used to detect specific gene expression can be found in Table S1 .
# ::tok The mouse-specific primer-probe sets used to detect specific gene expression can be found in Table S1 .
# ::alignments 14-16|0.0.1.1.0.1+0.0.1.1.0.0+0.0.1.1.0+0.0.1.1 12-13|0.0.1 10-11|0.0.1.0 9-10|0 8-9|0.1 7-8|0.1.0 6-7|0.0.0.0 4-5|0.0.0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:33.351
(e / express-01 
      :ARG1 (s2 / set 
            :ARG1-of (u / use-01 
                  :ARG2 (d / detect-01)) 
            :ARG1-of (f / find-01 
                  :ARG1-of (p / possible-01) 
                  :location (c / country 
                        :name (n / name 
                              :op1 "Table" 
                              :op2 "S1")))) 
      :mod (g / gene 
            :ARG1-of (s / specific-02)))

# ::snt The primers for UCP-1 have been previously described [ 42 ] .
# ::tok The primers for UCP-1 have been previously described [ 42 ] .
# ::alignments 9-10|0.0.0.1 7-8|0 6-7|0.1 3-4|0.0.0.0.0+0.0.0.0+0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:33.425
(d / describe-01 
      :ARG1 (p2 / primer 
            :beneficiary (t / thing 
                  :name (n / name 
                        :op1 "UCP-1") 
                  :op1-of 42)) 
      :time (p / previous))

# ::snt Actin primer-probe set ( Applied Biosystems ) was included in a separate well and used to normalize the soleus , BAT , and heart gene expression data .
# ::tok Actin primer-probe set ( Applied Biosystems ) was included in a separate well and used to normalize the soleus , BAT , and heart gene expression data .
# ::alignments 26-27|0.2 25-26|0 24-25|0.2.0 23-24|0.2.1 22-23|0.1.0.0 20-21|0.1.0.0.0.0.0+0.1.0.0.0.0+0.1.0.0.0 18-19|0.1.1.2.0 16-17|0.1.1.2 14-15|0.1.1 13-14|0.1 12-13|0.1.0.1 11-12|0.1.0.1.0 8-9|0.1.0 4-6|0.1.1.0.0.1+0.1.1.0.0.0+0.1.1.0.0+0.1.1.0 2-3|0.1.1.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:34.779
(e / express-01 
      :ARG0 (a3 / actin) 
      :ARG1 (a2 / and 
            :op1 (i / include-01 
                  :ARG1 (a / and 
                        :op1 (o / organization 
                              :name (n / name 
                                    :op1 "BAT"))) 
                  :ARG2 (w / well 
                        :ARG1-of (s2 / separate-02))) 
            :op2 (u / use-01 
                  :ARG0 (o2 / organization 
                        :name (n3 / name 
                              :op1 "Applied" 
                              :op2 "Biosystems")) 
                  :ARG1 (s3 / set) 
                  :ARG2 (n2 / normalize-01 
                        :ARG1 (s / soleu)))) 
      :source-of (d / data 
            :mod (g / gene) 
            :mod (h / heart)))

# ::snt GAPDH Rodent primers ( Applied Biosystems ) were used in the same well to normalize the liver gene expression data .
# ::tok GAPDH Rodent primers ( Applied Biosystems ) were used in the same well to normalize the liver gene expression data .
# ::alignments 19-20|0.0.0.0 18-19|0.0.0.0.2 17-18|0.0.0.0.0 16-17|0.0.0.0.1 14-15|0.0.0 12-13|0.1 11-12|0.1.0 8-9|0 4-6|0.0.0.0.2.0.0.1+0.0.0.0.2.0.0.0+0.0.0.0.2.0.0+0.0.0.0.2.0 1-3|0.0.1.1+0.0.1.0+0.0.1+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:35.012
(u / use-01 
      :ARG1 (t / thing 
            :ARG0-of (n / normalize-01 
                  :ARG1 (d / data 
                        :mod (g / gene) 
                        :mod (l / liver) 
                        :source (e / express-01 
                              :ARG1 (o / organization 
                                    :name (n2 / name 
                                          :op1 "Applied" 
                                          :op2 "Biosystems"))))) 
            :name (n3 / name 
                  :op1 (r / Rodent) 
                  :op2 (p / primers))) 
      :ARG2 (w / well 
            :ARG1-of (s / same-01)))

# ::snt For Southern blot studies , 5 g of genomic DNA was digested with Pst1 or Xba1 , electrophoresed on a 0.8 % TAE gel and transferred to a Gene Screen ( Perkin Elmer , Wellesley , California , United States ) membrane for hybridization .
# ::tok For Southern blot studies , 5 g of genomic DNA was digested with Pst1 or Xba1 , electrophoresed on a 0.8 % TAE gel and transferred to a Gene Screen ( Perkin Elmer , Wellesley , California , United States ) membrane for hybridization .
# ::alignments 43-44|0.0.3.4 41-42|0.1.2 38-40|0.4.1+0.4.0.1+0.4.0.0+0.4.0+0.4 36-37|0.0.0.1+0.0.0.0.0+0.0.0.0+0.0.0 34-35|0.0.3.3.0.0+0.0.3.3.0+0.0.3.3 31-33|0.3.0.1+0.3.0.0+0.3.0+0.3 28-30|0.2.0.1+0.2.0.0+0.2.0+0.2 25-26|0.1 24-25|0 23-24|0.1.0 21-22|0.0.3.0.0 20-21|0.0.3.0 15-16|0.0.2.1 14-15|0.0.2 13-14|0.0.2.0 11-12|0.0 9-10|0.0.1 6-7|0.1.1 5-6|0.0.3.2.0 3-4|0.0.3 2-3|0.0.3.2 1-2|0.0.3.1.0.0+0.0.3.1.0+0.0.3.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:35.880
(a / and 
      :op1 (d / digest-01 
            :ARG0 (s / state 
                  :name (n2 / name 
                        :op1 "California") 
                  :wiki "California") 
            :ARG1 (d2 / DNA) 
            :ARG2 (o / or 
                  :op1 (p4 / Pst1) 
                  :op2 (x / Xba1)) 
            :purpose (s2 / study-01 
                  :ARG0 (0 / 0.8 
                        :value-of (p3 / percentage-entity)) 
                  :ARG1 (t2 / thing 
                        :name (n6 / name 
                              :op1 "Southern")) 
                  :ARG2 (b / blot-01 
                        :ARG1 5) 
                  :mod (c2 / country 
                        :name (n3 / name 
                              :op1 "Wellesley")) 
                  :op1-of (h / hybridization))) 
      :op2 (t / transfer-01 
            :ARG0 (g / gel) 
            :ARG1 (g2 / g) 
            :ARG2 (m / membrane)) 
      :op3 (p2 / person 
            :name (n5 / name 
                  :op1 "Gene" 
                  :op2 "Screen")) 
      :op4 (p / person 
            :name (n4 / name 
                  :op1 "Perkin" 
                  :op2 "Elmer")) 
      :op5 (c / country 
            :name (n / name 
                  :op1 "United" 
                  :op2 "States") 
            :wiki "United_States"))

# ::snt Western blotting was performed as described [ 43 ] using the Enhanced Chemiluminescence detection system ( Amersham Pharmacia Biotech , Piscataway , New Jersey , United States ) .
# ::tok Western blotting was performed as described [ 43 ] using the Enhanced Chemiluminescence detection system ( Amersham Pharmacia Biotech , Piscataway , New Jersey , United States ) .
# ::alignments 25-27|0.0.0.0.1.1.1.1.1+0.0.0.0.1.1.1.1.0.1+0.0.0.0.1.1.1.1.0.0+0.0.0.0.1.1.1.1.0+0.0.0.0.1.1.1.1 22-24|0.0.0.0.1.1.0.0.1+0.0.0.0.1.1.0.0.0+0.0.0.0.1.1.0.0+0.0.0.0.1.1.0 20-21|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0 16-19|0.0.0.0.1.0.0.2+0.0.0.0.1.0.0.1+0.0.0.0.1.0.0.0+0.0.0.0.1.0.0+0.0.0.0.1.0 14-15|0.0.0 13-14|0.0 11-13|0.1.1+0.1.0+0.1+0 9-10|0.0.0.0 7-8|0.0.0.0.1.1.1.0 5-6|0.0.0.0.1 3-4|0.0.0.0.1.1.1 1-2|0.0.0.0.1.1 0-1|0.0.0.0.1.1.2.1+0.0.0.0.1.1.2.0.0+0.0.0.0.1.1.2.0+0.0.0.0.1.1.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:37.112
(t / thing 
      :ARG1-of (d / detect-01 
            :ARG0 (s / system 
                  :ARG1-of (u / use-01 
                        :ARG0 (c3 / country 
                              :name (n3 / name 
                                    :op1 "Piscataway")) 
                        :ARG2-of (d2 / describe-01 
                              :ARG0 (o / organization 
                                    :name (n4 / name 
                                          :op1 "Amersham" 
                                          :op2 "Pharmacia" 
                                          :op3 "Biotech")) 
                              :ARG1 (b / blot-01 
                                    :ARG0 (c2 / country 
                                          :name (n2 / name 
                                                :op1 "New" 
                                                :op2 "Jersey")) 
                                    :ARG1-of (p / perform-02 
                                          :ARG0 43 
                                          :ARG2 (c / country 
                                                :name (n / name 
                                                      :op1 "United" 
                                                      :op2 "States") 
                                                :wiki "United_States")) 
                                    :location (w / world-region 
                                          :name (n6 / name 
                                                :op1 "West") 
                                          :wiki "Western_world")))))) 
      :name (n5 / name 
            :op1 "Enhanced" 
            :op2 "Chemiluminescence"))

# ::snt Ponceau S ( Sigma , St. Louis , Missouri , United States ) staining of the membrane was used as a control .
# ::tok Ponceau S ( Sigma , St. Louis , Missouri , United States ) staining of the membrane was used as a control .
# ::alignments 21-22|0.2 18-19|0 16-17|0.0.1 13-14|0.0 10-12|0.2.1.1+0.2.1.0.1+0.2.1.0.0+0.2.1.0+0.2.1 8-9|0.2.0.1+0.2.0.0.0+0.2.0.0+0.2.0 5-7|0.2.2.0.1+0.2.2.0.0+0.2.2.0+0.2.2 3-4|0.1 0-2|0.0.0.0.1+0.0.0.0.0+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:37.813
(u / use-01 
      :ARG0 (s / stain-01 
            :ARG0 (p / person 
                  :name (n4 / name 
                        :op1 "Ponceau" 
                        :op2 "S")) 
            :ARG1 (m / membrane)) 
      :ARG1 (s3 / sigma) 
      :ARG2 (c / control-01 
            :ARG0 (s2 / state 
                  :name (n2 / name 
                        :op1 "Missouri") 
                  :wiki "Missouri") 
            :location (c2 / country 
                  :name (n / name 
                        :op1 "United" 
                        :op2 "States") 
                  :wiki "United_States") 
            :location (c3 / country 
                  :name (n3 / name 
                        :op1 "St." 
                        :op2 "Louis"))))

# ::snt Mitochondrial respiration was assessed in saponin-skinned soleus fibers with succinate as substrate and in the presence of rotenone as previously described [ 44 ] .
# ::tok Mitochondrial respiration was assessed in saponin-skinned soleus fibers with succinate as substrate and in the presence of rotenone as previously described [ 44 ] .
# ::alignments 22-23|0.3 20-21|0.0.0.0 19-20|0.0.0.0.0 17-18|0.0.0.1 15-16|0.0.0 12-13|0.0 11-12|0.2 9-10|0.4 7-8|0.5 6-7|0.5.0 5-6|0.5.1 3-4|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:38.101
(a2 / assess-01 
      :ARG0 (a / and 
            :op1 (p2 / presence 
                  :ARG1-of (d / describe-01 
                        :time (p / previous)) 
                  :mod (r / rotenone))) 
      :ARG1 (r2 / respiration) 
      :ARG2 (s / substrate) 
      :op1-of 44 
      :prep-with (s2 / succinate) 
      :time (f / fiber 
            :mod (s3 / soleu) 
            :mod (s4 / saponin-skinn)))

# ::snt In brief , 3-mo-old female mice were anesthetized with chloral hydrate ( 400 mg/kg of body weight ) .
# ::tok In brief , 3-mo-old female mice were anesthetized with chloral hydrate ( 400 mg/kg of body weight ) .
# ::alignments 16-17|0.2.0 15-16|0.2.0.0 12-13|0.0 10-11|0.2 7-8|0 5-6|0.1 4-5|0.1.0 1-2|0.2.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:38.161
(a / anesthetize-01 
      :ARG0 400 
      :ARG1 (m / mouse 
            :mod (f / female)) 
      :ARG2 (h / hydrate-01 
            :ARG0 (w / weight 
                  :part-of (b / body)) 
            :ARG1 (b2 / brief)))

# ::snt Soleus fibers were separated and then transferred to a buffer ( 2.77 mM K2Ca-EGTA , 7.23 mM K2EGTA , 6.56 mM MgCl2 , 20 mM imidazole , 53.3 mM K-MES , 20 mM taurine , 5.3 mM ATP , 15 mM PCr , 3 mM KH2PO4 , 0.5 mM DTT [ pH 7.1 ] ) supplemented with 50 g/ml saponin and permeabilized for 30 min at 4 C with gentle stirring .
# ::tok Soleus fibers were separated and then transferred to a buffer ( 2.77 mM K2Ca-EGTA , 7.23 mM K2EGTA , 6.56 mM MgCl2 , 20 mM imidazole , 53.3 mM K-MES , 20 mM taurine , 5.3 mM ATP , 15 mM PCr , 3 mM KH2PO4 , 0.5 mM DTT [ pH 7.1 ] ) supplemented with 50 g/ml saponin and permeabilized for 30 min at 4 C with gentle stirring .
# ::alignments 70-71|0.6.0 69-70|0.6.0.1 67-68|0.6 66-67|0.6.1 64-65|0.6.0.0 63-64|0.6.0.0.0 60-61|0.5 59-60|0.0.0.0.0.1 57-58|0.0.0.0.0.1.0 55-56|0.0.0.0.0 51-52|0.6.0.1.1 47-48|0.6.0.1.2 45-46|0.6.0.1.4 43-44|0.6.0.1.0 41-42|0.4.0.0+0.4.0+0.4 39-40|0.4.1 37-38|0.6.0.1.3 35-36|0.0.2 33-34|0.0.0.0.0.0 31-32|0.0.1.0 28-30|0.3.0.1+0.3.0.0+0.3.0+0.3 25-26|0.0.0.0.2 23-24|0.0.0.0.3 21-22|0.0.0.0.1 17-18|0.2.0.0+0.2.0+0.2 13-14|0.1.1.0+0.1.1+0.1 12-13|0.1.0 9-10|0.0.1 6-7|0.0 5-6|0.0.3 4-5|0 3-4|0.0.0.0 1-2|0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:39.953
(a3 / and 
      :op1 (t3 / transfer-01 
            :ARG1 (f / fiber 
                  :ARG1-of (s4 / separate-01 
                        :ARG2 (s3 / supplement-01 
                              :ARG0 (t / taurine) 
                              :ARG1 (s2 / saponin 
                                    :quant 50)) 
                        :op1-of (m3 / MgCl2) 
                        :op1-of (i / imidazole) 
                        :op1-of 20) 
                  :mod (s5 / soleu)) 
            :ARG2 (b / buffer-01 
                  :ARG1 20) 
            :op1-of 5.3 
            :time (t4 / then)) 
      :op2 (c3 / country 
            :mod (m4 / mm) 
            :name (n4 / name 
                  :op1 "K2Ca-EGTA")) 
      :op3 (c2 / country 
            :name (n3 / name 
                  :op1 "K2EGTA")) 
      :op4 (t2 / thing 
            :name (n2 / name 
                  :op1 (m2 / mM) 
                  :op2 (k2 / K-MES))) 
      :op5 (p2 / person 
            :name (n / name 
                  :op1 "PCr") 
            :quant 15) 
      :op6 (a / and) 
      :poss-of (c / C 
            :ARG1-of (s / stir-01 
                  :ARG0 (m / min 
                        :quant 30) 
                  :ARG1-of (g / gentle-01 
                        :op1-of 3 
                        :op1-of (p / ph) 
                        :op1-of 0.5 
                        :op1-of (a2 / atp) 
                        :op1-of (k / KH2PO4))) 
            :quant 4))

# ::snt Fibers were then washed twice for 10 min each ( 2.77 mM K2Ca-EGTA , 7.23 mM K2EGTA , 1.38 mM MgCl2 , 20 mM imidazole , 100 mM K-MES , 20 mM taurine , 3 mM KH2PO4 , 0.5 mM DTT , 2 mg/ml BSA [ pH 7.1 ] ) .
# ::tok Fibers were then washed twice for 10 min each ( 2.77 mM K2Ca-EGTA , 7.23 mM K2EGTA , 1.38 mM MgCl2 , 20 mM imidazole , 100 mM K-MES , 20 mM taurine , 3 mM KH2PO4 , 0.5 mM DTT , 2 mg/ml BSA [ pH 7.1 ] ) .
# ::alignments 46-47|0.0.0.4 44-45|0.0.0.7.0.0+0.0.0.7.0+0.0.0.7 42-43|0.0.0.6 38-39|0.0.0.9 34-35|0.0.0.5 32-33|0 30-31|0.0 28-29|0.0.0.3.0 26-27|0.0.0.3 24-25|0.0.0.8.0 22-23|0.0.0.8 20-21|0.0.0.0.2 16-17|0.0.0.0.0.0.0+0.0.0.0.0.0+0.0.0.0.0 12-13|0.0.0.0.1.0.0.0+0.0.0.0.1.0.0+0.0.0.0.1.0 11-12|0.0.0.0.1 8-9|0.0.0.1 7-8|0.0.0.2 6-7|0.0.0.2.0 3-4|0.0.0 2-3|0.0.0.10 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:40.367
(t / taurine 
      :quant (22 / 20 
            :op1 (w / wash-01 
                  :ARG1 (f / fiber 
                        :mod (c / country 
                              :name (n2 / name 
                                    :op1 "K2EGTA")) 
                        :poss (m2 / mm 
                              :mod-of (c2 / country 
                                    :name (n3 / name 
                                          :op1 "K2Ca-EGTA"))) 
                        :poss-of (m / MgCl2)) 
                  :ARG2 (e / each) 
                  :duration (m3 / min 
                        :quant 10) 
                  :op1-of (1 / 100 
                        :quant-of (k / k-m)) 
                  :op1-of (p / ph) 
                  :op1-of 3 
                  :op1-of 2 
                  :op1-of (o / organization 
                        :name (n / name 
                              :op1 "BSA")) 
                  :op1-of (23 / 20 
                        :quant-of (i / imidazole)) 
                  :op1-of 0.5 
                  :time (t2 / then))))

# ::snt Respiration was measured at 25 C using an optical probe ( Oxygen FOXY Probe , Ocean Optics , Dunedin , Florida , United States ) .
# ::tok Respiration was measured at 25 C using an optical probe ( Oxygen FOXY Probe , Ocean Optics , Dunedin , Florida , United States ) .
# ::alignments 22-24|0.0.0.0.0.0.1.3.1+0.0.0.0.0.0.1.3.0.1+0.0.0.0.0.0.1.3.0.0+0.0.0.0.0.0.1.3.0+0.0.0.0.0.0.1.3 20-21|0.0.0.0.0.0.1.2.1+0.0.0.0.0.0.1.2.0.0+0.0.0.0.0.0.1.2.0+0.0.0.0.0.0.1.2 18-19|0.0.0.0.0.0.1.4.0.0+0.0.0.0.0.0.1.4.0+0.0.0.0.0.0.1.4 15-17|0.0.0.0.0.0.1.0.0.1+0.0.0.0.0.0.1.0.0.0+0.0.0.0.0.0.1.0.0+0.0.0.0.0.0.1.0 13-14|0.0.0.0 11-13|0+0.0.1+0.0+0.0.0 9-10|0.0.0.0.0.0.0 8-9|0.0.0.0.0.0.0.0 6-7|0.0.0.0.0.0 5-6|0.0.0.0.0 4-5|0.0.0.0.0.1 2-3|0.0.0.0.0.0.1 0-1|0.0.0.0.0.0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:41.216
(f / FOXY 
      :op2-of (n5 / name 
            :name-of (t / thing 
                  :ARG1-of (p / probe-01 
                        :ARG0 (c3 / C 
                              :ARG0-of (u / use-01 
                                    :ARG1 (p2 / probe-01 
                                          :mod (o3 / optics)) 
                                    :manner-of (m / measure-01 
                                          :ARG0 (o / organization 
                                                :name (n4 / name 
                                                      :op1 "Ocean" 
                                                      :op2 "Optics")) 
                                          :ARG1 (r / respiration) 
                                          :ARG2 (s / state 
                                                :name (n2 / name 
                                                      :op1 "Florida") 
                                                :wiki "Florida") 
                                          :op1-of (c / country 
                                                :name (n / name 
                                                      :op1 "United" 
                                                      :op2 "States") 
                                                :wiki "United_States") 
                                          :op1-of (c2 / country 
                                                :name (n3 / name 
                                                      :op1 "Dunedin")))) 
                              :quant 25))) 
            :op1 (o2 / Oxygen)))

# ::snt Following measurement of basal state 2 respiration , maximal ( ADP-stimulated ) state 3 respiration was determined by exposing fibers to 1 mM ADP .
# ::tok Following measurement of basal state 2 respiration , maximal ( ADP-stimulated ) state 3 respiration was determined by exposing fibers to 1 mM ADP .
# ::alignments 23-24|0.3.2.1.0+0.3.2.1+0.3.2 22-23|0.3.2.0 21-22|0.1.0 19-20|0.3.1 18-19|0.3 16-17|0 14-15|0.0 13-14|0.0.0 12-13|0.2 10-11|0.1.1.0 8-9|0.2.0 6-7|0.1.1.1 5-6|0.1.1.1.0 4-5|0.1.1.2 3-4|0.3.0 1-2|0.1.1 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:41.822
(d / determined-02 
      :ARG0 (r / respiration 
            :quant 3) 
      :ARG1-of (f2 / follow-01 
            :ARG0 1 
            :ARG2 (m3 / measure-01 
                  :ARG0 (a / adp-stimulat) 
                  :ARG1 (r2 / respiration 
                        :quant 2) 
                  :ARG2 (s2 / state))) 
      :ARG2 (s / state 
            :mod (m2 / maximum)) 
      :manner (e / expose-01 
            :ARG0 (b / basal) 
            :ARG1 (f / fiber) 
            :ARG2 (o / organization 
                  :mod (m / mm) 
                  :name (n / name 
                        :op1 "ADP"))))

# ::snt The integrity of the outer mitochondrial membrane was assessed by adding 8 M exogenous cytochrome c to ADP-stimulated fibers .
# ::tok The integrity of the outer mitochondrial membrane was assessed by adding 8 M exogenous cytochrome c to ADP-stimulated fibers .
# ::alignments 18-19|0.1.2 17-18|0.1.2.0 15-16|0.1.0 14-15|0.1.1 13-14|0.1.1.0 12-13|0.1.1.0.0.1+0.1.1.0.0.0.0+0.1.1.0.0.0+0.1.1.0.0 11-12|0.1.1.1 10-11|0.1 8-9|0 6-7|0.0.0 5-6|0.0.0.1 4-5|0.0.0.0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:42.060
(a3 / assess-01 
      :ARG1 (i / integrity 
            :mod (m / membrane 
                  :mod (o / outer) 
                  :mod (m2 / mitochondrial))) 
      :ARG2 (a2 / add-02 
            :ARG0 (c / c) 
            :ARG1 (c2 / cytochrome 
                  :mod (e / exogenou 
                        :mod (v / vehicle 
                              :name (n / name 
                                    :op1 "M1") 
                              :wiki "M1_Abrams")) 
                  :quant 8) 
            :ARG2 (f / fiber 
                  :mod (a / adp-stimulat))))

# ::snt State 4 respiration ( uncoupled ) was evaluated following addition of oligomycin ( 1 g/ml ) .
# ::tok State 4 respiration ( uncoupled ) was evaluated following addition of oligomycin ( 1 g/ml ) .
# ::alignments 13-14|0.0.1.0 11-12|0.0.1.1 9-10|0.0.1.2 8-9|0.0.1 7-8|0.0 4-5|0 2-3|0.0.0 1-2|0.0.0.1 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:42.152
(u / uncouple 
      :ARG0-of (e / evaluate-01 
            :ARG1 (r / respiration 
                  :mod (s / state) 
                  :quant 4) 
            :time (f / follow-01 
                  :ARG0 1 
                  :ARG1 (o / oligomycin) 
                  :ARG2 (a / addition))))

# ::snt The solubility of oxygen in the respiration buffer at 25 C was taken as 246.87 nmol O2  ml  1 .
# ::tok The solubility of oxygen in the respiration buffer at 25 C was taken as 246.87 nmol O2  ml  1 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:42.154
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Respiration rates were expressed as nmol O2  min  1  mgdw  1 .
# ::tok Respiration rates were expressed as nmol O2  min  1  mgdw  1 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:42.157
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Insulin and glucose tolerance tests .
# ::tok Insulin and glucose tolerance tests .
# ::alignments 4-5|0.2 3-4|0.2.0 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:42.174
(a / and 
      :op1 (i / insulin) 
      :op2 (g / glucose) 
      :op3 (t / test-01 
            :ARG1 (t2 / tolerate-01)))

# ::snt Glucose and Insulin tolerance tests were performed as described [ 35 ] .
# ::tok Glucose and Insulin tolerance tests were performed as described [ 35 ] .
# ::alignments 10-11|0.1.0.0.1 8-9|0.1.0.1 6-7|0.1 4-5|0.1.0 3-4|0.1.0.0 2-3|0.1.0.0.0 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:42.227
(a / and 
      :op1 (g / glucose) 
      :op2 (p / perform-02 
            :ARG1 (t / test-01 
                  :ARG1 (t2 / tolerate-01 
                        :ARG0 (i / insulin) 
                        :ARG1 35) 
                  :ARG1-of (d / describe-01))))

# ::snt Prior to studies , mice were fasted overnight ( GTT ) or 6 h ( ITT ) .
# ::tok Prior to studies , mice were fasted overnight ( GTT ) or 6 h ( ITT ) .
# ::alignments 13-14|0.1 12-13|0.1.0 11-12|0 7-8|0.0 4-5|0.1.0.0.0 2-3|0.1.0.0 0-1|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:42.299
(o / or 
      :op1 (o2 / overnight) 
      :op2 (h / h 
            :quant (6 / 6 
                  :ARG2-of (s / study-01 
                        :ARG0 (m / mouse) 
                        :op1-of (p / prior)))))

# ::snt In GTT studies , mice were injected with a 10 % solution of D-glucose ( 1 g/kg ) .
# ::tok In GTT studies , mice were injected with a 10 % solution of D-glucose ( 1 g/kg ) .
# ::alignments 15-16|0.0.1.0 13-14|0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 11-12|0.0.0 10-11|0.0.0.0 9-10|0.0.0.0.0 6-7|0.0 4-5|0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:42.354
(m / mouse 
      :ARG2-of (i / inject-01 
            :ARG0 (s / solution 
                  :mod (p / percentage-entity 
                        :value 10) 
                  :poss (t / thing 
                        :name (n / name 
                              :op1 "D-glucose"))) 
            :time (s2 / study-01 
                  :ARG1 1)))

# ::snt For ITT , mice received an IP injection of human regular insulin ( Eli Lilly , Indianapolis , Indiana , United States ) at a dose of 0.75 units/kg of body weight .
# ::tok For ITT , mice received an IP injection of human regular insulin ( Eli Lilly , Indianapolis , Indiana , United States ) at a dose of 0.75 units/kg of body weight .
# ::alignments 31-32|0.1.1.0.0 30-31|0.1.1.0.0.0 25-26|0.1.2 20-22|0.2.1+0.2.0.1+0.2.0.0+0.2.0+0.2 18-19|0.1.2.1.0.0+0.1.2.1.0+0.1.2.1 16-17|0.1.2.0.1+0.1.2.0.0.0+0.1.2.0.0+0.1.2.0 13-15|0.1.0.0.1+0.1.0.0.0+0.1.0.0+0.1.0 11-12|0.1.1 10-11|0.1.1.0 9-10|0.1.1.0.1 7-8|0.1 6-7|0.1.3 4-5|0 3-4|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:42.790
(r2 / receive-01 
      :ARG0 (m / mouse) 
      :ARG1 (i2 / inject-01 
            :ARG0 (p / person 
                  :name (n4 / name 
                        :op1 "Eli" 
                        :op2 "Lilly")) 
            :ARG1 (i / insulin 
                  :ARG1-of (r / regular-02 
                        :ARG0 (w / weight 
                              :part-of (b / body)) 
                        :mod (h / human))) 
            :ARG1-of (d / dose-01 
                  :ARG0 (c3 / city 
                        :name (n3 / name 
                              :op1 "Indianapolis") 
                        :wiki "Indianapolis") 
                  :ARG2 (c2 / country 
                        :name (n2 / name 
                              :op1 "Indiana"))) 
            :mod (i3 / IP)) 
      :op1-of (c / country 
            :name (n / name 
                  :op1 "United" 
                  :op2 "States") 
            :wiki "United_States"))

# ::snt Tail blood glucose was determined at 0 , 30 , 60 , and 120 min after challenge using a B-GLUCOSE Analyzer ( Hemacue AB , Angelholm , Sweden ) .
# ::tok Tail blood glucose was determined at 0 , 30 , 60 , and 120 min after challenge using a B-GLUCOSE Analyzer ( Hemacue AB , Angelholm , Sweden ) .
# ::alignments 27-28|0.0.0.1.0.1+0.0.0.1.0.0.0+0.0.0.1.0.0+0.0.0.1.0 25-26|0.0.0.1.2.0.0.0+0.0.0.1.2.0.0+0.0.0.1.2.0 22-24|0.0.0.2.0.1+0.0.0.2.0.0+0.0.0.2.0+0.0.0.2 19-21|0.0.0.1.1.0.0.1+0.0.0.1.1.0.0.0+0.0.0.1.1.0.0+0.0.0.1.1.0 17-18|0.0.0.1.1 16-17|0.0.0.1 15-16|0.0.0.1.1.3 13-14|0.0.0.3 12-13|0.0.0.1.2 10-11|0.0.0.1.1.1 8-9|0.0.0.0 6-7|0.0.0.1.1.2 4-5|0 2-3|0.0 1-2|0.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:43.652
(d / determined-02 
      :ARG0 (g / glucose 
            :ARG1-of (t / tail-01 
                  :ARG0 30 
                  :ARG1-of (c3 / challenge-01 
                        :ARG0 (c / country 
                              :name (n / name 
                                    :op1 "Sweden") 
                              :wiki "Sweden") 
                        :ARG0-of (u / use-01 
                              :ARG1 (p / person 
                                    :name (n4 / name 
                                          :op1 "B-GLUCOSE" 
                                          :op2 "Analyzer")) 
                              :ARG2 60 
                              :op1-of 0 
                              :op1-of (a / after)) 
                        :op1-of (a2 / and 
                              :op2 (c2 / country 
                                    :name (n2 / name 
                                          :op1 "Angelholm")))) 
                  :op1-of (o / organization 
                        :name (n3 / name 
                              :op1 "Hemacue" 
                              :op2 "AB")) 
                  :op1-of 120) 
            :mod (b / blood)))

# ::snt Oxygen consumption rates ( VO2 ) of 5-wk-old female mice were measured using a Columbus Instruments Oxymax System .
# ::tok Oxygen consumption rates ( VO2 ) of 5-wk-old female mice were measured using a Columbus Instruments Oxymax System .
# ::alignments 14-18|0.0.0.0.3+0.0.0.0.2+0.0.0.0.1+0.0.0.0.0+0.0.0.0+0.0.0 12-13|0.0 11-12|0.0.1 9-10|0.0.1.0 8-9|0.0.1.0.0 4-5|0 2-3|0.0.2 1-2|0.0.2.0 0-1|0.0.2.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:43.981
(v / VO2 
      :ARG0-of (u / use-01 
            :ARG1 (o / organization 
                  :name (n / name 
                        :op1 "Columbus" 
                        :op2 "Instruments" 
                        :op3 "Oxymax" 
                        :op4 "System")) 
            :ARG1-of (m / measure-01 
                  :ARG0 (m2 / mouse 
                        :mod (f / female))) 
            :ARG2 (r / rate 
                  :mod (c / consume-01 
                        :ARG1 (o2 / oxygen)))))

# ::snt Resting baseline oxygen consumption rates were assessed for at least 1.0 h. For 3-adrenergic stimulation studies , BRL 37344 ( Sigma ) was dissolved in sterile saline and injected IP ( 2 g/g of body weight ) [ 45 ] .
# ::tok Resting baseline oxygen consumption rates were assessed for at least 1.0 h. For 3-adrenergic stimulation studies , BRL 37344 ( Sigma ) was dissolved in sterile saline and injected IP ( 2 g/g of body weight ) [ 45 ] .
# ::alignments 38-39|0.1.1.0.2.0 35-36|0.1.0 34-35|0.1.0.0 31-32|0.1.1.0.0 29-30|0.3.0 28-29|0.3 27-28|0 26-27|0.2 25-26|0.0 23-24|0.1 20-21|0.1.1.0.1.0.0 15-16|0.1.1.0.2 14-15|0.1.1.0.2.1 6-7|0.1.1.0 4-5|0.1.1.0.1 3-4|0.1.1.0.1.0 2-3|0.1.1.0.1.0.1 1-2|0.1.1.0.1.1 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:44.289
(a / and 
      :ARG1-of (s2 / sterile-02) 
      :op1 (d / dissolve-01 
            :ARG0 (w / weight 
                  :part-of (b / body)) 
            :ARG1 (r2 / rest-01 
                  :ARG1 (a2 / assess-01 
                        :ARG0 2 
                        :ARG1 (r / rate 
                              :mod (c / consume-01 
                                    :ARG0 (s3 / sigma) 
                                    :ARG1 (o / oxygen)) 
                              :mod (b2 / baseline)) 
                        :ARG2 (s4 / study-01 
                              :ARG0 45 
                              :ARG1 (s5 / stimulation))))) 
      :op2 (s / saline) 
      :op3 (i2 / inject-01 
            :ARG1 (i / IP)))

# ::snt Postagonist assessment of oxygen consumption was recorded for an additional 1.0 h , with data collected at the 40-min time point .
# ::tok Postagonist assessment of oxygen consumption was recorded for an additional 1.0 h , with data collected at the 40-min time point .
# ::alignments 20-21|0.1.2 19-20|0.1.2.0 15-16|0.1 14-15|0.1.1 11-12|0.1.0 9-10|0.1.0.0 6-7|0 4-5|0.0 3-4|0.0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:44.373
(r / record-01 
      :ARG1 (c2 / consume-01 
            :ARG1 (o / oxygen) 
            :ARG1-of (a2 / assess-01)) 
      :purpose (c / collect-01 
            :ARG0 (h / h 
                  :mod (a / additional)) 
            :ARG1 (d / data) 
            :ARG2 (p / point 
                  :mod (t / time))))

# ::snt Histology and electron microscopy .
# ::tok Histology and electron microscopy .
# ::alignments 3-4|0.1.0 2-3|0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:44.386
(a / and 
      :op1 (h / histology) 
      :op2 (e / electron 
            :mod (m / microscopy)))

# ::snt Soleus muscle and liver were dissected and fixed overnight in 2 % glutaraldehyde , 1 % paraformaldehyde , and 0.08 % sodium cacodylate buffer .
# ::tok Soleus muscle and liver were dissected and fixed overnight in 2 % glutaraldehyde , 1 % paraformaldehyde , and 0.08 % sodium cacodylate buffer .
# ::alignments 23-24|0.1.1.0 22-23|0.1.1.0.0 21-22|0.1.1.0.0.0 20-21|0.1.3.0 18-19|0.1.1 16-17|0.1.1.2 15-16|0.1.3.2 14-15|0.1.3.2.0 12-13|0.1.1.1 11-12|0.1.3.1 10-11|0.1.3 8-9|0.1.2 7-8|0.1 6-7|0 5-6|0.0 3-4|0.0.0.0 2-3|0.0.0 1-2|0.1.0 0-1|0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:44.791
(a2 / and 
      :op1 (d / dissect-01 
            :ARG1 (a3 / and 
                  :op1 (l / liver))) 
      :op2 (f / fix-03 
            :ARG1 (m / muscle-01 
                  :ARG1 (s2 / soleu)) 
            :op1-of (a / and 
                  :ARG0-of (b / buffer-01 
                        :ARG1 (c / cacodylate 
                              :mod (s / sodium))) 
                  :op2 (g / glutaraldehyde) 
                  :op3 (p2 / paraformaldehyde)) 
            :time (o / overnight) 
            :time (2 / 2 
                  :value-of (p / percentage-entity) 
                  :value-of (p4 / percentage-entity) 
                  :value-of (p3 / percentage-entity 
                        :value 1))))

# ::snt The tissues were postfixed in 1 % osmium tetroxide , dehydrated in graded ethanol , embedded in Poly Bed plastic resin , and sectioned for electron microscopy .
# ::tok The tissues were postfixed in 1 % osmium tetroxide , dehydrated in graded ethanol , embedded in Poly Bed plastic resin , and sectioned for electron microscopy .
# ::alignments 26-27|0.1.0 25-26|0.1.0.0 23-24|0.1 22-23|0 20-21|0.0.1 19-20|0.0.1.1 17-19|0.0.1.0.0.1+0.0.1.0.0.0+0.0.1.0.0+0.0.1.0 15-16|0.0 13-14|0.0.0.0.1 12-13|0.0.0.0.1.0 10-11|0.0.0.0 8-9|0.0.0.0.0 7-8|0.0.0.0.0.1 6-7|0.0.0.0.0.0 5-6|0.0.0.0.0.0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:45.085
(a / and 
      :op1 (e2 / embed-01 
            :ARG1 (t2 / tissue 
                  :ARG1-of (d / dehydrate-01 
                        :ARG0 (t / tetroxide 
                              :mod (p2 / percentage-entity 
                                    :value 1) 
                              :mod (o / osmium)) 
                        :ARG2 (e3 / ethanol 
                              :ARG1-of (g / grade-01)))) 
            :time (r / resin 
                  :mod (c / country 
                        :name (n / name 
                              :op1 "Poly" 
                              :op2 "Bed")) 
                  :mod (p / plastic))) 
      :op2 (s / section-01 
            :ARG1 (m / microscopy 
                  :mod (e / electron))))

# ::snt Cardiac and skeletal muscle mitochondrial and myofibrillar volume densities were determined from electron micrographs as described previously [ 10 ] .
# ::tok Cardiac and skeletal muscle mitochondrial and myofibrillar volume densities were determined from electron micrographs as described previously [ 10 ] .
# ::alignments 18-19|0.3.0.0.1 16-17|0.3.1 15-16|0.3 13-14|0.1 12-13|0.1.0 10-11|0 8-9|0.0.0 7-8|0.0.0.0 6-7|0.0.0.0.0 5-6|0.0 4-5|0.3.0 3-4|0.3.0.0 2-3|0.3.0.0.0 1-2|0.2 0-1|0.2.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:45.367
(d2 / determined-02 
      :ARG1 (a / and 
            :op1 (d3 / densiti 
                  :mod (v / volume 
                        :mod (m2 / myofibrillar)))) 
      :ARG2 (m / micrograph 
            :mod (e / electron)) 
      :op2-of (a2 / and 
            :op1 (c / cardiac)) 
      :time (d / describe-01 
            :ARG1 (m3 / mitochondrial 
                  :ARG1-of (m4 / muscle-01 
                        :ARG0 (s / skeletal) 
                        :ARG2 10)) 
            :time (p / previous)))

# ::snt For each animal , three different fields at the magnification of 7500  were quantified in blinded fashion .
# ::tok For each animal , three different fields at the magnification of 7500  were quantified in blinded fashion .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:45.369
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Data were expressed as mean volume density of mitochondria or myofibrils in each field .
# ::tok Data were expressed as mean volume density of mitochondria or myofibrils in each field .
# ::alignments 13-14|0.3 12-13|0.3.0 10-11|0.0.1 9-10|0.0 8-9|0.0.0 6-7|0.2 5-6|0.2.1 4-5|0.2.0 2-3|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:45.480
(e2 / express-01 
      :ARG0 (o / or 
            :op1 (m2 / mitochondrion) 
            :op2 (m / myofibril)) 
      :ARG1 (d2 / data) 
      :ARG2 (d / density 
            :ARG1-of (m3 / mean-01) 
            :mod (v / volume)) 
      :ARG3 (f / field 
            :mod (e / each)))

# ::snt For electron microscopic analysis of the brain , tissue was prepared as previously described [ 46 ] .
# ::tok For electron microscopic analysis of the brain , tissue was prepared as previously described [ 46 ] .
# ::alignments 15-16|0.1.0 13-14|0.0.0 12-13|0.0.0.0 10-11|0 8-9|0.0 6-7|0.1.1 3-4|0.1 2-3|0.1.2 1-2|0.1.3 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:45.542
(p2 / prepare-02 
      :ARG1 (t / tissue 
            :ARG1-of (d / describe-01 
                  :time (p / previous))) 
      :purpose (a / analyze-01 
            :ARG0 46 
            :ARG1 (b / brain) 
            :manner (m / microscopic) 
            :mod (e / electron)))

# ::snt Ultrathin sections of cortex were cut onto formvar-coated slot grids stained with uranyl acetate and lead citrate and examined with a JEOL 1200 electron microscope .
# ::tok Ultrathin sections of cortex were cut onto formvar-coated slot grids stained with uranyl acetate and lead citrate and examined with a JEOL 1200 electron microscope .
# ::alignments 24-25|0.0.1.1.0.0.0 23-24|0.0.1.1.0.0.0.0 22-23|0.0.1.0.0.0.0 21-22|0.0.1.1.0.0.1.0+0.0.1.1.0.0.1+0.0.1.1.0.0 18-19|0.0 17-18|0.0.1 16-17|0.0.1.1 15-16|0.0.1.1.0 14-15|0 13-14|0.0.1.0.1 12-13|0.0.1.0.1.0 10-11|0.0.1.0 9-10|0.0.1.0.0 8-9|0.0.1.0.0.1 7-8|0.0.1.0.0.2 6-7|0.0.1.0.0.3 5-6|0.0.1.0.0.0 3-4|0.0.0 1-2|0.0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:46.131
(a2 / and 
      :op1 (e2 / examine-01 
            :ARG1 (c3 / cortex) 
            :op3-of (a / and 
                  :op1 (s / stain-01 
                        :ARG1 (g / grid 
                              :ARG2-of (c2 / cut-01 
                                    :ARG0 1200 
                                    :ARG1 (s3 / section)) 
                              :mod (s2 / slot) 
                              :mod (f / formvar-coat) 
                              :op1-of (o2 / onto)) 
                        :ARG2 (a3 / acetate 
                              :mod (u / uranyl))) 
                  :op2 (c / citrate 
                        :ARG0-of (l / lead-02 
                              :ARG1 (o / organization 
                                    :mod-of (m / microscope 
                                          :mod (e / electron)) 
                                    :name (n / name 
                                          :op1 "JEOL")))))))

# ::snt For H&E staining , sections of brain , including cerebral cortex , brainstem , and cerebellum , were dehydrated in graded concentrations of alcohol and embedded in paraffin from which 5-m sections were prepared .
# ::tok For H&E staining , sections of brain , including cerebral cortex , brainstem , and cerebellum , were dehydrated in graded concentrations of alcohol and embedded in paraffin from which 5-m sections were prepared .
# ::alignments 33-34|0.2.1.0 31-32|0.2.1.0.0 27-28|0.2.1 25-26|0.2 24-25|0 23-24|0.1.0.1 21-22|0.1.0 20-21|0.1.0.0 18-19|0.1 15-16|0.0.1.2 14-15|0.0.1 12-13|0.0 10-11|0.0.1.1 9-10|0.0.1.0 6-7|0.2.0.0 4-5|0.2.0 2-3|0.0.0 1-2|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:46.634
(a / and 
      :op1 (b / brainstem 
            :mod (s3 / stain-01 
                  :ARG1 (t / thing 
                        :name (n / name 
                              :op1 "H&E"))) 
            :op2-of (a3 / and 
                  :mod (c4 / cerebral) 
                  :op1 (c3 / cortex) 
                  :op3 (c2 / cerebellum))) 
      :op2 (d / dehydrate-01 
            :ARG1 (c / concentration 
                  :ARG1-of (g / grade-01) 
                  :mod (a2 / alcohol))) 
      :op3 (e / embed-01 
            :ARG1 (s2 / section 
                  :mod (b2 / brain)) 
            :location (p2 / paraffin 
                  :ARG0-of (p / prepare-02 
                        :ARG1 (s / section)))))

# ::snt Primary mouse hepatocyte studies .
# ::tok Primary mouse hepatocyte studies .
# ::alignments 3-4|0 2-3|0.0 1-2|0.0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:46.647
(s / study-01 
      :ARG1 (h / hepatocyte 
            :mod (m / mouse)) 
      :mod (p / primary))

# ::snt Primary cultures of mouse hepatocytes were prepared from male PGC-1 + / + and PGC-1  /  mice essentially as described [ 47 ] .
# ::tok Primary cultures of mouse hepatocytes were prepared from male PGC-1 + / + and PGC-1  /  mice essentially as described [ 47 ] .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:46.649
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Fatty acid oxidation and triglyceride synthesis experiments were commenced 2 -- 3 h after the cells were plated .
# ::tok Fatty acid oxidation and triglyceride synthesis experiments were commenced 2 -- 3 h after the cells were plated .
# ::alignments 17-18|0.0.0.1.0.0.0 15-16|0.0.0.1.0.0.0.1 13-14|0.0.0.1.0.0 12-13|0 11-12|0.0 9-10|0.0.0.1.0.0.0.0 8-9|0.0.0.1.0 6-7|0.0.0 5-6|0.0.0.0 4-5|0.0.0.0.0 3-4|0.0.0.1 2-3|0.0.0.1.1 1-2|0.0.0.1.1.0 0-1|0.0.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:46.816
(h / h 
      :quant (3 / 3 
            :ARG0-of (e / experiment-01 
                  :ARG1 (s / synthesi 
                        :mod (t / triglyceride)) 
                  :op2-of (a2 / and 
                        :ARG1-of (c2 / commence-01 
                              :time (a / after 
                                    :op1 (p / plate-01 
                                          :ARG0 2 
                                          :ARG1 (c / cell)))) 
                        :op1 (o / oxidation 
                              :mod (a3 / acid) 
                              :mod (f / fatty))))))

# ::snt Triglyceride synthesis studies , were performed as previously described [ 47 ] .
# ::tok Triglyceride synthesis studies , were performed as previously described [ 47 ] .
# ::alignments 10-11|0.0.0.0 8-9|0 7-8|0.1 5-6|0.0 2-3|0.0.0 1-2|0.0.0.1 0-1|0.0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:47.005
(d / describe-01 
      :ARG1-of (p2 / perform-02 
            :ARG0 (s / study-01 
                  :ARG0 47 
                  :ARG1 (s2 / synthesi) 
                  :mod (t / triglyceride))) 
      :time (p / previous))

# ::snt Palmitate oxidation rates were quantified using [ 9,10-3H ] - palmitic acid as described [ 48 ] and corrected for total cellular protein content .
# ::tok Palmitate oxidation rates were quantified using [ 9,10-3H ] - palmitic acid as described [ 48 ] and corrected for total cellular protein content .
# ::alignments 23-24|0.0 22-23|0 21-22|0.0.2 20-21|0.0.0 18-19|0.0.1 17-18|0.0.1.0 15-16|0.0.0.0 13-14|0.0.1.0.1 11-12|0.0.1.0.0.0.1 5-6|0.0.1.0.0.0 4-5|0.0.1.0.0 2-3|0.0.1.0.0.0.0 1-2|0.0.1.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:47.437
(p / protein 
      :mod-of (c / content 
            :ARG2-of (t / total-01 
                  :ARG1 48) 
            :ARG2-of (c3 / correct-01 
                  :op3-of (a / and 
                        :op1 (q / quantify-01 
                              :ARG1 (u / use-01 
                                    :ARG0 (r / rate 
                                          :mod (o / oxidation)) 
                                    :ARG1 (a2 / acid))) 
                        :op2 (d / describe-01))) 
            :mod (c2 / cell)))

# ::snt For respiration studies , cells were spun down prior to plating and resuspended in a permeabilization buffer ( described above ) containing 50 g/ml saponin .
# ::tok For respiration studies , cells were spun down prior to plating and resuspended in a permeabilization buffer ( described above ) containing 50 g/ml saponin .
# ::alignments 24-25|0.0.0.1.2.0 22-23|0.0.0.0.0 21-22|0.0.0.1.2 19-20|0.0.0.1.1.0 18-19|0.0.0.1.1 16-17|0.0.0.1 15-16|0.0.0.1.0 11-12|0 10-11|0.0.0.0 8-9|0.0.2 7-8|0.0.2.0 6-7|0.0 4-5|0.0.0 2-3|0.0.1 1-2|0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:47.894
(a2 / and 
      :op1 (s2 / spin-01 
            :ARG1 (c2 / cell 
                  :ARG0-of (p2 / plate-01 
                        :ARG1 50) 
                  :ARG0-of (b / buffer-01 
                        :ARG1 (p / permeabilization) 
                        :ARG1-of (d / describe-01 
                              :ARG2 (a / above)) 
                        :ARG2 (c / contain-01 
                              :ARG1 (s / saponin)))) 
            :ARG2 (s3 / study-01 
                  :ARG1 (r / respiration)) 
            :mod (p3 / prior 
                  :direction (d2 / down))))

# ::snt Respiration studies were performed in the presence of 5 mM succinate in the presence of 10 M rotenone .
# ::tok Respiration studies were performed in the presence of 5 mM succinate in the presence of 10 M rotenone .
# ::alignments 17-18|0.3 16-17|0.3.0.1+0.3.0.0.0+0.3.0.0+0.3.0 15-16|0.0 13-14|0.1.1 10-11|0.4.0 9-10|0.4 8-9|0.1.2 6-7|0.2 3-4|0 1-2|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.051
(p3 / perform-02 
      :ARG0 10 
      :ARG1 (s2 / study-01 
            :ARG0 (r2 / respiration) 
            :ARG1 (p / presence) 
            :ARG2 5) 
      :location (p2 / presence) 
      :location (r / rotenone 
            :mod (v / vehicle 
                  :name (n / name 
                        :op1 "M1") 
                  :wiki "M1_Abrams")) 
      :location (m / mm 
            :mod-of (s / succinate)))

# ::snt Respiration rates were expressed as nmol O2  min  1  mg of protein  1 .
# ::tok Respiration rates were expressed as nmol O2  min  1  mg of protein  1 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.052
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Evaluation of locomotor activity , sensorimotor capabilities , and muscle function .
# ::tok Evaluation of locomotor activity , sensorimotor capabilities , and muscle function .
# ::alignments 10-11|0.2 9-10|0.2.0 8-9|0 6-7|0.1 5-6|0.1.0 3-4|0.0.0 2-3|0.0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.096
(a / and 
      :op1 (e / evaluation 
            :mod (a2 / activity-06 
                  :ARG1 (l / locomotor))) 
      :op2 (c / capable-01 
            :ARG2 (s / sensorimotor)) 
      :op3 (f / function-01 
            :ARG1 (m / muscle-01)))

# ::snt To evaluate general activity levels and muscle use , mice were evaluated over a 1-h period in transparent ( 47.6 cm  25.4 cm  20.6 cm ) polystyrene enclosures as previously described [ 49 ] using a high-resolution photobeam system ( Motor Monitor , Hamilton-Kinder , Poway , California , United States ) .
# ::tok To evaluate general activity levels and muscle use , mice were evaluated over a 1-h period in transparent ( 47.6 cm  25.4 cm  20.6 cm ) polystyrene enclosures as previously described [ 49 ] using a high-resolution photobeam system ( Motor Monitor , Hamilton-Kinder , Poway , California , United States ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.099
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Each enclosure was surrounded by a frame containing a 4  8 matrix of photocell pairs , the output of which was fed to an on-line computer .
# ::tok Each enclosure was surrounded by a frame containing a 4  8 matrix of photocell pairs , the output of which was fed to an on-line computer .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.102
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The system software ( Hamilton-Kinder ) was used to define a 33 cm  11 cm central zone and a peripheral or surrounding zone that was 5.5 cm wide with the sides of the cage being the outermost boundary .
# ::tok The system software ( Hamilton-Kinder ) was used to define a 33 cm  11 cm central zone and a peripheral or surrounding zone that was 5.5 cm wide with the sides of the cage being the outermost boundary .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.105
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt This peripheral area extended along the entire perimeter of the cage .
# ::tok This peripheral area extended along the entire perimeter of the cage .
# ::alignments 10-11|0.1.0.1 7-8|0.1.0 6-7|0.1.0.0 4-5|0.1 3-4|0 2-3|0.0 1-2|0.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.168
(e2 / extend-01 
      :ARG0 (a2 / area 
            :mod (t / this) 
            :mod (p2 / peripheral)) 
      :ARG1 (a / along 
            :op1 (p / perimet 
                  :mod (e / entire) 
                  :poss (c / cage))))

# ::snt Variables that were analyzed included the total number of ambulations , as well as the number of entries , the time spent , and the distance traveled in the center area as well as the distance traveled in the periphery surrounding the center .
# ::tok Variables that were analyzed included the total number of ambulations , as well as the number of entries , the time spent , and the distance traveled in the center area as well as the distance traveled in the periphery surrounding the center .
# ::alignments 42-43|0.3.1.1 40-41|0.3.1 39-40|0.3.1.0 36-37|0.3.1.0.0 35-36|0.3.1.0.0.0 30-31|0.0 29-30|0.4 26-27|0.3 25-26|0.3.0 23-24|0 21-22|0.2 20-21|0.2.0 17-18|0.1.0 15-16|0.1.0.0 9-10|0.1.1.0.0 7-8|0.1.1.0.0.0 6-7|0.1.1.0.0.0.0 4-5|0.1 3-4|0.1.1.0 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.659
(a2 / and 
      :location (a / area) 
      :op1 (i / include-01 
            :ARG1 (e / entry 
                  :quant (n / number)) 
            :ARG2 (v / variabl 
                  :ARG1-of (a4 / analyze-01 
                        :ARG0 (a3 / ambulation 
                              :quant (n2 / number 
                                    :ARG2-of (t4 / total-01)))))) 
      :op2 (s2 / spend-01 
            :ARG0 (t3 / time)) 
      :op3 (t2 / travel-01 
            :ARG0 (d2 / distance-01) 
            :ARG1 (s / surround-01 
                  :ARG1 (p / periphery 
                        :ARG2-of (t / travel-01 
                              :ARG1 (d / distance-01))) 
                  :ARG2 (c / center))) 
      :op4 (c2 / center))

# ::snt The total number of ambulations and rearings were recorded .
# ::tok The total number of ambulations and rearings were recorded .
# ::alignments 8-9|0 6-7|0.0.1 5-6|0.0 4-5|0.0.0 2-3|0.0.0.0 1-2|0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.690
(r / record-01 
      :ARG1 (a / and 
            :op1 (a2 / ambulation 
                  :quant (n / number 
                        :ARG2-of (t / total-01))) 
            :op2 (r2 / rearing)))

# ::snt For the inverted screen test , mice were placed on a wire mesh grid ( 16 squares per 10 cm ) and the screen was inverted to 180  .
# ::tok For the inverted screen test , mice were placed on a wire mesh grid ( 16 squares per 10 cm ) and the screen was inverted to 180  .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.693
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt A maximum score of 60 s was given if an animal did not fall .
# ::tok A maximum score of 60 s was given if an animal did not fall .
# ::alignments 13-14|0.1 12-13|0.0.0 10-11|0.1.1 7-8|0 4-5|0.1.0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.746
(g / give-01 
      :ARG2 (s / score-01 
            :ARG1 - 
            :mod (m / maximum)) 
      :time (f / fall-01 
            :ARG0 60 
            :ARG1 (a / animal)))

# ::snt The tests included in the sensorimotor battery [ 50 ] and accompanying protocols were designed as follows .
# ::tok The tests included in the sensorimotor battery [ 50 ] and accompanying protocols were designed as follows .
# ::alignments 16-17|0.0 14-15|0.1 12-13|0.0.0 11-12|0.0.0.0 10-11|0 8-9|0.0.1 6-7|0.1.0.0.0 5-6|0.1.0.0.0.0 2-3|0.1.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.846
(a2 / and 
      :ARG2-of (f / follow-01 
            :ARG0 (p / protocol 
                  :ARG0-of (a / accompany-01)) 
            :ARG1 50) 
      :op1 (d / design-01 
            :ARG1 (t / test-01 
                  :ARG1-of (i / include-01 
                        :location (b / battery 
                              :mod (s / sensorimotor))))))

# ::snt ( 1 ) Inclined screen and inverted screen tests : For the inclined screen tests , each mouse was placed on top of an elevated ( 47 cm above the floor ) wire mesh grid ( 16 squares per 10 cm ) that was inclined to 60  or 90  .
# ::tok ( 1 ) Inclined screen and inverted screen tests : For the inclined screen tests , each mouse was placed on top of an elevated ( 47 cm above the floor ) wire mesh grid ( 16 squares per 10 cm ) that was inclined to 60  or 90  .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:48.851
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Each animal was placed in the middle of the screen with its head oriented down and was timed for how long it remained on the screen and how long it took to climb to the top of the screen .
# ::tok Each animal was placed in the middle of the screen with its head oriented down and was timed for how long it remained on the screen and how long it took to climb to the top of the screen .
# ::alignments 38-39|0.2.0.0.0.0 35-36|0.2.0.0.0 32-33|0.2.0.0 28-29|0.0.1 26-27|0.2.0 25-26|0.2.0.1.0 22-23|0.2.0.1 20-21|0.2.0.1.1 17-18|0.2 15-16|0 13-14|0.1 12-13|0.1.0 9-10|0.1.0.0 6-7|0.0.2 3-4|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:49.090
(a2 / and 
      :op1 (p / place-01 
            :ARG1 (a3 / animal 
                  :mod (e / each)) 
            :ARG1-of (l / long-03) 
            :ARG2 (m / middle)) 
      :op2 (o / orient-01 
            :ARG1 (h / head-01 
                  :ARG0 (s3 / screen))) 
      :op3 (t2 / time-01 
            :ARG1 (a / and 
                  :ARG1-of (c / climb-01 
                        :ARG2 (t / top 
                              :part-of (s / screen))) 
                  :op1 (r / remain-01 
                        :ARG1 (s2 / screen) 
                        :ARG1-of (l2 / long-03)))))

# ::snt For the inverted screen test , mice were placed as above and then the screen was inverted to 180  .
# ::tok For the inverted screen test , mice were placed as above and then the screen was inverted to 180  .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:49.092
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt A maximum score of 60 s was given if an animal did not fall ; ( 2 ) Platform test : Each mouse was timed for how long it remained on an elevated ( 47 cm above the floor ) circular platform ( 1.0 cm thick and 3.0 cm in diameter ) .
# ::tok A maximum score of 60 s was given if an animal did not fall ; ( 2 ) Platform test : Each mouse was timed for how long it remained on an elevated ( 47 cm above the floor ) circular platform ( 1.0 cm thick and 3.0 cm in diameter ) .
# ::alignments 50-51|0.0.1.1.0.0 46-47|0 45-46|0.1 41-42|0.0.0.1.2 40-41|0.0.2.0 38-39|0.0.0.1.1.0.0 36-37|0.0.0.1.1.0 35-36|0.0.0.1.1 34-35|0.0.0.1.1.1 32-33|0.0.1.1.0 29-30|0.0.0.1 27-28|0.0.0.1.0 24-25|0.0.0 22-23|0.0.0.0 21-22|0.0.0.0.0 19-20|0.0.2 18-19|0.0.2.1 16-17|0.0.2.2 14-15|0.0 13-14|0.0.1 12-13|0.1.0 10-11|0.0.1.0 7-8|0.0.1.1 5-6|0.0.1.1.1.0 4-5|0.0.0.1.0.0 2-3|0.0.1.1.1 1-2|0.0.1.1.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:49.902
(a / and 
      :op1 (a3 / and 
            :ARG0-of (t2 / time-01 
                  :ARG1 (m / mouse 
                        :mod (e2 / each)) 
                  :ARG2 (r / remain-01 
                        :ARG0 (l / long-03 
                              :ARG1 60) 
                        :ARG1 (c2 / cm 
                              :location (a2 / above 
                                    :op1 (f / floor)) 
                              :quant 47) 
                        :location (p / platform))) 
            :op1 (f2 / fall-01 
                  :ARG1 (a4 / animal) 
                  :time-of (g / give-01 
                        :ARG1 (e / elevate-01 
                              :ARG1 (d / diameter)) 
                        :ARG2 (s2 / score-01 
                              :ARG1 (s / s 
                                    :mod (m2 / maximum))))) 
            :op2 (t3 / test-01 
                  :ARG0 (c / circular) 
                  :ARG1 (p2 / platform) 
                  :li 2)) 
      :op2 (t / thick-03 
            :ARG1 -))

# ::snt A maximum score of 60 s was assigned if the mouse remained on the platform for the maximum amount of time or if it could climb down on a very thin pole that supported the platform , without falling ; ( 3 ) Ledge test : Each mouse was timed for how long it could maintain its balance on a 0.75-cm wide Plexiglas ledge without falling ( 60 s maximum ) .
# ::tok A maximum score of 60 s was assigned if the mouse remained on the platform for the maximum amount of time or if it could climb down on a very thin pole that supported the platform , without falling ; ( 3 ) Ledge test : Each mouse was timed for how long it could maintain its balance on a 0.75-cm wide Plexiglas ledge without falling ( 60 s maximum ) .
# ::alignments 69-70|0.2.0.0.0.0.0.0.0.0.0 67-68|0.2.0.0.0.0.3.0 65-66|0.2.0.0.0.0.3 63-64|0.2.0.0 62-63|0.2.0.0.1 61-62|0.2.0 57-58|0.2.0.0.0 55-56|0.2.0.0.0.0 54-55|0.2.0.0.0.0.2 52-53|0.2.0.0.0.0.1 49-50|0.2.0.0.0.0.0.0 47-48|0.2.0.0.0.0.0 46-47|0.2.0.0.0.0.0.1 44-45|0.2.0.0.0.0.0.0.0.0 43-44|0.2.0.0.0.0.0.0.0.0.1 41-42|0.2.0.0.0.0.0.0.0.0.2 39-40|0.2.0.0.0.0.0.0.0 38-39|0.2 35-36|0.1 33-34|0 31-32|0.0 30-31|0.0.1 29-30|0.0.1.0 25-26|0.0.0 24-25|0.0.0.1 21-22|0.0.0.1.0 20-21|0.0.0.1.0.0.2.0 18-19|0.0.0.1.0.0.2 17-18|0.0.0.1.0.0.2.0.0 14-15|0.0.0.1.0.0.1 11-12|0.0.0.1.0.0 10-11|0.0.0.1.0.0.0 7-8|0.0.0.1.0.0.3 5-6|0.0.0.1.0.0.3.0.0 4-5|0.0.0.0 2-3|0.0.0.1.0.0.3.0 1-2|0.0.0.1.0.0.3.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:52.713
(s / support-01 
      :ARG0 (p4 / pole 
            :ARG1-of (c / climb-01 
                  :ARG0 60 
                  :ARG1-of (p5 / possible-01 
                        :op2-of (o / or 
                              :op1 (r / remain-01 
                                    :ARG1 (m5 / mouse) 
                                    :location (p6 / platform) 
                                    :purpose (a2 / amount 
                                          :quant-of (t4 / time 
                                                :mod (m4 / maximum))) 
                                    :time-of (a3 / assign-01 
                                          :ARG1 (s3 / score-01 
                                                :ARG1 (s2 / s 
                                                      :mod (m6 / maximum)))))))) 
            :ARG1-of (t3 / thin-03 
                  :degree (v / very))) 
      :ARG1 (p3 / platform) 
      :ARG2 (f2 / fall-01 
            :ARG1 (w / wide-02 
                  :ARG1 (l / ledge 
                        :ARG1-of (b / balance-01 
                              :ARG1-of (m2 / maintain-01 
                                    :ARG0 (m3 / mouse 
                                          :ARG1-of (t / time-01 
                                                :ARG0 (a / and 
                                                      :op1 (t2 / test-01 
                                                            :ARG0 (m / maximum) 
                                                            :ARG1 (l3 / ledge) 
                                                            :li 3))) 
                                          :mod (e / each)) 
                                    :ARG1-of (l2 / long-03) 
                                    :ARG1-of (p2 / possible-01) 
                                    :ARG2 (f / fall-01 
                                          :ARG1 60))) 
                        :mod (p / plexigla)))))

# ::snt A score of 60 s was also assigned if the mouse traversed the entire length ( 51 cm ) of the Plexiglas ledge and returned to the starting place in less than 60 s without falling ; ( 4 ) Walking initiation test : Each mouse was placed in the middle of a square outlined by white cloth tape ( 21 cm  21 cm ) on a smooth black surface of a large tabletop .
# ::tok A score of 60 s was also assigned if the mouse traversed the entire length ( 51 cm ) of the Plexiglas ledge and returned to the starting place in less than 60 s without falling ; ( 4 ) Walking initiation test : Each mouse was placed in the middle of a square outlined by white cloth tape ( 21 cm  21 cm ) on a smooth black surface of a large tabletop .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:52.722
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The time it took each mouse to leave the square ( place all four paws outside of the tape ) was recorded .
# ::tok The time it took each mouse to leave the square ( place all four paws outside of the tape ) was recorded .
# ::alignments 21-22|0.1.0.0 18-19|0 15-16|0.1 14-15|0.1.0 13-14|0.1.0.0.0 12-13|0.2 11-12|0.0 9-10|0.1.0.0.1.0.0.0 7-8|0.1.0.0.1.0.0 5-6|0.1.0.0.1.0 4-5|0.1.0.0.1.0.1 1-2|0.1.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:52.873
(t / tape 
      :ARG1-of (p2 / place-01) 
      :op1-of (o / outside 
            :ARG1-of (p / paw-01 
                  :ARG2-of (r / record-01 
                        :ARG0 4 
                        :ARG1 (t2 / time 
                              :frequency-of (m / mouse 
                                    :ARG0-of (l / leave-11 
                                          :ARG1 (s / square)) 
                                    :mod (e / each)))))) 
      :quant (a / all))

# ::snt The maximum time allowed was 60 s. 6 -- 8-mo-old PGC-1 + / + ( n = 4 ) and PGC-1  /  ( n = 8 ) mice were run to exhaustion employing a motorized , speed controlled , modular treadmill system ( Columbus Instruments ) .
# ::tok The maximum time allowed was 60 s. 6 -- 8-mo-old PGC-1 + / + ( n = 4 ) and PGC-1  /  ( n = 8 ) mice were run to exhaustion employing a motorized , speed controlled , modular treadmill system ( Columbus Instruments ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:52.875
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The treadmill was equipped with an electric shock stimulus and an adjustable inclination angle .
# ::tok The treadmill was equipped with an electric shock stimulus and an adjustable inclination angle .
# ::alignments 13-14|0.2.0 12-13|0.2.0.0 11-12|0.2.0.1 9-10|0.2 8-9|0.0 7-8|0.0.0 6-7|0.0.1 3-4|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:53.002
(e2 / equip-01 
      :ARG0 (s / stimulus 
            :ARG1-of (s2 / shock-01) 
            :mod (e / electric)) 
      :ARG1 (t / treadmill) 
      :ARG2 (a3 / and 
            :op1 (a / angle 
                  :mod (i / inclination) 
                  :mod (a2 / adjustable))))

# ::snt Running velocity was set at 35 m/min , with a level inclination angle .
# ::tok Running velocity was set at 35 m/min , with a level inclination angle .
# ::alignments 12-13|0.0.0.0 11-12|0.0.0 10-11|0.0.0.0.0 5-6|0.0.0.0.1 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:53.038
(v / velocity 
      :ARG1-of (r / run-01 
            :ARG0 (i / inclination 
                  :mod-of (a / angle 
                        :mod (l / level) 
                        :mod 35))))

# ::snt VO2max was determined while the mice were running on a treadmill using an open flow system ( Columbus Instruments Oxymax System ) .
# ::tok VO2max was determined while the mice were running on a treadmill using an open flow system ( Columbus Instruments Oxymax System ) .
# ::alignments 19-21|0.1.0.0.0.1+0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 17-19|0.1.0.1.1+0.1.0.1.0+0.1.0.1+0.1.0 15-16|0.1.2.0.0 14-15|0.1.2.0.0.0 13-14|0.1.2.0.0.1 11-12|0.1.2.0 10-11|0.1.2 7-8|0.1 5-6|0.1.1 2-3|0 0-1|0.0.0.0+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:53.385
(d / determined-02 
      :ARG0 (o2 / organization 
            :name (n3 / name 
                  :op1 "VO2max")) 
      :ARG1 (r / run-01 
            :ARG0 (c / country 
                  :mod-of (t / thing 
                        :name (n / name 
                              :op1 "Oxymax" 
                              :op2 "System")) 
                  :name (n2 / name 
                        :op1 "Columbus" 
                        :op2 "Instruments")) 
            :ARG1 (m / mouse) 
            :ARG2 (t2 / treadmill 
                  :ARG0-of (u / use-01 
                        :ARG1 (s / system 
                              :ARG0-of (f / flow-01) 
                              :ARG1-of (o / open-04))))))

# ::snt All measurements of oxygen consumption took place at an elevation of 150 m ( ambient PBAR = 745 torr ) .
# ::tok All measurements of oxygen consumption took place at an elevation of 150 m ( ambient PBAR = 745 torr ) .
# ::alignments 18-19|0.0.1.0 14-15|0 12-13|0.0.2 11-12|0.0.2.0 9-10|0.0.0.0 6-7|0.0.0.0.0 4-5|0.0 3-4|0.0.0 1-2|0.0.1 0-1|0.0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:53.528
(a / ambient 
      :ARG1-of (c / consume-01 
            :ARG0 (o / oxygen 
                  :mod (e / elevation 
                        :location-of (p / place))) 
            :ARG1-of (m2 / measure-01 
                  :ARG2 (t / torr) 
                  :mod (a2 / all)) 
            :ARG2 (m / m 
                  :quant 150)))

# ::snt Animals were placed into the metabolic chamber for 3 -- 5 min to allow the system to equilibrate .
# ::tok Animals were placed into the metabolic chamber for 3 -- 5 min to allow the system to equilibrate .
# ::alignments 17-18|0 15-16|0.0 13-14|0.0.0 11-12|0.0.0.1 10-11|0.1 8-9|0.0.0.0 6-7|0.0.0.1.0.1 5-6|0.0.0.1.0.1.0 2-3|0.0.0.1.0 0-1|0.0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:53.849
(e / equilibrate-01 
      :ARG0 (s / system 
            :ARG1-of (a / allow-01 
                  :ARG0 3 
                  :ARG3-of (m / min 
                        :ARG0-of (p / place-01 
                              :ARG1 (a2 / animal) 
                              :ARG2 (c / chamber 
                                    :mod (m2 / metabolic)))))) 
      :ARG2 5)

# ::snt Mice were then induced to run up an 18  incline at a speed of 40 m/min using a shock grid in the rear of the chamber .
# ::tok Mice were then induced to run up an 18  incline at a speed of 40 m/min using a shock grid in the rear of the chamber .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:53.850
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The speed was increased by 5 m/min every 2 min until the animals were unable to continue .
# ::tok The speed was increased by 5 m/min every 2 min until the animals were unable to continue .
# ::alignments 16-17|0.2 12-13|0.2.0 10-11|0.0.0 9-10|0.0 8-9|0.3.0 7-8|0.3 5-6|0.2.1 3-4|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:54.191
(i / increase-01 
      :ARG0 (m / min 
            :time (u / until)) 
      :ARG1 (s / speed) 
      :ARG1-of (c / continue-01 
            :ARG0 (a / animal) 
            :ARG2 5) 
      :ARG2 (e / every 
            :mod-of 2))

# ::snt Maximal effort was determined when oxygen uptake did not increase with power output and subsequently the mouse failed to maintain effort .
# ::tok Maximal effort was determined when oxygen uptake did not increase with power output and subsequently the mouse failed to maintain effort .
# ::alignments 20-21|0.1.2.0.1.0 19-20|0.1.2.0.1 17-18|0.1.2.0 16-17|0.1.2.0.0 14-15|0.1.2.0.2 13-14|0.1.2 12-13|0.1.1 11-12|0.1.1.0 9-10|0.1 8-9|0.1.3 6-7|0.1.0 5-6|0.1.0.0 3-4|0 1-2|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:54.369
(d / determined-02 
      :ARG1 (e2 / effort 
            :mod (m3 / maximal)) 
      :time (i / increase-01 
            :ARG0 (u / uptake 
                  :mod (o2 / oxygen)) 
            :ARG1 (o / output 
                  :mod (p / power)) 
            :op1-of (a / and 
                  :op2 (f / fail-01 
                        :ARG1 (m2 / mouse) 
                        :ARG2 (m / maintain-01 
                              :ARG1 (e / effort)) 
                        :time (s / subsequent))) 
            :polarity -))

# ::snt VO2max was calculated using the averaged values over 1 min during which the animal 's O2 consumption reached a plateau .
# ::tok VO2max was calculated using the averaged values over 1 min during which the animal 's O2 consumption reached a plateau .
# ::alignments 19-20|0 17-18|0.0 16-17|0.0.0 15-16|0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 13-14|0.0.0.2.0.0.0.0.0 9-10|0.0.0.2.0.0.1 8-9|0.0.0.0 6-7|0.0.0.2.0 5-6|0.0.0.2 3-4|0.0.0.2.0.0 2-3|0.0.0.2.0.0.0.0 0-1|0.0.0.2.0.0.0.1.0+0.0.0.2.0.0.0.1+0.0.0.2.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:54.885
(p / plateau 
      :ARG1-of (r / reach-01 
            :ARG0 (c / consume-01 
                  :ARG0 1 
                  :ARG1 (t / thing 
                        :name (n / name 
                              :op1 "O2")) 
                  :ARG1-of (a2 / average-01 
                        :mod-of (v / value 
                              :ARG1-of (u / use-01 
                                    :ARG0 (o / organization 
                                          :ARG1-of (c2 / calculate-01 
                                                :ARG0 (a / animal)) 
                                          :name (n2 / name 
                                                :op1 "VO2max")) 
                                    :ARG2 (m / min)))))))

# ::snt Isolated muscle stimulation studies .
# ::tok Isolated muscle stimulation studies .
# ::alignments 3-4|0 2-3|0.0 1-2|0.0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:54.927
(s / study-01 
      :ARG1 (s2 / stimulation 
            :ARG1-of (m / muscle-01)) 
      :ARG1-of (i / isolate-01))

# ::snt Animals were anesthetized with ketamine/xylazine and the soleus muscle was removed from one leg .
# ::tok Animals were anesthetized with ketamine/xylazine and the soleus muscle was removed from one leg .
# ::alignments 13-14|0.0.2 10-11|0.0 8-9|0.0.1 7-8|0.0.1.0 5-6|0 2-3|0.0.0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:54.971
(a / and 
      :op1 (r / remove-01 
            :ARG0 (a3 / animal 
                  :ARG1-of (a2 / anesthetize-01)) 
            :ARG1 (m / muscle-01 
                  :ARG1 (s / soleu)) 
            :ARG2 (l / leg)))

# ::snt Upon removal , the muscle was suspended in a Krebs solution aerated with 95 % O2 and 5 % CO2 .
# ::tok Upon removal , the muscle was suspended in a Krebs solution aerated with 95 % O2 and 5 % CO2 .
# ::alignments 19-20|0.1.1.1 18-19|0.0.1 17-18|0.1.0 16-17|0.1.1 15-16|0.1.1.0.0.0+0.1.1.0.0+0.1.1.0 14-15|0.0.0 13-14|0.0.0.0 10-11|0.2 9-10|0.2.0.0.0+0.2.0.0+0.2.0 6-7|0 4-5|0.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:55.148
(s2 / suspend-01 
      :ARG1 (m / muscle-01 
            :ARG1 (p2 / percentage-entity 
                  :value 95) 
            :poss-of (p / percentage-entity)) 
      :ARG1-of (r / remove-01 
            :ARG0 5 
            :op1-of (a / and 
                  :op2 (t / thing 
                        :name (n / name 
                              :op1 "O2")) 
                  :op3 (c / co2))) 
      :ARG2 (s / solution 
            :poss (p3 / person 
                  :name (n2 / name 
                        :op1 "Krebs"))))

# ::snt The muscle and Krebs solution were suspended within a water bath maintained at 37 C , and the muscle was anchored to a Grass ( West Warwick , Rhode Island , United States ) isometric force transducer ( model FTO3C ) .
# ::tok The muscle and Krebs solution were suspended within a water bath maintained at 37 C , and the muscle was anchored to a Grass ( West Warwick , Rhode Island , United States ) isometric force transducer ( model FTO3C ) .
# ::alignments 38-39|0.2.0 36-37|0.3.1.1.0.0 35-36|0.3.1.1.0.0.0 34-35|0.3.1.1.0 31-33|0.2.1.0.1+0.2.1.0.0.1+0.2.1.0.0.0+0.2.1.0.0+0.2.1.0 28-30|0.0.0.1+0.0.0.0+0.0.0+0.0 25-27|0.3.0.0.0.1+0.3.0.0.0.0+0.3.0.0.0+0.3.0.0 23-24|0.3.1.2.0.0+0.3.1.2.0+0.3.1.2 20-21|0.3.1 18-19|0.3.1.1 16-17|0.3 14-15|0.1.0.0 13-14|0.1.0.0.0 11-12|0.2.1 10-11|0.2 9-10|0.2.2 6-7|0 4-5|0.3.1.0 3-4|0.3.0.1.0+0.3.0.1+0.3.0 2-3|0.1 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:56.338
(s / suspend-01 
      :ARG0 (c2 / country 
            :name (n2 / name 
                  :op1 "Rhode" 
                  :op2 "Island")) 
      :ARG1 (a3 / and 
            :op1 (m4 / muscle-01 
                  :ARG1 (c5 / C 
                        :era-of 37))) 
      :ARG1-of (b / bathe-01 
            :ARG0 (m / model) 
            :ARG1-of (m3 / maintain-01 
                  :ARG0 (c / country 
                        :name (n / name 
                              :op1 "United" 
                              :op2 "States") 
                        :wiki "United_States")) 
            :ARG2 (w / water)) 
      :op2-of (a2 / and 
            :op1 (p / person 
                  :mod (c3 / country 
                        :name (n3 / name 
                              :op1 "West" 
                              :op2 "Warwick")) 
                  :name (n5 / name 
                        :op1 "Krebs")) 
            :op3 (a / anchor-01 
                  :ARG0 (s2 / solution) 
                  :ARG1 (m2 / muscle-01 
                        :ARG1 (i / isometric 
                              :mod-of (t / transduc 
                                    :mod (f / force)))) 
                  :ARG2 (c4 / country 
                        :name (n4 / name 
                              :op1 "Grass")))))

# ::snt Muscles were stimulated to contract with a Grass stimulator ( model S88 ) generating a field stimulus through electrodes located at both ends of the muscle .
# ::tok Muscles were stimulated to contract with a Grass stimulator ( model S88 ) generating a field stimulus through electrodes located at both ends of the muscle .
# ::alignments 25-26|0.1.0.0.0.1.0.0.0 22-23|0.1.0.0.0.1.0.0 21-22|0.1.0.0.0.1.0.0.1 19-20|0.1.0.0.0.1.0 18-19|0.1.0.0.0.1 16-17|0.1.0.0.0.0 15-16|0.1.0.0.0.0.0 13-14|0.1.0.0.0 11-12|0.0.0 10-11|0.0.0.0 8-9|0.1.0.0 7-8|0.1.0.1.0+0.1.0.1+0.1.0 4-5|0.1 2-3|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:57.004
(s4 / stimulate-01 
      :ARG1 (m3 / muscle-01 
            :ARG1 (s2 / S88 
                  :mod (m2 / model))) 
      :ARG2 (c2 / contract-02 
            :ARG2 (c / country 
                  :mod-of (s3 / stimulator 
                        :ARG0-of (g / generate-01 
                              :ARG1 (s / stimulus 
                                    :mod (f / field)) 
                              :ARG2 (e2 / electrod 
                                    :ARG1-of (l / locate-01 
                                          :time (e / end-01 
                                                :ARG1 (m / muscle-01) 
                                                :mod (b / both)))))) 
                  :name (n / name 
                        :op1 "Grass"))))

# ::snt Force-voltage ( maximal force at about 100 V ) and length-tension relationships were determined using single twitch stimuli .
# ::tok Force-voltage ( maximal force at about 100 V ) and length-tension relationships were determined using single twitch stimuli .
# ::alignments 17-18|0.1.0.1 16-17|0.1.0.1.0 15-16|0.1.0.1.1 14-15|0.1.0 13-14|0.1 11-12|0.1.0.0 9-10|0 7-8|0.0.0 6-7|0.1.0.0.0 5-6|0.1.0.1.0.0 3-4|0.0 2-3|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:57.150
(a / and 
      :op1 (f / force 
            :consist-of (v / v) 
            :mod (m / maximum)) 
      :op2 (d / determined-02 
            :ARG1 (u / use-01 
                  :ARG0 (r / relation-03 
                        :ARG1 100) 
                  :ARG1 (s / stimulus 
                        :ARG1-of (t / twitch-01 
                              :ARG0 (a2 / about)) 
                        :ARG1-of (s2 / single-02)))))

# ::snt The stimulator then delivered repeating trains of stimuli at one per second at 40 Hz for 2 min .
# ::tok The stimulator then delivered repeating trains of stimuli at one per second at 40 Hz for 2 min .
# ::alignments 17-18|0.0.0.0.0.0 16-17|0.0.0.0.0 14-15|0.0.2 13-14|0.0.0.0.1 7-8|0.0.0.1 5-6|0.0.0 4-5|0.0.0.0 3-4|0.0 2-3|0.0.1 1-2|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:57.225
(s2 / stimulator 
      :ARG0-of (d / deliver-01 
            :ARG1 (t / train 
                  :mod (r / repeat-01 
                        :ARG0 (2 / 2 
                              :quant-of (m / min)) 
                        :time 40) 
                  :mod (s / stimulus)) 
            :time (t2 / then) 
            :time (h / hz)))

# ::snt Each train lasted 330 ms , and were digitally recorded using MacLab ( AD Instruments , Colorado Springs , Colorado , United States ) .
# ::tok Each train lasted 330 ms , and were digitally recorded using MacLab ( AD Instruments , Colorado Springs , Colorado , United States ) .
# ::alignments 21-23|0.4.1+0.4.0.1+0.4.0.0+0.4.0+0.4 16-18|0.3.0.1+0.3.0.0+0.3.0+0.3 13-15|0.2.0.1+0.2.0.0+0.2.0+0.2 11-12|0.1.0.0.0.0+0.1.0.0.0+0.1.0.0 10-11|0.1.0 9-10|0.1 8-9|0.1.1 6-7|0 4-5|0.0.1 2-3|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:57.812
(a / and 
      :op1 (l / last-01 
            :ARG0 (t2 / train 
                  :mod (e / each)) 
            :ARG1 (m / m)) 
      :op2 (r / record-01 
            :ARG1 (u / use-01 
                  :ARG1 (t / thing 
                        :name (n4 / name 
                              :op1 "MacLab"))) 
            :manner (d / digitally)) 
      :op3 (c3 / country 
            :name (n3 / name 
                  :op1 "AD" 
                  :op2 "Instruments")) 
      :op4 (c2 / country 
            :name (n2 / name 
                  :op1 "Colorado" 
                  :op2 "Springs")) 
      :op5 (c / country 
            :name (n / name 
                  :op1 "United" 
                  :op2 "States") 
            :wiki "United_States"))

# ::snt Fatigue resistance was calculated as the ratio of the force generated by the last tetanus divided by the highest force generated multiplied by 100 to give the percent of force generation that remained after the fatigue protocol .
# ::tok Fatigue resistance was calculated as the ratio of the force generated by the last tetanus divided by the highest force generated multiplied by 100 to give the percent of force generation that remained after the fatigue protocol .
# ::alignments 36-37|0.1.0.0.2.0.0.0.0 35-36|0.1.0.0.0 33-34|0.1.0.0.2.0.0.0 32-33|0.1.0.0.2.0.0 30-31|0.1.0.0.2.0.1 29-30|0.1.0.0.2.0.1.0 27-28|0.1.0.0.2.0 25-26|0.1.0.0.2 23-24|0.1.0.0.1.1.0.0 21-22|0.1.0.0 20-21|0.1.0.0.1 19-20|0.1.0 18-19|0.1.0.1.0+0.1.0.1 15-16|0.1 14-15|0 13-14|0.2 10-11|0.0 9-10|0.0.0 6-7|0.1.0.0.1.0 3-4|0.1.0.0.1.1 1-2|0.1.0.0.1.1.0 0-1|0.1.0.0.1.1.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:58.956
(t / tetanu 
      :ARG0-of (g4 / generate-01 
            :ARG1 (f4 / force)) 
      :ARG1-of (d / divide-02 
            :ARG2 (f3 / force 
                  :ARG1-of (m / multiply-01 
                        :ARG0 (f / fatigue) 
                        :ARG1-of (g3 / generate-01 
                              :ARG0 (r2 / ratio) 
                              :purpose-of (c / calculate-01 
                                    :ARG1 (r3 / resist-01 
                                          :ARG1 100 
                                          :ARG1-of (f5 / fatigue-01)))) 
                        :purpose (g2 / give-01 
                              :ARG1 (p2 / percentage-entity 
                                    :ARG1-of (r / remain-01 
                                          :time (a / after 
                                                :op1 (p / protocol))) 
                                    :quant-of (g / generation 
                                          :mod (f2 / force))))) 
                  :ARG1-of (h / high-02 
                        :degree (m2 / most)))) 
      :mod (l / last))

# ::snt Adult female mice ( 6 -- 8 mo old ) were exercised on the motorized treadmill using the run-to-exhaustion settings described above for 60 s or until exhaustion , whichever came first .
# ::tok Adult female mice ( 6 -- 8 mo old ) were exercised on the motorized treadmill using the run-to-exhaustion settings described above for 60 s or until exhaustion , whichever came first .
# ::alignments 30-31|0.0 29-30|0 27-28|0.0.0.1.0 26-27|0.0.0.1 25-26|0.0.0 23-24|0.0.0.0.0.0.0.2 21-22|0.0.0.0.0.0.0.1 20-21|0.0.0.0.0.0.0 19-20|0.0.0.0.0.0 16-17|0.0.0.0.0 15-16|0.0.0.0 14-15|0.0.0.0.1 11-12|0.0.0.0.0.1 8-9|0.0.1 7-8|0.0.0.0.0.0.0.0.0 6-7|0.0.0.0.0.0.0.0 4-5|0.0.0.0.0.1.0 2-3|0.0.0.0.0.1.1 1-2|0.0.0.0.0.1.1.0 0-1|0.0.0.0.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:59.413
(w / whichev 
      :ARG1-of (c / come-01 
            :ARG0 (o / or 
                  :op1 (t / treadmill 
                        :ARG0-of (u2 / use-01 
                              :ARG1 (s / setting 
                                    :ARG1-of (d / describe-01 
                                          :ARG0 (8 / 8 
                                                :quant-of (m2 / mo)) 
                                          :mod (a / above) 
                                          :time 60)) 
                              :manner-of (e2 / exercise-01 
                                    :ARG0 6 
                                    :ARG1 (m3 / mouse 
                                          :mod (f / female) 
                                          :mod (a2 / adult)))) 
                        :ARG1-of (m / motorize-01)) 
                  :op2 (u / until 
                        :op1 (e / exhaustion))) 
            :ARG2 (o2 / old)))

# ::snt Immediately following its treadmill run , the mouse was subjected to serial echocardiography using an Acuson Sequoia Echocardiography System performed as previously described [ 51 ] .
# ::tok Immediately following its treadmill run , the mouse was subjected to serial echocardiography using an Acuson Sequoia Echocardiography System performed as previously described [ 51 ] .
# ::alignments 24-25|0.1.0.0 22-23|0.2.0.0.0.0 21-22|0.2.0.0.0.0.1 19-20|0.2.0.0.0 15-19|0.2.0.0.1.3+0.2.0.0.1.2+0.2.0.0.1.1+0.2.0.0.1.0+0.2.0.0.1+0.2.0.0 13-14|0.2.0 12-13|0.2 11-12|0.2.1 9-10|0 7-8|0.0 4-5|0.1.0 3-4|0.2.0.0.0.0.0 1-2|0.1 0-1|0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:59.662
(s2 / subject-01 
      :ARG1 (m / mouse) 
      :ARG1-of (f / follow-01 
            :ARG2 (r / run-13 
                  :ARG1 51) 
            :manner (i / immediately)) 
      :ARG2 (e / echocardiography 
            :ARG0-of (u / use-01 
                  :ARG1 (o / organization 
                        :ARG1-of (p2 / perform-02 
                              :time (d / describe-01 
                                    :ARG1 (t / treadmill) 
                                    :time (p / previous))) 
                        :name (n / name 
                              :op1 "Acuson" 
                              :op2 "Sequoia" 
                              :op3 "Echocardiography" 
                              :op4 "System"))) 
            :mod (s / serial)))

# ::snt In vivo cardiac hemodynamic studies .
# ::tok In vivo cardiac hemodynamic studies .
# ::alignments 4-5|0.0 3-4|0.0.0 2-3|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:59.671
(c / cardiac 
      :mod-of (s / study-01 
            :ARG1 (h / hemodynamic)))

# ::snt Hemodynamic studies were performed as previously described with some modifications [ 52 ] .
# ::tok Hemodynamic studies were performed as previously described with some modifications [ 52 ] .
# ::alignments 11-12|0.0.0.0.0 9-10|0 8-9|0.1 6-7|0.0 5-6|0.0.1 3-4|0.0.0.0 1-2|0.0.0 0-1|0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:59.739
(m / modify-01 
      :ARG2-of (d / describe-01 
            :ARG1 (s2 / study-01 
                  :ARG1-of (p2 / perform-02 
                        :ARG0 52) 
                  :mod (h / hemodynamic)) 
            :time (p / previous)) 
      :mod (s / some))

# ::snt In brief , adult mice ( 10 -- 12 wk ) were anesthetized intraperitoneally ( IP ) with thiopental sodium ( 60 mg/kg ) .
# ::tok In brief , adult mice ( 10 -- 12 wk ) were anesthetized intraperitoneally ( IP ) with thiopental sodium ( 60 mg/kg ) .
# ::alignments 21-22|0.0.2 19-20|0.0.2.0.0.0 18-19|0.0.2.0.0 15-16|0.0.1.0 13-14|0 12-13|0.0 8-9|0.0.1 6-7|0.0.0 4-5|0.1 3-4|0.1.0 1-2|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:57:59.956
(i2 / intraperitoneally 
      :ARG1-of (a / anesthetize-01 
            :ARG0 10 
            :ARG2 (1 / 12 
                  :mod (i / IP)) 
            :op1-of (6 / 60 
                  :poss (b / brief 
                        :poss (t / thiopental 
                              :mod-of (s / sodium))))) 
      :domain (m / mouse 
            :mod (a2 / adult)))

# ::snt The mice were intubated and ventilated with a Harvard ventilator .
# ::tok The mice were intubated and ventilated with a Harvard ventilator .
# ::alignments 9-10|0.1.1 8-9|0.0.1+0.0.0.0+0.0.0+0.0 5-6|0.1 4-5|0 3-4|0.1.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:00.018
(a / and 
      :manner (u / university 
            :name (n / name 
                  :op1 "Harvard") 
            :wiki "Harvard_University") 
      :op1 (v2 / ventilate-01 
            :ARG0 (m / mouse 
                  :domain-of (i / intubate)) 
            :ARG1 (v / ventilator)))

# ::snt The right carotid artery was isolated in the region of the trachea and cannulated with a 1.4-French high-fidelity micromanometer catheter ( Millar Instruments , Houston , Texas , United States ) , which was inserted into the left ventricle retrograde across the aortic valve .
# ::tok The right carotid artery was isolated in the region of the trachea and cannulated with a 1.4-French high-fidelity micromanometer catheter ( Millar Instruments , Houston , Texas , United States ) , which was inserted into the left ventricle retrograde across the aortic valve .
# ::alignments 43-44|0.0.0.0.0.3.0 42-43|0.0.0.0.0.3.0.0 40-41|0.0.0.0.0.3 39-40|0.0.0.0.0 38-39|0.0.0.0.0.1 37-38|0.0.0.0.0.1.0 34-35|0.0.0.0 28-30|0.1.1+0.1.0.1+0.1.0.0+0.1.0+0.1 26-27|0.0.2.1+0.0.2.0.0+0.0.2.0+0.0.2 24-25|0.0.0.0.0.2.1+0.0.0.0.0.2.0.0+0.0.0.0.0.2.0+0.0.0.0.0.2 21-23|0.0.0.0.0.0.0.1+0.0.0.0.0.0.0.0+0.0.0.0.0.0.0+0.0.0.0.0.0 19-20|0.0.0 18-19|0.0.0.1 17-18|0.0.0.1.0 12-13|0 11-12|0.0.3.0 8-9|0.0.3 5-6|0.0 3-4|0.0.1 2-3|0.0.1.0 1-2|0.0.1.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:00.960
(a3 / and 
      :op1 (i2 / isolate-01 
            :ARG0 (c4 / cathet 
                  :ARG1-of (i / insert-01 
                        :ARG2 (r / retrograde-01 
                              :ARG0 (c3 / country 
                                    :name (n4 / name 
                                          :op1 "Millar" 
                                          :op2 "Instruments")) 
                              :ARG1 (v2 / ventricle 
                                    :mod (l / left)) 
                              :ARG2 (c2 / city 
                                    :name (n3 / name 
                                          :op1 "Houston") 
                                    :wiki "Houston") 
                              :location (a2 / across 
                                    :op1 (v / valve 
                                          :mod (a / aortic))))) 
                  :mod (m / micromanomet 
                        :mod (h / high-fidelity))) 
            :ARG1 (a4 / artery 
                  :mod (c5 / carotid 
                        :mod (r3 / right))) 
            :ARG2 (s / state 
                  :name (n2 / name 
                        :op1 "Texas") 
                  :wiki "Texas") 
            :location (r2 / region 
                  :mod (t / trachea))) 
      :op2 (c / country 
            :name (n / name 
                  :op1 "United" 
                  :op2 "States") 
            :wiki "United_States"))

# ::snt Hemodynamic measurements were recorded at baseline and 3 min following continuous infusion of incremental doses of dobutamine ( 1 , 2 , and 1-adrenergic agonist ) up to 32 ng  gBW  1  min  1 [ 53 ] .
# ::tok Hemodynamic measurements were recorded at baseline and 3 min following continuous infusion of incremental doses of dobutamine ( 1 , 2 , and 1-adrenergic agonist ) up to 32 ng  gBW  1  min  1 [ 53 ] .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:00.964
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Continuous pressure-volume data were acquired and digitized with the BioBench computer software data acquisition system ( National Instruments , Austin , Texas , United States ) .
# ::tok Continuous pressure-volume data were acquired and digitized with the BioBench computer software data acquisition system ( National Instruments , Austin , Texas , United States ) .
# ::alignments 23-25|0.3.1+0.3.0.1+0.3.0.0+0.3.0+0.3 21-22|0.2.1+0.2.0.0+0.2.0+0.2 19-20|0.0.1+0.0.0.0+0.0.0+0.0 16-18|0.1.0.0.1+0.1.0.0.0+0.1.0.0+0.1.0 14-15|0.1.2 13-14|0.1.2.0 12-13|0.1.2.0.0.2 11-12|0.1.2.0.0 10-11|0.1.2.0.0.0 9-10|0.1.2.0.0.1.0.0+0.1.2.0.0.1.0+0.1.2.0.0.1 5-6|0 4-5|0.1 2-3|0.1.1 0-1|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:01.666
(a2 / and 
      :location (c2 / city 
            :name (n3 / name 
                  :op1 "Austin") 
            :wiki "Austin,_Texas") 
      :op1 (a3 / acquire-01 
            :ARG0 (o / organization 
                  :name (n4 / name 
                        :op1 "National" 
                        :op2 "Instruments")) 
            :ARG1 (d2 / data 
                  :mod (c5 / continuou)) 
            :ARG2 (s2 / system 
                  :instrument-of (a / acquire-01 
                        :ARG1 (s3 / software 
                              :mod (c3 / computer) 
                              :mod (c4 / country 
                                    :name (n5 / name 
                                          :op1 "BioBench")) 
                              :mod-of (d / data))))) 
      :op2 (s / state 
            :name (n2 / name 
                  :op1 "Texas") 
            :wiki "Texas") 
      :op3 (c / country 
            :name (n / name 
                  :op1 "United" 
                  :op2 "States") 
            :wiki "United_States"))

# ::snt Isolated working mouse heart perfusion .
# ::tok Isolated working mouse heart perfusion .
# ::alignments 4-5|0 3-4|0.2 2-3|0.0.0 1-2|0.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:01.686
(p / perfusion 
      :ARG0-of (w / work-01 
            :ARG1 (m / mouse)) 
      :ARG1-of (i / isolate-01) 
      :mod (h / heart))

# ::snt Isolated working mouse heart perfusion was based on a previously described procedure [ 54 ] .
# ::tok Isolated working mouse heart perfusion was based on a previously described procedure [ 54 ] .
# ::alignments 13-14|0.0.1.0 11-12|0.0.0.0.0.0 10-11|0.0.0.0.0 9-10|0.0.0.0.0.1 6-7|0 4-5|0.0 3-4|0.0.2 2-3|0.0.0.0 1-2|0.0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:01.898
(b / base-02 
      :ARG1 (p3 / perfusion 
            :ARG0-of (w / work-01 
                  :ARG1 (m / mouse 
                        :ARG0-of (d / describe-01 
                              :ARG1 (p / procedure) 
                              :time (p2 / previous)))) 
            :ARG1-of (i / isolate-01 
                  :ARG0 54) 
            :mod (h / heart)))

# ::snt Adult mice ( 4 -- 7 mo old ) were heparinized ( 100 units IP ) 10 min prior to anesthesia .
# ::tok Adult mice ( 4 -- 7 mo old ) were heparinized ( 100 units IP ) 10 min prior to anesthesia .
# ::alignments 20-21|0.0 18-19|0.0.0 17-18|0.0.1.0 16-17|0.0.1.0.0 14-15|0.0.1.0.0.0.0.0 13-14|0.0.1.0.0.0.1.0 12-13|0.0.1.0.0.0.1 7-8|0.0.2 6-7|0 5-6|0.0.1.0.0.1 3-4|0.0.1 1-2|0.0.1.0.0.0.0 0-1|0.0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:02.045
(m2 / mo 
      :mod (a / anesthesia 
            :mod (p / prior) 
            :poss-of (4 / 4 
                  :mod (m / min 
                        :quant (1 / 10 
                              :mod (a2 / adult 
                                    :mod-of (m3 / mouse 
                                          :domain-of (i / IP)) 
                                    :poss (12 / 100 
                                          :quant-of (u / unit))) 
                              :poss-of 7))) 
            :poss-of (o / old)))

# ::snt Animals were then deeply anesthetized with 5 -- 10 mg of sodium pentobarbital IP .
# ::tok Animals were then deeply anesthetized with 5 -- 10 mg of sodium pentobarbital IP .
# ::alignments 13-14|0.0.1 12-13|0.0 11-12|0 9-10|0.0.1.0 8-9|0.0.0.1.0 6-7|0.0.0.2 4-5|0.0.0 3-4|0.0.0.1 2-3|0.0.0.1.1 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:02.163
(s / sodium 
      :mod-of (p / pentobarbital 
            :ARG0-of (a / anesthetize-01 
                  :ARG1 (a2 / animal) 
                  :ARG1-of (d / deep-02 
                        :ARG0 10 
                        :manner (t / then)) 
                  :medium 5) 
            :mod-of (i / IP 
                  :beneficiary-of (m / mg))))

# ::snt Hearts were excised and placed in an ice-cold Krebs-Henseleit bicarbonate ( KHB ) solution [ 118 mM NaCl , 25 mM NaHCO3 , 4.7 mM KCl , 1.2 mM KH2PO4 , 2.5 mM CaCl2 , 5.0 mM glucose , and 100 units/L insulin ( pH 7.4 ) ] .
# ::tok Hearts were excised and placed in an ice-cold Krebs-Henseleit bicarbonate ( KHB ) solution [ 118 mM NaCl , 25 mM NaHCO3 , 4.7 mM KCl , 1.2 mM KH2PO4 , 2.5 mM CaCl2 , 5.0 mM glucose , and 100 units/L insulin ( pH 7.4 ) ] .
# ::alignments 45-46|0.0.0.0.3 44-45|0.0.0.0.4 42-43|0.0.0.0.5 40-41|0.0.0.0.2 39-40|0.0.0.0.1.0.1 37-38|0.0.0.0.1.0.1.2 33-34|0.0.0.0.1.0.1.1 31-32|0.0.0.0.0 21-22|0.0.0.0.1.0.1.0 19-20|0.0.0.0.1.0.1.0.0 16-17|0.0.1 13-14|0.0.0.0.1.0 9-10|0.0.0.0.1 7-8|0.0.0.0.1.0.0 4-5|0.0.0.0 3-4|0 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:02.424
(a2 / and 
      :op1 (e / excise-01 
            :ARG1 (h / heart 
                  :ARG1-of (p2 / place-01 
                        :ARG0 2.5 
                        :ARG2 (b / bicarbonate 
                              :mod-of (s / solution 
                                    :mod (i2 / ice-cold) 
                                    :op1-of (a / and 
                                          :op2 (n / NaHCO3 
                                                :quant 25) 
                                          :op3 (c / CaCl2) 
                                          :op4 (g / glucose)))) 
                        :op1-of 100 
                        :op1-of 7.4 
                        :op1-of (p / ph) 
                        :op1-of (i / insulin))) 
            :op1-of (m / mm)))

# ::snt Hearts were cannulated first via the aorta and perfused retrogradely by the Langendorff method .
# ::tok Hearts were cannulated first via the aorta and perfused retrogradely by the Langendorff method .
# ::alignments 13-14|0.3.0 12-13|0.3.1.0+0.3.1+0.3 9-10|0.2 7-8|0 6-7|0.1 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:02.460
(a / and 
      :domain-of (h / heart) 
      :op1 (a2 / aorta) 
      :op2 (r / retrogradely) 
      :op3 (t / thing 
            :mod-of (m / method) 
            :name (n / name 
                  :op1 "Langendorff")))

# ::snt Following left atrial cannulation , perfusion was switched to the working mode with KHB solution containing 1.2 mM palmitate bound to 3 % fatty acid-free BSA with a preload pressure of 11.5 mm Hg and an afterload pressure of 50 mm Hg for 60 min with oxygenated buffer solution .
# ::tok Following left atrial cannulation , perfusion was switched to the working mode with KHB solution containing 1.2 mM palmitate bound to 3 % fatty acid-free BSA with a preload pressure of 11.5 mm Hg and an afterload pressure of 50 mm Hg for 60 min with oxygenated buffer solution .
# ::alignments 48-49|0.0.0.1.0.0.0.3.2.0.0 47-48|0.0.0.1.0.0.0.3.2.0 46-47|0.0.0.1.0.0.0.3.2.0.0.0 44-45|0.0.0.0 43-44|0.0.0.1.0.0.0.3.0.0 39-40|0.0.0.1.0.0.0.0 37-38|0.0.0.1.0.0.0.3.2 34-35|0.0.0.1.0.0.0.3 33-34|0.0.0.1.0.0.0.3.1 32-33|0.0.0.1.0.0.0.3.2.1 31-32|0.0.0.1.0.0.0.2.0.0 29-30|0.0.0.1.0.0.0.3.0 25-26|0.0.1.0+0.0.1+0.0 23-24|0 22-23|0.0.0.1.0.0.0.1.0.0 21-22|0.0.0.1.0.0.0.1.0 19-20|0.0.0 18-19|0.0.0.1 17-18|0.0.0.1.1 15-16|0.0.0.1.0 14-15|0.0.0.1.0.1 11-12|0.0.0.1.0.0.0.2 10-11|0.0.0.1.0.0.0.2.0 7-8|0.0.0.1.0.0.0 5-6|0.0.0.1.0.0 3-4|0.0.0.1.0.0.0.1.1 2-3|0.0.0.1.0.0.0.1.1.0 1-2|0.0.0.1.0.0.0.1.1.1 0-1|0.0.0.1.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:04.582
(f / fatty 
      :mod-of (o2 / organization 
            :ARG2-of (b2 / bind-01 
                  :ARG0 (m / min) 
                  :ARG1 (p4 / palmitate 
                        :ARG1-of (c / contain-01 
                              :ARG0 (p5 / perfusion 
                                    :ARG1-of (s3 / switch-01 
                                          :ARG0 50 
                                          :ARG1-of (f2 / follow-01 
                                                :ARG0 (3 / 3 
                                                      :value-of (p3 / percentage-entity)) 
                                                :ARG2 (c2 / cannulation 
                                                      :mod (a2 / atrial) 
                                                      :mod (l / left))) 
                                          :ARG2 (m4 / mode 
                                                :ARG0-of (w / work-01 
                                                      :ARG1 11.5)) 
                                          :op1-of (a / and 
                                                :ARG1-of (p2 / pressure-01 
                                                      :ARG0 60) 
                                                :op2 (h / hg) 
                                                :op3 (p / pressure-01 
                                                      :ARG0-of (b / buffer-01 
                                                            :ARG1 (s / solution 
                                                                  :ARG1-of (o / oxygenate-00))) 
                                                      :ARG1 (m2 / mm))))) 
                              :manner (s2 / solution)) 
                        :mod (m3 / mm))) 
            :name (n / name 
                  :op1 "BSA")))

# ::snt Functional measurements , namely cardiac output , aortic flows , peak systolic pressure , and heart rate were acquired every 10 min using inline flow probes ( Transonic Systems , Ithaca , New York , United States ) , a pressure transducer ( TSD 104A , BIOPAC Systems , Santa Barbara , California , United States ) and data acquired with the MP100 system from AcqKnowledge ( BIOPAC Systems ) .
# ::tok Functional measurements , namely cardiac output , aortic flows , peak systolic pressure , and heart rate were acquired every 10 min using inline flow probes ( Transonic Systems , Ithaca , New York , United States ) , a pressure transducer ( TSD 104A , BIOPAC Systems , Santa Barbara , California , United States ) and data acquired with the MP100 system from AcqKnowledge ( BIOPAC Systems ) .
# ::alignments 67-69|0.0.0.3.0.0.0.1+0.0.0.3.0.0.0.0+0.0.0.3.0.0.0+0.0.0.3.0.0 65-66|0.0.0.4.0.0+0.0.0.4.0+0.0.0.4 63-64|0 62-63|0.1.0.0+0.1.0+0.1 59-60|0.0 58-59|0.0.1 57-58|0.0.0 54-56|0.0.0.0.0.0.1.6.1+0.0.0.0.0.0.1.6.0.1+0.0.0.0.0.0.1.6.0.0+0.0.0.0.0.0.1.6.0+0.0.0.0.0.0.1.6 52-53|0.0.0.3.0.1.1+0.0.0.3.0.1.0.0+0.0.0.3.0.1.0+0.0.0.3.0.1 49-51|0.0.0.0.0.0.1.5.0.1+0.0.0.0.0.0.1.5.0.0+0.0.0.0.0.0.1.5.0+0.0.0.0.0.0.1.5 46-48|0.0.0.3.0.0.2.0.1+0.0.0.3.0.0.2.0.0+0.0.0.3.0.0.2.0+0.0.0.3.0.0.2 43-44|0.0.0.3.0.0.1.0.0+0.0.0.3.0.0.1.0+0.0.0.3.0.0.1 41-42|0.0.0.3 40-41|0.0.0.3.0 35-37|0.0.0.0.0.0.1.3.0.1+0.0.0.0.0.0.1.3.0.0.1+0.0.0.0.0.0.1.3.0.0.0+0.0.0.0.0.0.1.3.0.0+0.0.0.0.0.0.1.3.0 32-34|0.0.0.2.1+0.0.0.2.0.1+0.0.0.2.0.0+0.0.0.2.0+0.0.0.2 30-31|0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 27-29|0.0.0.0.0.0.1.0.0.0.1+0.0.0.0.0.0.1.0.0.0.0+0.0.0.0.0.0.1.0.0.0+0.0.0.0.0.0.1.0.0 25-26|0.0.0.0.1 24-25|0.0.0.0.1.0 22-23|0.0.0.0 21-22|0.0.0.0.0 20-21|0.0.0.0.0.0.1.3.1.0 19-20|0.0.0.0.0.1 18-19|0.0.0.0.0.0 16-17|0.0.0.0.0.0.1.4 15-16|0.0.0.0.0.0.1.4.0 14-15|0.0.0.0.0.0.1 12-13|0.0.0.0.0.0.1.3 11-12|0.0.0.0.0.0.1.3.2 10-11|0.0.0.0.0.0.1.3.1 8-9|0.0.0.0.0.0.1.2 7-8|0.0.0.0.0.0.1.2.0 5-6|0.0.0.0.0.0.1.1 4-5|0.0.0.0.1.0.0 3-4|0.0.0.0.0.0.0.1+0.0.0.0.0.0.0.0+0.0.0.0.0.0.0 1-2|0.0.0.0.0.0.1.0 0-1|0.0.0.0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:16.510
(s / system 
      :ARG2-of (a / acquire-01 
            :ARG0 (a2 / and 
                  :ARG2-of (u / use-01 
                        :ARG0 (m / min 
                              :ARG1-of (a3 / acquire-01 
                                    :ARG0 (c8 / country 
                                          :name (n13 / name) 
                                          :wiki "United_Kingdom") 
                                    :purpose (a4 / and 
                                          :op1 (m2 / measure-01 
                                                :ARG0 (o4 / organization 
                                                      :name (n12 / name 
                                                            :op1 "Transonic" 
                                                            :op2 "Systems")) 
                                                :mod (f3 / functional)) 
                                          :op2 (o5 / output) 
                                          :op3 (f2 / flow-01 
                                                :mod (a5 / aortic)) 
                                          :op4 (p4 / pressure-01 
                                                :ARG1 (c4 / country 
                                                      :name (n9 / name 
                                                            :op1 "United" 
                                                            :op2 "States") 
                                                      :wiki "United_States") 
                                                :ARG1-of (p5 / peak-01 
                                                      :ARG0 10) 
                                                :mod (s3 / systolic)) 
                                          :op5 (r / rate 
                                                :mod (h / heart)) 
                                          :op6 (c3 / country 
                                                :name (n6 / name 
                                                      :op1 "Santa" 
                                                      :op2 "Barbara")) 
                                          :op7 (c2 / country 
                                                :name (n4 / name 
                                                      :op1 "United" 
                                                      :op2 "States") 
                                                :wiki "United_States"))) 
                              :mod (e / every)) 
                        :ARG1 (p3 / probe 
                              :ARG1-of (f / flow-01 
                                    :ARG0 (c7 / cardiac)))) 
                  :op1 (c6 / country 
                        :name (n11 / name 
                              :op1 "Ithaca")) 
                  :op2 (c5 / city 
                        :name (n10 / name 
                              :op1 "New" 
                              :op2 "York") 
                        :wiki "New_York_City") 
                  :op3 (t / transduc 
                        :mod (p2 / pressure-01 
                              :ARG0 (o / organization 
                                    :name (n / name 
                                          :op1 "BIOPAC" 
                                          :op2 "Systems") 
                                    :part (o3 / organization 
                                          :name (n8 / name 
                                                :op1 "TSD")) 
                                    :part (o2 / organization 
                                          :name (n7 / name 
                                                :op1 "BIOPAC" 
                                                :op2 "Systems"))) 
                              :ARG1 (s2 / state 
                                    :name (n5 / name 
                                          :op1 "California") 
                                    :wiki "California"))) 
                  :op4 (p / person 
                        :name (n2 / name 
                              :op1 "AcqKnowledge"))) 
            :ARG1 (d / data)) 
      :mod (c / country 
            :name (n3 / name 
                  :op1 "MP100")))

# ::snt Cardiac work was calculated as the product of peak systolic pressure and cardiac output .
# ::tok Cardiac work was calculated as the product of peak systolic pressure and cardiac output .
# ::alignments 13-14|0.1.0.1 12-13|0.0.0 11-12|0.1.0 10-11|0.1.0.0 9-10|0.1.0.0.0 8-9|0.1.0.0.1 6-7|0.1 3-4|0 1-2|0.0 0-1|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:16.585
(c2 / calculate-01 
      :ARG1 (w / work-01 
            :ARG1 (c / cardiac) 
            :mod (c3 / cardiac)) 
      :ARG2 (p3 / product 
            :consist-of (a / and 
                  :op1 (p / pressure-01 
                        :ARG1 (s / systolic) 
                        :ARG1-of (p2 / peak-01)) 
                  :op2 (o / output))))

# ::snt Data were analyzed using T-tests or ANOVAs ( measures of general activity and sensorimotor battery ) .
# ::tok Data were analyzed using T-tests or ANOVAs ( measures of general activity and sensorimotor battery ) .
# ::alignments 14-15|0.2 13-14|0.2.0 12-13|0 11-12|0.1 10-11|0.1.0 8-9|0.0 6-7|0.1.0.0.1.1.0.0+0.1.0.0.1.1.0+0.1.0.0.1.1 5-6|0.1.0.0.1 4-5|0.1.0.0.1.0.0.0+0.1.0.0.1.0.0+0.1.0.0.1.0 3-4|0.1.0.0 2-3|0.1.0.0.2 0-1|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:17.128
(a / and 
      :ARG1-of (m / measure-02) 
      :op1 (a2 / activity-06 
            :ARG1-of (g / general-02 
                  :manner-of (u / use-01 
                        :ARG0 (d / data) 
                        :ARG1 (o2 / or 
                              :op1 (o3 / organization 
                                    :name (n2 / name 
                                          :op1 "T-tests")) 
                              :op2 (o / organization 
                                    :name (n / name 
                                          :op1 "ANOVAs"))) 
                        :ARG1-of (a3 / analyze-01)))) 
      :op2 (b / battery 
            :mod (s / sensorimotor)))

# ::snt The level of significance was set at p < 0.05 in all cases .
# ::tok The level of significance was set at p < 0.05 in all cases .
# ::alignments 12-13|0.0.0 11-12|0.0.0.0 7-8|0 3-4|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:17.156
(p / p 
      :domain (s / significant-02 
            :ARG1 (c / case-03 
                  :quant (a / all)) 
            :mod-of (l / level)))

# ::snt Data are reported as mean values  SEM , unless otherwise noted .
# ::tok Data are reported as mean values  SEM , unless otherwise noted .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:17.157
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The ANOVA model used to analyze each sensorimotor test included one between-subjects variable ( genotype ) , and one within-subjects variable ( trials ) .
# ::tok The ANOVA model used to analyze each sensorimotor test included one between-subjects variable ( genotype ) , and one within-subjects variable ( trials ) .
# ::alignments 22-23|0.0.0.0 20-21|0.1.0.0 19-20|0.0.2 17-18|0.0 14-15|0.0.1 12-13|0.1.0.1.0 11-12|0.0.0 9-10|0 8-9|0.1.0.1.1 7-8|0.1.0.1.1.0 6-7|0.1.0.1.1.1 5-6|0.1.0.1 3-4|0.1.0 2-3|0.1 1-2|0.1.1.0.0+0.1.1.0+0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:17.514
(i / include-01 
      :ARG1 (a / and 
            :op1 (b / between-subject 
                  :ARG0-of (t / trial-06)) 
            :op2 (g / genotype) 
            :op3 (w / within-subject)) 
      :ARG2 (m / model 
            :ARG1-of (u / use-01 
                  :ARG0 (v / variable) 
                  :ARG2 (a2 / analyze-01 
                        :ARG0 (v2 / variable) 
                        :ARG1 (t2 / test-01 
                              :ARG1 (s / sensorimotor) 
                              :mod (e / each)))) 
            :mod (o / organization 
                  :name (n / name 
                        :op1 "ANOVA"))))

# ::snt When ANOVAs with repeated measures were conducted , the Huynh-Feldt ( H-F ) adjustment of alpha levels was used for all within-subjects effects containing more than two levels , in order to protect against violations of the sphericity/compound symmetry assumptions underlying this ANOVA model .
# ::tok When ANOVAs with repeated measures were conducted , the Huynh-Feldt ( H-F ) adjustment of alpha levels was used for all within-subjects effects containing more than two levels , in order to protect against violations of the sphericity/compound symmetry assumptions underlying this ANOVA model .
# ::alignments 43-44|0.0.0.0.2.1.0.0.0.0 42-43|0.0.0.0.2.1.0.0.0.0.0.0.0+0.0.0.0.2.1.0.0.0.0.0.0+0.0.0.0.2.1.0.0.0.0.0 41-42|0.0.0.0.2.1.0.0.0.0.1 40-41|0.0.0.0.2.1.0.0.0 39-40|0.0.0.0.2.1.0+0.0.0.0.2.1.0.0 38-39|0.0.0.0.2.1 34-35|0.0.0.0.2.1.0.0.1 32-33|0.0.0.0.2 27-28|0.0.0.0.2.0 26-27|0.0.0.0.2.0.0 24-25|0.0.0.0.1.0.0.0.0 23-24|0.0.0.0.0 22-23|0.0.0.0.0.0 21-22|0.0.0.0.0.0.0 20-21|0.0.0.0.0.0.1 18-19|0.0.0.0 16-17|0.0 15-16|0 13-14|0.0.0 9-10|0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 6-7|0.0.0.0.1 4-5|0.0.0.0.1.0.0 3-4|0.0.0.0.1.0.0.0 1-2|0.0.0.0.1.0.1.0+0.0.0.0.1.0.1+0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:18.828
(a3 / alpha 
      :mod-of (l2 / level 
            :ARG0-of (a4 / adjust-01 
                  :ARG1-of (u2 / use-01 
                        :ARG1-of (c / contain-01 
                              :ARG0 (e / effect 
                                    :mod (w / within-subject) 
                                    :quant (a2 / all))) 
                        :purpose (c2 / conduct-01 
                              :ARG1 (o2 / organization 
                                    :ARG0-of (m3 / measure-02 
                                          :ARG1-of (r / repeat-01 
                                                :ARG0 (m2 / more))) 
                                    :name (n3 / name 
                                          :op1 "ANOVAs"))) 
                        :purpose (p / protect-01 
                              :ARG0 (l / level 
                                    :quant 2) 
                              :ARG1 (s / symmetry 
                                    :ARG0-of (a / assume-02 
                                          :ARG1 (t2 / thing 
                                                :ARG0-of (u / underlie-01 
                                                      :ARG1 (m / model 
                                                            :mod (o / organization 
                                                                  :name (n / name 
                                                                        :op1 "ANOVA")) 
                                                            :mod (t / this))) 
                                                :ARG1-of (v / violate-01)))))) 
                  :mod (t3 / thing 
                        :name (n2 / name 
                              :op1 "Huynh-Feldt")))))

# ::snt In addition , Bonferroni correction was used when appropriate to help maintain prescribed alpha levels ( e.g. , p < 0.05 ) when multiple comparisons were conducted .
# ::tok In addition , Bonferroni correction was used when appropriate to help maintain prescribed alpha levels ( e.g. , p < 0.05 ) when multiple comparisons were conducted .
# ::alignments 26-27|0.0.0.1.0 24-25|0.0.0.1 23-24|0.0.0.1.1 18-19|0.0.0.0 16-17|0 14-15|0.0.0.2.0.0 13-14|0.0.0.2.0.0.1 12-13|0.0.0.2.0.0.0 11-12|0.0.0.2.0 10-11|0.0.0.2 8-9|0.0.0.2.1 6-7|0.0.0 4-5|0.0 1-2|0.0.0.2.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:19.367
(e / e.g. 
      :ARG1-of (c3 / correct-01 
            :ARG1-of (u / use-01 
                  :ARG0 (p / p) 
                  :ARG1-of (c2 / compare-01 
                        :ARG1-of (c / conduct-01) 
                        :quant (m / multiple)) 
                  :ARG2 (h / help-01 
                        :ARG1 (m2 / maintain-01 
                              :ARG1 (l / level 
                                    :ARG1-of (p2 / prescribe-02) 
                                    :mod (a / alpha))) 
                        :ARG1-of (a2 / appropriate-02) 
                        :purpose (a3 / addition)))))

# ::snt Activity Levels in Female PGC-1  /  Mice Is Unchanged .
# ::tok Activity Levels in Female PGC-1  /  Mice Is Unchanged .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:19.369
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Using a CLAMS system , PGC-1 + / + ( n = 4 ) and PGC-1  /  ( n = 3 ) female mice were monitored for 48 h after a 17-h period of acclimation .
# ::tok Using a CLAMS system , PGC-1 + / + ( n = 4 ) and PGC-1  /  ( n = 3 ) female mice were monitored for 48 h after a 17-h period of acclimation .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:19.372
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt XY beam breaks were tabulated over the 12-h light and dark cycles as denoted on the bottom .
# ::tok XY beam breaks were tabulated over the 12-h light and dark cycles as denoted on the bottom .
# ::alignments 16-17|0.1.1 13-14|0.1 11-12|0.1.2 10-11|0.1.2.0 9-10|0.1.0 8-9|0.1.0.0 4-5|0 2-3|0.0 1-2|0.0.0 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:19.448
(t / tabulate-01 
      :ARG1 (b2 / break-01 
            :mod (b3 / beam-01 
                  :ARG1 (x / xy))) 
      :purpose (d / denote-01 
            :ARG0 (a / and 
                  :op1 (l / light-06)) 
            :ARG1 (b / bottom) 
            :ARG1-of (c / cycle-02 
                  :ARG1-of (d2 / dark-02))))

# ::snt The bars represent mean (  SEM ) beam breaks per each 12-h cycle .
# ::tok The bars represent mean (  SEM ) beam breaks per each 12-h cycle .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:19.449
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( 342 KB EPS ) .
# ::tok ( 342 KB EPS ) .
# ::alignments 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:19.460
(e / ep 
      :location-of 342)

# ::snt Click here for additional data file .
# ::tok Click here for additional data file .
# ::alignments 5-6|0.0 4-5|0.0.0 3-4|0.0.0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:19.477
(c / click-01 
      :ARG1 (f / file 
            :mod (d / data 
                  :mod (a / additional))) 
      :location (h / here))

# ::snt Altered Emotionality in PGC-1  /  Mice .
# ::tok Altered Emotionality in PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:19.478
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt An analysis of exploratory behavior included the number of entries into the center of the cage ( upper left ) , the time spent in the center of the cage in seconds ( sec ) ( upper right ) , the distance traveled in the center of the cage in meters ( m ) ( lower left ) as well as the distance traveled in the periphery ( lower right ) .
# ::tok An analysis of exploratory behavior included the number of entries into the center of the cage ( upper left ) , the time spent in the center of the cage in seconds ( sec ) ( upper right ) , the distance traveled in the center of the cage in meters ( m ) ( lower left ) as well as the distance traveled in the periphery ( lower right ) .
# ::alignments 69-70|0.0.0.1.1.1 68-69|0.0.0.1.1 66-67|0.1 63-64|0 62-63|0.0 56-57|0.0.0.1.1.0 55-56|0.0.0.1 52-53|0.0.1.0.1 50-51|0.0.1.2.0.0.0+0.0.1.2.0.0 48-49|0.0.1.2.0 45-46|0.0.1.2 42-43|0.0.1 41-42|0.0.1.0 37-38|0.0.0 36-37|0.0.0.0 33-34|0.0.0.1.0 31-32|0.0.1.1.0.1.1.0.0.0+0.0.1.1.0.1.1.0.0 29-30|0.0.1.1.0.1.1.0 26-27|0.0.1.1.0.1.1 23-24|0.0.1.1.0.1 22-23|0.0.1.1.0.1.0 18-19|0.0.1.0.0 17-18|0.0.1.0.0.0 15-16|0.0.1.1.0.0 12-13|0.0.1.1.0.0.0 9-10|0.0.1.1.1.0.0.0 7-8|0.0.1.1.1.0.0 5-6|0.0.1.1.1.0 4-5|0.0.1.1 3-4|0.0.1.1.0 1-2|0.0.1.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.390
(t / travel-01 
      :ARG1 (d / distance-01 
            :ARG2-of (r2 / right-05 
                  :mod (u / upper) 
                  :purpose (l3 / low-04 
                        :ARG0 (s / sec) 
                        :ARG1 (l / low-04 
                              :ARG0 (l2 / left) 
                              :time (r / right)))) 
            :accompanier-of (t2 / travel-01 
                  :ARG0 (d3 / distance-01 
                        :ARG0 (l4 / left 
                              :mod (u2 / upper)) 
                        :ARG2 (m / m)) 
                  :ARG1 (b / behave-01 
                        :ARG1 (e2 / explore-01 
                              :ARG0 (c5 / cage 
                                    :poss-of (c6 / center)) 
                              :ARG1 (s3 / spend-01 
                                    :ARG0 (t4 / time) 
                                    :ARG2 (c4 / center 
                                          :poss (c3 / cage 
                                                :location (t3 / temporal-quantity 
                                                      :unit (s2 / second)))))) 
                        :ARG1-of (a / analyze-01 
                              :ARG2-of (i / include-01 
                                    :ARG1 (n / number 
                                          :quant-of (e / entry))))) 
                  :ARG2 (c2 / center 
                        :poss (c / cage 
                              :location (d2 / distance-quantity 
                                    :unit (m2 / meter)))))) 
      :ARG2 (p / periphery))

# ::snt * p < 0.05 compared to the PGC-1 + / + mice .
# ::tok * p < 0.05 compared to the PGC-1 + / + mice .
# ::alignments 11-12|0 9-10|0.1 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.403
(m / mouse 
      :ARG1-of (c / compare-01) 
      :op1-of (s / slash))

# ::snt ( 620 KB EPS ) .
# ::tok ( 620 KB EPS ) .
# ::alignments 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.413
(k / kb 
      :mod 620)

# ::snt Click here for additional data file .
# ::tok Click here for additional data file .
# ::alignments 5-6|0.0 4-5|0.0.0 3-4|0.0.0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.432
(c / click-01 
      :ARG1 (f / file 
            :mod (d / data 
                  :mod (a / additional))) 
      :location (h / here))

# ::snt No Difference in Weight Gain on a High-Fat Diet in Female PGC-1  /  Mice Compared to WT Controls .
# ::tok No Difference in Weight Gain on a High-Fat Diet in Female PGC-1  /  Mice Compared to WT Controls .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.433
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt 8-wk-old female mice were fed a diet high in fat ( 43 % calories from fat ) for 6 wk .
# ::tok 8-wk-old female mice were fed a diet high in fat ( 43 % calories from fat ) for 6 wk .
# ::alignments 18-19|0.1.0.0 15-16|0.1.0.1.0 13-14|0.1.0.1.0.0 12-13|0.1.0.1.1 11-12|0.1.0.1.0.0.0 9-10|0.1.0.1 7-8|0.1.0 6-7|0.1 4-5|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.790
(f3 / feed-up-03 
      :ARG1 (m / mouse 
            :mod (f4 / female)) 
      :ARG2 (d / diet 
            :ARG1-of (h / high-02 
                  :ARG0 6 
                  :ARG1-of (f2 / fat-03 
                        :ARG0 (f / fat 
                              :source-of (c / calori 
                                    :quant 43)) 
                        :ARG2 (p / percentage-entity)))))

# ::snt The change in body weight ( grams ) after 6 wk on a high-fat diet is shown for PGC-1 + / + ( n = 8 ) and PGC-1  /  ( n = 11 ) mice .
# ::tok The change in body weight ( grams ) after 6 wk on a high-fat diet is shown for PGC-1 + / + ( n = 8 ) and PGC-1  /  ( n = 11 ) mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.792
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt NS , not significant .
# ::tok NS , not significant .
# ::alignments 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.805
(s / significant-02 
      :polarity -)

# ::snt ( 264 KB EPS ) .
# ::tok ( 264 KB EPS ) .
# ::alignments 2-3|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.810
(k / kb)

# ::snt Click here for additional data file .
# ::tok Click here for additional data file .
# ::alignments 5-6|0.0 4-5|0.0.0 3-4|0.0.0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.829
(c / click-01 
      :ARG1 (f / file 
            :mod (d / data 
                  :mod (a / additional))) 
      :location (h / here))

# ::snt Male PGC-1  /  Mice Are Somewhat Resistant to Diet-Induced Obesity .
# ::tok Male PGC-1  /  Mice Are Somewhat Resistant to Diet-Induced Obesity .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.830
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Male and female PGC-1 + / + ( n  6 ) and PGC-1  /  ( n  6 ) mice were fed a high-fat diet ( 43 % calories from fat ) beginning at 4 wk of age .
# ::tok Male and female PGC-1 + / + ( n  6 ) and PGC-1  /  ( n  6 ) mice were fed a high-fat diet ( 43 % calories from fat ) beginning at 4 wk of age .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.838
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Body weight was monitored weekly as shown on the graph on the left .
# ::tok Body weight was monitored weekly as shown on the graph on the left .
# ::alignments 12-13|0.1.0 9-10|0.1 6-7|0 4-5|0.0.0.0.0.0+0.0.0.0.0 3-4|0.0.0.0 1-2|0.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.937
(s / show-01 
      :ARG0 (b / body 
            :part (w2 / weight 
                  :ARG1-of (m / monitor-01 
                        :ARG2 (t / temporal-quantity 
                              :unit (w / week))))) 
      :ARG1 (g / graph 
            :topic (l / left)))

# ::snt The mean (  SEM ) change in body weight is shown in the bar graph on the right .
# ::tok The mean (  SEM ) change in body weight is shown in the bar graph on the right .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.938
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt * , significant difference compared to the PGC-1 + / + controls , p < 0.05 .
# ::tok * , significant difference compared to the PGC-1 + / + controls , p < 0.05 .
# ::alignments 13-14|0.1 11-12|0.3.0 9-10|0.3 4-5|0.0 3-4|0 2-3|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.979
(d / differ-02 
      :ARG0 (c2 / compare-01) 
      :ARG1 (p / p) 
      :ARG1-of (s2 / significant-02) 
      :op1-of (s / slash 
            :op2 (c / control-01)))

# ::snt ( 794 KB EPS ) .
# ::tok ( 794 KB EPS ) .
# ::alignments 2-3|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:24.986
(k / kb)

# ::snt Click here for additional data file .
# ::tok Click here for additional data file .
# ::alignments 5-6|0.0 4-5|0.0.0 3-4|0.0.0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:25.006
(c / click-01 
      :ARG1 (f / file 
            :mod (d / data 
                  :mod (a / additional))) 
      :location (h / here))

# ::snt Sequences of mouse-specific probes and primers used for real-time RT-PCR .
# ::tok Sequences of mouse-specific probes and primers used for real-time RT-PCR .
# ::alignments 8-9|0.0.1.0 6-7|0.0.1 5-6|0.0.1.1 4-5|0.0 3-4|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:25.046
(s / sequence 
      :op1-of (a / and 
            :op2 (p2 / probe) 
            :op3 (u / use-01 
                  :ARG0 (r / real-time) 
                  :ARG1 (p / primer))))

# ::snt ( 25 KB DOC ) .
# ::tok ( 25 KB DOC ) .
# ::alignments 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:25.053
(k / kb 
      :quant 25)

# ::snt Click here for additional data file .
# ::tok Click here for additional data file .
# ::alignments 5-6|0.0 4-5|0.0.0 3-4|0.0.0.0 1-2|0.1 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:25.068
(c / click-01 
      :ARG1 (f / file 
            :mod (d / data 
                  :mod (a / additional))) 
      :location (h / here))

# ::snt The GenBank ( http://www.ncbi.nlm.nih.gov/ ) accession numbers of the vector discussed in this paper is p1339-PGK-Neomycin targeting vector ( AF335420 ) .
# ::tok The GenBank ( http://www.ncbi.nlm.nih.gov/ ) accession numbers of the vector discussed in this paper is p1339-PGK-Neomycin targeting vector ( AF335420 ) .
# ::alignments 17-18|0 16-17|0.0 13-14|0.0.0 12-13|0.0.0.1 10-11|0.0.0.0 9-10|0.0.0.0.0 6-7|0.0.0.0.0.0 5-6|0.0.0.0.0.0.0 1-2|0.0.0.0.0.0.1.0.0+0.0.0.0.0.0.1.0+0.0.0.0.0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:25.218
(v / vector 
      :ARG1-of (t / target-01 
            :ARG0 (p / paper 
                  :medium-of (d / discuss-01 
                        :ARG1 (v2 / vector 
                              :poss-of (n / number 
                                    :mod (a / accession) 
                                    :mod (p2 / person 
                                          :name (n2 / name 
                                                :op1 "GenBank"))))) 
                  :mod (t2 / this))))

# ::snt We would like to thank Deanna Young and Karen Hemker for help with mouse husbandry , Carolyn Mansfield for ES cell and mouse genotyping , Anthony Nardi for assistance with the studies to assess general activity and muscle strength , Bill Kraft for expert technical assistance with electron microscopy , Carla Weinheimer for performing cardiac catheterizations , Trey Coleman for performing the TAG assays , Krista Olson for expert technical assistance with the Langendorff method , and Mary Wingate for assistance with manuscript preparation .
# ::tok We would like to thank Deanna Young and Karen Hemker for help with mouse husbandry , Carolyn Mansfield for ES cell and mouse genotyping , Anthony Nardi for assistance with the studies to assess general activity and muscle strength , Bill Kraft for expert technical assistance with electron microscopy , Carla Weinheimer for performing cardiac catheterizations , Trey Coleman for performing the TAG assays , Krista Olson for expert technical assistance with the Langendorff method , and Mary Wingate for assistance with manuscript preparation .
# ::alignments 83-84|0.0.1.1.2.4.1.0.0 82-83|0.0.1.1.2.4.1.0.0.0 80-81|0.0.1.1.2.4.1.0 77-79|0.0.1.1.2.4.0.1+0.0.1.1.2.4.0.0+0.0.1.1.2.4.0+0.0.1.1.2.4 76-77|0.0.1.1.2.4.1 74-75|0.0.1.1.2.5 73-74|0.0.1.1.2.5.1.0.0+0.0.1.1.2.5.1.0+0.0.1.1.2.5.1 70-71|0.0.1.1.2.5.0 69-70|0.0.1.1.2.5.0.1 68-69|0.0.1.1.2.5.0.0 65-67|0.0.1.1.2.3.0.1+0.0.1.1.2.3.0.0+0.0.1.1.2.3.0+0.0.1.1.2.3 63-64|0.0.1.1.0.0 62-63|0.0.1.1.0.0.0.0.0+0.0.1.1.0.0.0.0+0.0.1.1.0.0.0 60-61|0.0.1.1.0 58-59|0.0.1.1.3+0.0.1.1.1.0+0.0.1.1.1+0.0.1.1 55-56|0.0.1.1.2.4.1.2.0.0 54-55|0.0.1.1.2.4.1.2.0.0.0 53-54|0.0.1.1.2.4.1.2.0 50-52|0.0.1.1.2.4.1.2.1.1+0.0.1.1.2.4.1.2.1.0+0.0.1.1.2.4.1.2.1+0.0.1.1.2.4.1.2 48-49|0.0.1 47-48|0.0.1.0 45-46|0.0 44-45|0.0.2 43-44|0.0.0 40-42|0.0.1.1.2.2.0.1+0.0.1.1.2.2.0.0+0.0.1.1.2.2.0+0.0.1.1.2.2 38-39|0.0.1.1.2.4.1.1 37-38|0 36-37|0.0.1.1.2 35-36|0.0.1.1.2.0.1 34-35|0.0.1.1.2.0.1.0 33-34|0.0.1.1.2.0 31-32|0.0.1.1.2.1.1 28-29|0.0.1.1.2.1 25-27|0.0.1.1.2.0.0.0.1+0.0.1.1.2.0.0.0.0+0.0.1.1.2.0.0.0+0.0.1.1.2.0.0 23-24|0.0.1.1.2.1.0.0.0.2.3 22-23|0.0.1.1.2.1.0.0.0.2.3.0 21-22|0.0.1.1.2.1.0.0.0.2 20-21|0.0.1.1.2.1.0.0.0.2.2 19-20|0.0.1.1.2.1.0.0.0.2.2.0.0.0+0.0.1.1.2.1.0.0.0.2.2.0.0+0.0.1.1.2.1.0.0.0.2.2.0 16-18|0.0.1.1.2.1.0.0.0.2.1.0.1+0.0.1.1.2.1.0.0.0.2.1.0.0+0.0.1.1.2.1.0.0.0.2.1.0+0.0.1.1.2.1.0.0.0.2.1 14-15|0.0.1.1.2.1.0.0.0.2.0.0 13-14|0.0.1.1.2.1.0.0.0.2.0.0.0 11-12|0.0.1.1.2.1.0.0.0.2.0 8-10|0.0.1.1.2.1.0.1.0.1+0.0.1.1.2.1.0.1.0.0+0.0.1.1.2.1.0.1.0+0.0.1.1.2.1.0.1 7-8|0.0.1.1.2.1.0 5-7|0.0.1.1.2.1.0.0.1.1+0.0.1.1.2.1.0.0.1.0+0.0.1.1.2.1.0.0.1+0.0.1.1.2.1.0.0 4-5|0.0.1.1.2.1.0.0.0 2-3|0.0.1.1.2.1.0.0.0.1 0-1|0.0.1.1.2.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:40.053
(m4 / muscle-01 
      :ARG1 (a5 / assist-01 
            :ARG1-of (e3 / expert-01) 
            :ARG2 (m3 / microscopy 
                  :mod (e2 / electron) 
                  :mod-of (p5 / person 
                        :ARG0-of (p4 / perform-02 
                              :ARG1 (a4 / assay 
                                    :mod (o / organization 
                                          :name (n4 / name 
                                                :op1 "TAG")))) 
                        :name (n5 / name 
                              :op1 "Coleman") 
                        :op3-of (a6 / and 
                              :ARG1-of (a8 / assess-01 
                                    :ARG0 (p9 / person 
                                          :name (n8 / name 
                                                :op1 "Anthony" 
                                                :op2 "Nardi")) 
                                    :ARG2 (a7 / activity-06 
                                          :ARG1-of (g / general-02))) 
                              :op1 (a9 / assist-01 
                                    :ARG0 (a11 / and 
                                          :op1 (p12 / person 
                                                :ARG1-of (t4 / thank-01 
                                                      :ARG0 (w / we) 
                                                      :ARG1-of (l / like-02 
                                                            :ARG0 w) 
                                                      :ARG2 (a10 / and 
                                                            :ARG0-of (h2 / help-01 
                                                                  :ARG2 (h / husbandry 
                                                                        :mod (m6 / mouse))) 
                                                            :op1 (p10 / person 
                                                                  :name (n10 / name 
                                                                        :op1 "Carolyn" 
                                                                        :op2 "Mansfield")) 
                                                            :op2 (c3 / cell 
                                                                  :poss (o2 / organization 
                                                                        :name (n9 / name 
                                                                              :op1 "ES"))) 
                                                            :op3 (g2 / genotyp 
                                                                  :mod (m5 / mouse)))) 
                                                :name (n12 / name 
                                                      :op1 "Deanna" 
                                                      :op2 "Young")) 
                                          :op2 (p11 / person 
                                                :name (n11 / name 
                                                      :op1 "Karen" 
                                                      :op2 "Hemker"))) 
                                    :ARG2 (s2 / study-01)) 
                              :op2 (p8 / person 
                                    :name (n7 / name 
                                          :op1 "Bill" 
                                          :op2 "Kraft")) 
                              :op4 (p3 / person 
                                    :name (n3 / name 
                                          :op1 "Krista" 
                                          :op2 "Olson")) 
                              :op5 (p2 / person 
                                    :name (n / name 
                                          :op1 "Mary" 
                                          :op2 "Wingate") 
                                    :op3-of (a2 / and 
                                          :ARG0-of (a / assist-01 
                                                :ARG2 (p / prepare-02 
                                                      :ARG1 (m / manuscript))) 
                                          :op1 (s / strength) 
                                          :op2 (p7 / person 
                                                :ARG0-of (p6 / perform-02 
                                                      :ARG1 (c / catheterization 
                                                            :mod (c2 / cardiac))) 
                                                :name (n6 / name 
                                                      :op1 "Carla" 
                                                      :op2 "Weinheimer")))) 
                              :poss-of (m2 / method 
                                    :ARG2-of (a3 / assist-01 
                                          :ARG1-of (e / expert-01) 
                                          :mod (t2 / technical)) 
                                    :mod (t / thing 
                                          :name (n2 / name 
                                                :op1 "Langendorff")))) 
                        :wiki -)) 
            :mod (t3 / technical)))

# ::snt This work was supported by National Institutes of Health grants RO1 DK45416 , RO1 HL58427 , PO1 HL57278 , Digestive Diseases Research Core Center ( P30 DK52574 ) , Clinical Nutrition Research Unit Core Center ( P30 DK56341 ) , and K08 AG24844 .
# ::tok This work was supported by National Institutes of Health grants RO1 DK45416 , RO1 HL58427 , PO1 HL57278 , Digestive Diseases Research Core Center ( P30 DK52574 ) , Clinical Nutrition Research Unit Core Center ( P30 DK56341 ) , and K08 AG24844 .
# ::alignments 41-43|0.0.7.0.1+0.0.7.0.0+0.0.7.0+0.0.7 40-41|0.0 36-38|0.0.6.0.1+0.0.6.0.0+0.0.6.0+0.0.6 29-35|0.0.5.0.5+0.0.5.0.4+0.0.5.0.3+0.0.5.0.2+0.0.5.0.1+0.0.5.0.0+0.0.5.0+0.0.5 25-27|0.0.4.0.1+0.0.4.0.0+0.0.4.0+0.0.4 19-24|0.0.3.0.4+0.0.3.0.3+0.0.3.0.2+0.0.3.0.1+0.0.3.0.0+0.0.3.0+0.0.3 16-18|0.0.2.0.1+0.0.2.0.0+0.0.2.0+0.0.2 13-15|0.0.1.0.1+0.0.1.0.0+0.0.1.0+0.0.1 10-12|0.0.0.1.1+0.0.0.1.0+0.0.0.1+0.0.0 9-10|0 5-9|0.1.0.3+0.1.0.2+0.1.0.1+0.1.0.0+0.1.0+0.1 3-4|0.0.0.0 1-2|0.0.0.0.0 0-1|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:42.467
(g / grant-01 
      :ARG0 (a / and 
            :op1 (p6 / person 
                  :ARG0-of (s / support-01 
                        :ARG1 (w / work-01 
                              :mod (t / this))) 
                  :name (n8 / name 
                        :op1 "RO1" 
                        :op2 "DK45416")) 
            :op2 (p5 / person 
                  :name (n7 / name 
                        :op1 "RO1" 
                        :op2 "HL58427")) 
            :op3 (p4 / person 
                  :name (n6 / name 
                        :op1 "PO1" 
                        :op2 "HL57278")) 
            :op4 (o2 / organization 
                  :name (n5 / name 
                        :op1 "Digestive" 
                        :op2 "Diseases" 
                        :op3 "Research" 
                        :op4 "Core" 
                        :op5 "Center")) 
            :op5 (p3 / person 
                  :name (n4 / name 
                        :op1 "P30" 
                        :op2 "DK52574")) 
            :op6 (o / organization 
                  :name (n3 / name 
                        :op1 "Clinical" 
                        :op2 "Nutrition" 
                        :op3 "Research" 
                        :op4 "Unit" 
                        :op5 "Core" 
                        :op6 "Center")) 
            :op7 (p2 / person 
                  :name (n2 / name 
                        :op1 "P30" 
                        :op2 "DK56341")) 
            :op8 (p / person 
                  :name (n / name 
                        :op1 "K08" 
                        :op2 "AG24844"))) 
      :ARG1 (o3 / organization 
            :name (n9 / name 
                  :op1 "National" 
                  :op2 "Institutes" 
                  :op3 "of" 
                  :op4 "Health")))

# ::snt SB is supported by a postdoctoral fellowship from the Juvenile Diabetes Foundation .
# ::tok SB is supported by a postdoctoral fellowship from the Juvenile Diabetes Foundation .
# ::alignments 9-12|0.0.1.0.2+0.0.1.0.1+0.0.1.0.0+0.0.1.0+0.0.1 6-7|0.0 5-6|0.0.0 2-3|0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:42.495
(s / support-01 
      :ARG0 (f / fellowship 
            :mod (p / postdoctoral) 
            :source (o / organization 
                  :name (n / name 
                        :op1 "Juvenile" 
                        :op2 "Diabetes" 
                        :op3 "Foundation"))) 
      :ARG1 (s2 / sb))

# ::snt EDA is supported by the American Heart Association ( Established Investigator ) and RO1 HL70070 .
# ::tok EDA is supported by the American Heart Association ( Established Investigator ) and RO1 HL70070 .
# ::alignments 13-15|0.0.1.0.0.1+0.0.1.0.0.0+0.0.1.0.0+0.0.1.0 12-13|0.0.1 10-11|0.1.0.0 9-10|0.1.0 5-8|0.0.0.2+0.0.0.1+0.0.0.0+0.0.0+0.0 2-3|0 0-1|0.1.1.0+0.1.1+0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:42.890
(s / support-01 
      :ARG0 (o / organization 
            :name (n2 / name 
                  :op1 "American" 
                  :op2 "Heart" 
                  :op3 "Association") 
            :op1-of (a / and 
                  :op2 (p / person 
                        :name (n / name 
                              :op1 "RO1" 
                              :op2 "HL70070")))) 
      :ARG1 (o2 / organization 
            :ARG0-of (e / establish-01 
                  :ARG1 (i / investigator)) 
            :name (n3 / name 
                  :op1 "EDA")))

# ::snt Competing interests .
# ::tok Competing interests .
# ::alignments 1-2|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:42.895
(c / compete-01 
      :topic-of (i / interest))

# ::snt The authors have declared that no competing interests exist .
# ::tok The authors have declared that no competing interests exist .
# ::alignments 8-9|0.1 7-8|0.1.0 6-7|0.1.0.0 5-6|0.1.1 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:42.944
(d / declare-01 
      :ARG0 (a / author-01) 
      :ARG1 (e / exist-01 
            :ARG1 (i / interest 
                  :ARG1-of (c / compete-02)) 
            :polarity -))

# ::snt BAT - brown adipose tissue .
# ::tok BAT - brown adipose tissue .
# ::alignments 4-5|0.0 3-4|0.0.1 2-3|0.0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:42.957
(b2 / bat-01 
      :ARG0 (t / tissue 
            :mod (b / brown) 
            :mod (a / adipose)))

# ::snt DEXA - dual-energy X-ray absorption .
# ::tok DEXA - dual-energy X-ray absorption .
# ::alignments 4-5|0 3-4|0.0 0-1|0.0.0.0.0+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:42.972
(a / absorb-01 
      :ARG1 (x / x-ray-01 
            :ARG1 (o / organization 
                  :name (n / name 
                        :op1 "DEXA"))))

# ::snt EST - echocardiographic stress testing .
# ::tok EST - echocardiographic stress testing .
# ::alignments 4-5|0.0.0.0 3-4|0.0.0 2-3|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.014
(e2 / e 
      :mod-of (e / echocardiographic 
            :ARG1-of (s / stress-02 
                  :ARG1-of (t / test-01))))

# ::snt NRF - nuclear respiratory factor .
# ::tok NRF - nuclear respiratory factor .
# ::alignments 4-5|0 3-4|0.0 2-3|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.026
(f / factor 
      :mod (r / respiratory) 
      :mod (n / nucleus))

# ::snt PGC - PPAR coactivator .
# ::tok PGC - PPAR coactivator .
# ::alignments 2-4|0.0.0.1+0.0.0.0+0.0.0+0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.043
(p2 / PGC 
      :mod-of (t / thing 
            :name (n / name 
                  :op1 (p / PPAR) 
                  :op2 (c / coactivator))))

# ::snt PPAR - peroxisome proliferator-activated receptor .
# ::tok PPAR - peroxisome proliferator-activated receptor .
# ::alignments 4-5|0.0.0 3-4|0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.055
(p2 / PPAR 
      :degree-of (p / proliferator-activat 
            :mod-of (r / receptor)))

# ::snt PRC - PGC-1 related coactivator .
# ::tok PRC - PGC-1 related coactivator .
# ::alignments 4-5|0.0 3-4|0 0-1|0.1.0.0+0.1.0+0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.067
(r / relate-01 
      :ARG1 (c / coactivator) 
      :ARG2 (c2 / country 
            :name (n / name 
                  :op1 "PRC")))

# ::snt SCD - steroyl CoA desaturase .
# ::tok SCD - steroyl CoA desaturase .
# ::alignments 3-5|0.0.0.1+0.0.0.0+0.0.0+0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.083
(s / scd 
      :mod (t / thing 
            :name (n / name 
                  :op1 (c / CoA) 
                  :op2 (d / desaturase))))

# ::snt SREBP - sterol regulatory element binding protein .
# ::tok SREBP - sterol regulatory element binding protein .
# ::alignments 6-7|0 5-6|0.1 4-5|0.2 3-4|0.0 2-3|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.113
(p / protein 
      :ARG0-of (r / regulate-01 
            :ARG1 (s / sterol)) 
      :ARG1-of (b / binding-07) 
      :mod (e / element))

# ::snt SEM - standard error of the mean .
# ::tok SEM - standard error of the mean .
# ::alignments 6-7|0 3-4|0.1 2-3|0.1.0 0-1|0.0.0.0+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.132
(m / mean-01 
      :ARG2 (o / organization 
            :name (n / name 
                  :op1 "SEM")) 
      :domain-of (e / error 
            :ARG1-of (s / standard-02)))

# ::snt Tfam - mitochondrial transcription factor A. UCP - uncoupling protein .
# ::tok Tfam - mitochondrial transcription factor A. UCP - uncoupling protein .
# ::alignments 9-10|0 8-9|0.0 5-7|0.1.1.1.1+0.1.1.1.0+0.1.1.1+0.1.1 4-5|0.1.1.0 3-4|0.1 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.164
(p / protein 
      :mod (u / uncouple) 
      :mod-of (t / transcription 
            :degree (t2 / Tfam) 
            :mod-of (p2 / person 
                  :mod (f / factor) 
                  :name (n / name 
                        :op1 "A." 
                        :op2 "UCP"))))

# ::snt Deletion of the PGC-1 Gene .
# ::tok Deletion of the PGC-1 Gene .
# ::alignments 4-5|0.0.0.0+0.0.0+0.0 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.176
(d / deletion 
      :poss (p / person 
            :name (n / name 
                  :op1 "Gene")))

# ::snt ( A ) Schematic of the gene targeting strategy .
# ::tok ( A ) Schematic of the gene targeting strategy .
# ::alignments 8-9|0.0.0.0 7-8|0.0.0 6-7|0.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.208
(s2 / schematic 
      :poss (g / gene 
            :ARG0-of (t / target-01 
                  :ARG1 (s / strategy))))

# ::snt A region of the murine PGC-1 gene containing exons 3 -- 6 is shown schematically at the top .
# ::tok A region of the murine PGC-1 gene containing exons 3 -- 6 is shown schematically at the top .
# ::alignments 17-18|0.3 14-15|0.2 13-14|0 11-12|0.0.1 9-10|0.1 8-9|0.0.0.0.0 7-8|0.0.0.0 6-7|0.0.0 4-5|0.0.0.1 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.343
(s2 / show-01 
      :ARG1 (r / region 
            :mod (g / gene 
                  :ARG0-of (c / contain-01 
                        :ARG1 (e / exon)) 
                  :mod (m / murine)) 
            :mod 6) 
      :ARG2 3 
      :manner (s / schematically) 
      :time (t / top))

# ::snt Relevant restriction endonuclease sites are also shown .
# ::tok Relevant restriction endonuclease sites are also shown .
# ::alignments 6-7|0 5-6|0.1 3-4|0.0 2-3|0.0.1 1-2|0.0.0 0-1|0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:43.365
(s / show-01 
      :ARG1 (s2 / site 
            :ARG0-of (r / restrict-01) 
            :location-of (e / endonuclease) 
            :mod (r2 / relevant)) 
      :mod (a / also))

# ::snt The targeting construct containing a neomycin ( Neo ) cassette is shown below the PGC-1 gene with dashed lines indicating the regions targeted for homologous recombination .
# ::tok The targeting construct containing a neomycin ( Neo ) cassette is shown below the PGC-1 gene with dashed lines indicating the regions targeted for homologous recombination .
# ::alignments 25-26|0.0.0.0.0.0 24-25|0.0.0.0.0.0.0 22-23|0.0.0.0.0 21-22|0.0.0.0 19-20|0.0.0 18-19|0.0 17-18|0.0.1 15-16|0.2.0 12-13|0.2 11-12|0 9-10|0.1.0.0 7-8|0.0.1.0.0.0+0.0.1.0.0+0.0.1.0 5-6|0.1.0.0.0 3-4|0.1.0 2-3|0.1 1-2|0.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:44.251
(s / show-01 
      :ARG0 (l / line 
            :ARG0-of (i / indicate-01 
                  :ARG1 (r2 / region 
                        :ARG1-of (t / target-01 
                              :purpose (r / recombination 
                                    :mod (h / homologou))))) 
            :mod (d / dash-01 
                  :ARG1 (t2 / thing 
                        :name (n / name 
                              :op1 "Neo")))) 
      :ARG1 (c3 / construct-01 
            :ARG0-of (c2 / contain-01 
                  :ARG1 (c / cassette 
                        :mod (n2 / neomycin))) 
            :ARG1-of (t3 / target-01)) 
      :ARG2 (b / below 
            :op1 (g / gene)))

# ::snt Homologous recombination between the 3  end of the targeting vector and the PGC-1 gene is indicated by the solid lines .
# ::tok Homologous recombination between the 3  end of the targeting vector and the PGC-1 gene is indicated by the solid lines .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:44.252
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The targeting construct inserted into the PGC-1 gene resulting in a duplication of exon 3 and incorporation of the targeting construct DNA into the final recombinant as shown .
# ::tok The targeting construct inserted into the PGC-1 gene resulting in a duplication of exon 3 and incorporation of the targeting construct DNA into the final recombinant as shown .
# ::alignments 27-28|0.0 25-26|0 24-25|0.1 21-22|0.0.0.2.0 20-21|0.0.0.0 19-20|0.0.0.2.0.0 16-17|0.0.0.2 15-16|0.0.0 14-15|0.0.0.1.2.0.0 13-14|0.0.0.1.1.0 11-12|0.0.0.1.1 8-9|0.0.0.1 7-8|0.0.0.1.0 3-4|0.0.0.1.2 2-3|0.0.0.1.2.0 1-2|0.0.0.1.2.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:44.576
(r / recombinant 
      :ARG0-of (s / show-01 
            :ARG1 (a / and 
                  :ARG1-of (c / construct-01) 
                  :op1 (r2 / result-01 
                        :ARG1 (g / gene) 
                        :ARG2 (d2 / duplication 
                              :mod (e / exon)) 
                        :manner-of (i2 / insert-01 
                              :ARG1 (c2 / construct-01 
                                    :ARG1 3 
                                    :ARG1-of (t2 / target-01)))) 
                  :op2 (i / incorporation 
                        :poss (d / DNA 
                              :ARG1-of (t / target-01))))) 
      :mod (f / final))

# ::snt Probes used for the Southern blot studies and relevant restriction fragments predicted by digestion of the recombinant are also shown .
# ::tok Probes used for the Southern blot studies and relevant restriction fragments predicted by digestion of the recombinant are also shown .
# ::alignments 19-20|0.1.2.0 18-19|0.1.2.0.0 16-17|0.1.2.1.0 13-14|0.0 11-12|0 10-11|0.1 9-10|0.1.0 8-9|0.1.1 7-8|0.1.2 6-7|0.1.2.1.2 5-6|0.1.2.1.2.1 4-5|0.1.2.1.2.0.0.0+0.1.2.1.2.0.0+0.1.2.1.2.0 1-2|0.1.2.1 0-1|0.1.2.1.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:45.731
(p / predict-01 
      :ARG0 (d / digestion) 
      :ARG1 (f / fragment-01 
            :ARG1 (r2 / restrict-01) 
            :ARG1-of (r3 / relevant-01) 
            :op2-of (a2 / and 
                  :ARG1-of (s / show-01 
                        :mod (a / also)) 
                  :op1 (u / use-01 
                        :ARG0 (r / recombinant) 
                        :ARG1 (p2 / probe-01) 
                        :ARG2 (s2 / study-01 
                              :ARG1 (t / thing 
                                    :name (n / name 
                                          :op1 "Southern")) 
                              :ARG2 (b / blot-01))))))

# ::snt ( B ) Southern blot analysis of embryonic stem cells ( ESC ) ( digested with Xba1 ) and tail DNA ( digested with Pst1 ) is shown .
# ::tok ( B ) Southern blot analysis of embryonic stem cells ( ESC ) ( digested with Xba1 ) and tail DNA ( digested with Pst1 ) is shown .
# ::alignments 27-28|0.2 24-25|0.2.1.1 22-23|0.2.1 20-21|0.2.0 19-20|0.2.0.0 18-19|0 16-17|0.1.0.0.0+0.1.0.0+0.1.0 14-15|0.1 11-12|0.0.1.0.0.0+0.0.1.0.0+0.0.1.0 9-10|0.0.1.1 8-9|0.0.1.1.0 7-8|0.0.1.1.1 5-6|0.0.1 4-5|0.0 3-4|0.0.0.0.0+0.0.0.0+0.0.0 1-2|0.2.1.0.1+0.2.1.0.0.0+0.2.1.0.0+0.2.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:46.730
(a / and 
      :op1 (b / blot-01 
            :ARG0 (t3 / thing 
                  :name (n3 / name 
                        :op1 "Southern")) 
            :ARG1 (a2 / analyze-01 
                  :ARG0 (o / organization 
                        :name (n2 / name 
                              :op1 "ESC")) 
                  :ARG1 (c / cell 
                        :mod (s2 / stem) 
                        :mod (e / embryonic)))) 
      :op2 (d3 / digest-01 
            :ARG1 (t2 / thing 
                  :name (n / name 
                        :op1 "Xba1"))) 
      :op3 (s / show-01 
            :ARG1 (d2 / DNA 
                  :ARG1-of (t / tail-01)) 
            :ARG2 (d / digest-01 
                  :ARG0 (l / location 
                        :name (n4 / name 
                              :op1 "B") 
                        :wiki -) 
                  :ARG1 (p / Pst1))))

# ::snt The blots were hybridized with the probes shown in Figure 1A .
# ::tok The blots were hybridized with the probes shown in Figure 1A .
# ::alignments 10-11|0.1.0.0 9-10|0.1.0.0.0 7-8|0.1.0 6-7|0.1 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:46.794
(h / hybridize-01 
      :ARG1 (b / blot-01) 
      :ARG2 (p / probe 
            :ARG1-of (s / show-01 
                  :ARG0 (1 / 1A 
                        :mod-of (f / figure)))))

# ::snt Results for PGC-1 + / + ( + / + ) , PGC-1 + /  ( + /  ) , and PGC-1  /  (  /  ) genotypes are shown as denoted at the bottom .
# ::tok Results for PGC-1 + / + ( + / + ) , PGC-1 + /  ( + /  ) , and PGC-1  /  (  /  ) genotypes are shown as denoted at the bottom .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:46.796
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( C ) Northern blot analysis using RNA isolated from the hearts of the three relevant PGC-1 genotypes ( as in Figure 1B ) is shown using PGC-1 cDNA as a probe .
# ::tok ( C ) Northern blot analysis using RNA isolated from the hearts of the three relevant PGC-1 genotypes ( as in Figure 1B ) is shown using PGC-1 cDNA as a probe .
# ::alignments 31-32|0.0.2 28-29|0.0.1 26-27|0.0 25-26|0 21-22|0.0.0.0 17-18|0.0.0.1.1.0 15-16|0.0.0.1.1.0.0 14-15|0.0.2.0 11-12|0.0.0.1.1 8-9|0.0.0.1 7-8|0.0.0.1.0 6-7|0.0.0.1.0.0 5-6|0.0.0.1.0.0.0 4-5|0.0.0 3-4|0.0.0.2 1-2|0.0.0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:47.150
(s / show-01 
      :ARG1 (u / use-01 
            :ARG0 (b / blot-01 
                  :ARG0 (f / figure) 
                  :ARG1-of (i / isolate-01 
                        :ARG0 (r2 / rna 
                              :ARG1-of (u2 / use-01 
                                    :ARG0 (a / analyze-01))) 
                        :source (h / heart 
                              :consist-of (g / genotyp 
                                    :ARG1-of (r / relevant-01 
                                          :ARG0 (c2 / C))))) 
                  :mod "Northern_Ireland") 
            :ARG1 (c / cdna) 
            :ARG2 (p / probe-01 
                  :ARG1 3)))

# ::snt In addition , PGC-1 and PRC cDNA probes were used as shown .
# ::tok In addition , PGC-1 and PRC cDNA probes were used as shown .
# ::alignments 11-12|0.1 9-10|0.1.0.0 7-8|0.1.0 6-7|0.0.0 5-6|0.0.1.0+0.0.1+0.0 4-5|0 1-2|0.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:47.185
(a / and 
      :op1 (c2 / country 
            :mod-of (c / cdna) 
            :name (n / name 
                  :op1 "PRC")) 
      :op2 (s / show-01 
            :ARG1 (p / probe 
                  :ARG1-of (u / use-01 
                        :ARG2 (a2 / addition)))))

# ::snt Ethidium bromide staining of 18S ribosomal RNA is shown at the bottom .
# ::tok Ethidium bromide staining of 18S ribosomal RNA is shown at the bottom .
# ::alignments 11-12|0.1 8-9|0 6-7|0.0.0 4-5|0.0.0.0 2-3|0.0 1-2|0.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:47.224
(s / show-01 
      :ARG1 (s2 / stain-01 
            :ARG0 (r / rna 
                  :quant 18) 
            :ARG1 (b2 / bromide)) 
      :time (b / bottom))

# ::snt ( D ) Quantitative real time RT-PCR ( Sybr green ) was used to detect PGC-1 transcripts using primer sets crossing different exon borders as denoted .
# ::tok ( D ) Quantitative real time RT-PCR ( Sybr green ) was used to detect PGC-1 transcripts using primer sets crossing different exon borders as denoted .
# ::alignments 25-26|0.1.0.0.0.0 23-24|0.1 22-23|0 21-22|0.0 20-21|0.1.0 19-20|0.1.0.0 18-19|0.1.0.0.1 17-18|0.1.0.0.0 16-17|0.1.0.0.0.1.0 14-15|0.1.0.0.0.1 12-13|0.1.0.0.0.1.1 9-10|0.1.0.0.0.1.1.1 5-6|0.0.1.0 4-5|0.0.1 3-4|0.1.0.0.0.1.1.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:47.891
(e / exon 
      :ARG1-of (d2 / differ-02 
            :ARG0 (d4 / D) 
            :manner (r / real 
                  :mod-of (t2 / time))) 
      :mod-of (b / border 
            :ARG1-of (c / cross-02 
                  :ARG0 (s / set 
                        :ARG1-of (u / use-01 
                              :ARG2 (d / denote-01) 
                              :ARG2-of (d3 / detect-01 
                                    :ARG1 (t / transcript) 
                                    :ARG2-of (u2 / use-01 
                                          :ARG1 (q / quantitative) 
                                          :ARG1-of (g / green-02)))) 
                        :mod (p / primer)))))

# ::snt The exon 5 -- 3 primer set detects only the mutant transcript (  /  ) , whereas the exon 5 -- 6 primer set detects only the WT transcript .
# ::tok The exon 5 -- 3 primer set detects only the mutant transcript (  /  ) , whereas the exon 5 -- 6 primer set detects only the WT transcript .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:47.893
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The values represent arbitrary units for RNA isolated from the tissues shown for the three amplicons comparing PGC-1 + / + and PGC-1  /  .
# ::tok The values represent arbitrary units for RNA isolated from the tissues shown for the three amplicons comparing PGC-1 + / + and PGC-1  /  .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:47.896
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt N.D. = not detectable .
# ::tok N.D. = not detectable .
# ::alignments 3-4|0 2-3|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:47.904
(d / detectable 
      :polarity -)

# ::snt The exon 10 -- 11 amplicon was evaluated to assess levels of mutant versus WT transcripts .
# ::tok The exon 10 -- 11 amplicon was evaluated to assess levels of mutant versus WT transcripts .
# ::alignments 15-16|0.0.3.0 13-14|0.0.3 12-13|0.0.1.0 10-11|0.0.1 9-10|0.0 7-8|0 5-6|0.0.2 4-5|0.0.2.0 2-3|0.0.3.0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:48.344
(e / evaluate-01 
      :ARG1 (a / assess-01 
            :ARG0 (e2 / exon) 
            :ARG1 (l / level 
                  :mod (m / mutant)) 
            :manner (a2 / amplicon 
                  :quant 11) 
            :time (v / versu 
                  :op1 (t / transcript 
                        :poss 10))))

# ::snt The values represent arbitrary units normalized to actin control .
# ::tok The values represent arbitrary units normalized to actin control .
# ::alignments 8-9|0.0 7-8|0 5-6|0.0.0 4-5|0.0.0.0 3-4|0.0.0.0.0 2-3|0.0.0.0.1 1-2|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:48.434
(a / actin 
      :ARG1-of (c / control-01 
            :ARG1-of (n / normalize-01 
                  :ARG0 (u / unit 
                        :ARG1-of (a2 / arbitrary-02) 
                        :ARG1-of (r / represent-01 
                              :ARG0 (v / value))))))

# ::snt ( E ) Western blot analysis using whole-cell protein extracts prepared from BAT under basal conditions and following exposure to 4 C for 8 h .
# ::tok ( E ) Western blot analysis using whole-cell protein extracts prepared from BAT under basal conditions and following exposure to 4 C for 8 h .
# ::alignments 24-25|0.0.0.1.0.2.1.0.0 23-24|0.0.0.1.0.2.1.0 21-22|0.0.0.1.0.2.0 20-21|0.0.0.0.0.0 18-19|0.0.0.1.0.2.1 17-18|0.0.0.1.0.2 16-17|0.0.0.1.0 15-16|0.0.0.1.0.1 14-15|0.0.0.1.0.1.0 12-13|0.0.0.1.0.0 10-11|0.0.0.0 9-10|0.0+0.0.0 8-9|0 6-7|0.0.0.1 5-6|0.0.0.0.0 4-5|0.0.0.0.0.1 3-4|0.0.0.0.0.1.0.2+0.0.0.0.0.1.0.0.0+0.0.0.0.0.1.0.0+0.0.0.0.0.1.0 1-2|0.0.0.0.0.1.0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:48.989
(p2 / protein 
      :ARG0-of (e2 / extract-01 
            :ARG1 (t / thing 
                  :ARG1-of (p / prepare-02 
                        :ARG0-of (a2 / analyze-01 
                              :ARG1 4 
                              :ARG1-of (b3 / blot-01 
                                    :ARG0 (w / world-region 
                                          :name (n / name 
                                                :op1 "West") 
                                          :op1-of (e3 / E) 
                                          :wiki "Western_world")))) 
                  :ARG1-of (u / use-01 
                        :op1-of (a / and 
                              :ARG1-of (b2 / bat-01) 
                              :op2 (c2 / condition 
                                    :mod (b / basal)) 
                              :op3 (f / follow-01 
                                    :ARG1 (c / C) 
                                    :ARG2 (e / expose-01 
                                          :ARG1 (8 / 8 
                                                :quant-of (h / h)))))))))

# ::snt The signal shown was obtained with polyclonal anti-PGC-1 antibody [ 10 ] .
# ::tok The signal shown was obtained with polyclonal anti-PGC-1 antibody [ 10 ] .
# ::alignments 10-11|0.0 8-9|0.2 4-5|0.1.0 2-3|0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.026
(s / show-01 
      :ARG0 10 
      :ARG1 (s2 / signal 
            :ARG1-of (o / obtain-01)) 
      :op1-of (a / antibody))

# ::snt An epitope-tagged PGC-1 , overexpressed in neonatal cardiac myocytes using an adenoviral vector ( Ad-PGC-1 ) , is shown as a positive control .
# ::tok An epitope-tagged PGC-1 , overexpressed in neonatal cardiac myocytes using an adenoviral vector ( Ad-PGC-1 ) , is shown as a positive control .
# ::alignments 22-23|0.0 21-22|0.0.1 18-19|0 12-13|0.0.0.1 9-10|0.0.0 8-9|0.0.0.0 7-8|0.0.0.0.1 6-7|0.0.0.0.2 4-5|0.0.0.0.0 1-2|0.0.0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.203
(s / show-01 
      :ARG2 (c / control-01 
            :ARG1 (u / use-01 
                  :ARG0 (m / myocyt 
                        :location-of (o / overexpress) 
                        :mod (c2 / cardiac) 
                        :mod (n / neonatal)) 
                  :ARG1 (v / vector) 
                  :ARG2 (e / epitope-tagg)) 
            :manner (p / positive)))

# ::snt The Ponceau S stain of the protein gel is shown at the bottom .
# ::tok The Ponceau S stain of the protein gel is shown at the bottom .
# ::alignments 12-13|0.0.0.1.0 9-10|0.0.0.1 7-8|0.0 6-7|0 3-4|0.0.0 2-3|0.0.0.2.0+0.0.0.2 1-2|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.268
(p / protein 
      :mod-of (g / gel 
            :ARG1-of (s2 / stain-01 
                  :ARG0 (t / thing 
                        :name (n2 / name 
                              :op1 "Ponceau")) 
                  :ARG1-of (s / show-01 
                        :time (b / bottom)) 
                  :name (n / name 
                        :op1 "S-400"))))

# ::snt Evidence for Tissue-Specific Growth Abnormalities and Mild Sex-Limited , Age-Dependent Obesity in PGC-1  /  Mice .
# ::tok Evidence for Tissue-Specific Growth Abnormalities and Mild Sex-Limited , Age-Dependent Obesity in PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.270
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( A ) The bars represent total body weight for the ages indicated for male ( left graph ) and female ( center graph ) PGC-1 + / + and PGC-1  /  mice .
# ::tok ( A ) The bars represent total body weight for the ages indicated for male ( left graph ) and female ( center graph ) PGC-1 + / + and PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.275
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The body weight ( BW ) of the 1-wk-old PGC-1  /  mice was normalized to that of PGC-1 + / + littermates , which was assigned a value of 100 ( left axis ) .
# ::tok The body weight ( BW ) of the 1-wk-old PGC-1  /  mice was normalized to that of PGC-1 + / + littermates , which was assigned a value of 100 ( left axis ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.278
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt For the 3 - , 18 - , and 24-wk time points , absolute weights of PGC-1  /  mice were compared to age-matched controls ( right axis ) .
# ::tok For the 3 - , 18 - , and 24-wk time points , absolute weights of PGC-1  /  mice were compared to age-matched controls ( right axis ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.286
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Percent fat as determined by DEXA scanning for PGC-1 + / + and PGC-1  /  mice ( right graph ) .
# ::tok Percent fat as determined by DEXA scanning for PGC-1 + / + and PGC-1  /  mice ( right graph ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.289
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The results represent n = 4 ( males ) and n  11 ( females ) for each genotype at 24 wk .
# ::tok The results represent n = 4 ( males ) and n  11 ( females ) for each genotype at 24 wk .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.292
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt * p < 0.05 compared to corresponding PGC-1 + / + mice .
# ::tok * p < 0.05 compared to corresponding PGC-1 + / + mice .
# ::alignments 11-12|0.0 9-10|0.0.1 6-7|0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.317
(c / correspond-01 
      :ARG1 (m / mouse 
            :ARG1-of (c2 / compare-01) 
            :op1-of (s / slash)))

# ::snt ( B ) The bars represent organ weights corrected to body weight for 3-wk-old male and female PGC-1 + / + and PGC-1  /  mice .
# ::tok ( B ) The bars represent organ weights corrected to body weight for 3-wk-old male and female PGC-1 + / + and PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.319
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The error bars represent  SEM .
# ::tok The error bars represent  SEM .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.322
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Results represent n  14 for each group .
# ::tok Results represent n  14 for each group .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.330
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt * p < 0.05 compared to corresponding PGC-1 + / + mice .
# ::tok * p < 0.05 compared to corresponding PGC-1 + / + mice .
# ::alignments 11-12|0.0 9-10|0.0.1 6-7|0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.353
(c / correspond-01 
      :ARG1 (m / mouse 
            :ARG1-of (c2 / compare-01) 
            :op1-of (s / slash)))

# ::snt Abnormal Mitochondrial Phenotype in Slow-Twitch Skeletal Muscle of PGC-1  /  Mice .
# ::tok Abnormal Mitochondrial Phenotype in Slow-Twitch Skeletal Muscle of PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.355
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( A ) Representative electron micrograph of soleus muscle from 1-mo-old female PGC-1 + / + and PGC-1  /  mice .
# ::tok ( A ) Representative electron micrograph of soleus muscle from 1-mo-old female PGC-1 + / + and PGC-1  /  mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:49.358
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( B ) Quantitative morphometric measurements of the cellular volume density for the mitochondrial ( Mito ) and myofibrillar ( Myo ) fractions based on analysis of electron micrographs ( three sections from three animals per group ) .
# ::tok ( B ) Quantitative morphometric measurements of the cellular volume density for the mitochondrial ( Mito ) and myofibrillar ( Myo ) fractions based on analysis of electron micrographs ( three sections from three animals per group ) .
# ::alignments 36-37|0.0.0.1.0 34-35|0.0.0.1.0.0 33-34|0.0.0.1.0.0.0 31-32|0.0.0.0.0.0 30-31|0.0.0.0.0.0.0 28-29|0.0.0.0.0.1 27-28|0.0.0.0.0.1.0 25-26|0.0.0.0.0 23-24|0.0.0.0 22-23|0.0.0 17-18|0 15-16|0.0.0.1.1.0+0.0.0.1.1+0.0.0.1 13-14|0.0.1.1 10-11|0.0.1.0 9-10|0.0.1.0.0 8-9|0.0.0.2 5-6|0.0.1 1-2|0.0.3+0.0.2.0+0.0.2+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:50.198
(a3 / and 
      :op1 (l / location 
            :ARG0-of (f / fraction-01 
                  :ARG1-of (b / base-02 
                        :ARG2 (a2 / analyze-01 
                              :ARG0 (s / section 
                                    :quant 3) 
                              :ARG1 (m / micrograph 
                                    :mod (e / electron)))) 
                  :ARG2 (o / organization 
                        :mod-of (g / group 
                              :mod-of (a / animal 
                                    :quant 3)) 
                        :name (n / name 
                              :op1 "Mito")) 
                  :op1-of (c / cell)) 
            :ARG0-of (m3 / measure-01 
                  :ARG1 (d / density 
                        :mod (v / volume)) 
                  :ARG2 (m2 / mitochondrial)) 
            :name (n2 / name 
                  :op1 "B") 
            :wiki -))

# ::snt The bars represent mean  SEM .
# ::tok The bars represent mean  SEM .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:50.199
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt * p < 0.05 compared to corresponding PGC-1 + / + values .
# ::tok * p < 0.05 compared to corresponding PGC-1 + / + values .
# ::alignments 11-12|0.0 9-10|0.0.1 6-7|0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:50.219
(c / correspond-01 
      :ARG1 (v / value 
            :ARG1-of (c2 / compare-01) 
            :op1-of (s / slash)))

# ::snt ( C ) Gene expression data .
# ::tok ( C ) Gene expression data .
# ::alignments 5-6|0.0.0 4-5|0.0 3-4|0.1.0+0.1+0 1-2|0.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:50.236
(p / person 
      :ARG0-of (e / express-01 
            :source-of (d / data)) 
      :name (n / name 
            :op1 "Gene") 
      :op1-of (c / C))

# ::snt The results of real-time PCR analysis of nuclear and mitochondrial genes involved in various components of mitochondrial metabolism and mitochondrial biogenesis : cytochrome C ( Cyto c ) , ATP synthase  , Tfam , and cytochrome oxidase IV ( COX IV ) .
# ::tok The results of real-time PCR analysis of nuclear and mitochondrial genes involved in various components of mitochondrial metabolism and mitochondrial biogenesis : cytochrome C ( Cyto c ) , ATP synthase  , Tfam , and cytochrome oxidase IV ( COX IV ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:50.242
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Eight littermate pairs were used for analysis at 1 -- 2 mo of age and normalized to the WT value , which was assigned a value of 100 , in each case .
# ::tok Eight littermate pairs were used for analysis at 1 -- 2 mo of age and normalized to the WT value , which was assigned a value of 100 , in each case .
# ::alignments 31-32|0.1.1 30-31|0.1.1.1 27-28|0.1.0.0.1.0.1.0 25-26|0 23-24|0.1 19-20|0.1.0 15-16|0.1.0.0 14-15|0.1.0.0.1 13-14|0.1.0.0.1.0.0.0 11-12|0.1.0.0.0 10-11|0.1.0.0.0.0 8-9|0.1.1.0 6-7|0.1.0.0.1.0.1 4-5|0.1.0.0.1.0 2-3|0.1.0.0.1.0.0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.169
(v / value-01 
      :ARG1 (e2 / eight) 
      :ARG2-of (a / assign-01 
            :ARG1 (v2 / value-01 
                  :ARG4-of (n / normalize-01 
                        :ARG1 (m / mo 
                              :quant 2) 
                        :op2-of (a2 / and 
                              :op1 (u / use-01 
                                    :ARG1 (p / pair-01 
                                          :ARG1-of (a3 / age-01)) 
                                    :ARG2 (a4 / analyze-01 
                                          :ARG1 100))))) 
            :topic (c / case-03 
                  :ARG1 1 
                  :mod (e / each))))

# ::snt * p < 0.05 compared to corresponding PGC-1 + / + values .
# ::tok * p < 0.05 compared to corresponding PGC-1 + / + values .
# ::alignments 11-12|0.0 9-10|0.0.1 6-7|0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.191
(c / correspond-01 
      :ARG1 (v / value 
            :ARG1-of (c2 / compare-01) 
            :op1-of (s / slash)))

# ::snt ( D ) Mitochondrial respiration rates as determined by oxygen consumption ( VO2 ) performed on saponin-permeabilized muscle strips prepared from soleus of PGC-1 + / + and PGC-1  /  mice ( as described in Materials and Methods ) .
# ::tok ( D ) Mitochondrial respiration rates as determined by oxygen consumption ( VO2 ) performed on saponin-permeabilized muscle strips prepared from soleus of PGC-1 + / + and PGC-1  /  mice ( as described in Materials and Methods ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.199
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The results are based on six female animals in each group , using succinate as a substrate in the presence of rotenone .
# ::tok The results are based on six female animals in each group , using succinate as a substrate in the presence of rotenone .
# ::alignments 21-22|0.1.0.0.2.0 19-20|0.1.0.0.2 16-17|0.1.0.0.1 13-14|0.1.0.0.0 12-13|0.1.0.0 10-11|0.1.0 9-10|0.1.0.1 7-8|0.1 6-7|0.1.1 5-6|0.1.2 3-4|0 1-2|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.303
(b / base-02 
      :ARG1 (t / thing 
            :ARG2-of (r2 / result-01)) 
      :ARG2 (a / animal 
            :location (g / group 
                  :ARG0-of (u / use-01 
                        :ARG1 (s2 / succinate) 
                        :ARG2 (s / substrate) 
                        :location (p / presence 
                              :mod (r / rotenone))) 
                  :mod (e / each)) 
            :mod (f / female) 
            :quant 6))

# ::snt Mean values (  SEM ) are shown for state 2 ( basal ) , state 3 ( ADP-stimulated ) , and state 4 respiration ( presence of oligomycin ) .
# ::tok Mean values (  SEM ) are shown for state 2 ( basal ) , state 3 ( ADP-stimulated ) , and state 4 respiration ( presence of oligomycin ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.304
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt PGC-1  /  Mice Exhibit an Abnormal Skeletal Muscle Functional Phenotype .
# ::tok PGC-1  /  Mice Exhibit an Abnormal Skeletal Muscle Functional Phenotype .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.307
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( A ) Measures of general activity and muscle strength .
# ::tok ( A ) Measures of general activity and muscle strength .
# ::alignments 9-10|0.0.0 8-9|0.0.0.0 7-8|0.0 6-7|0.1 5-6|0.1.0 3-4|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.414
(m2 / measure-01 
      :ARG1 (a / and 
            :op1 (s / strength 
                  :ARG1-of (m / muscle-01))) 
      :mod (a2 / activity-06 
            :ARG1-of (g / general-02)))

# ::snt General activity levels were measured in 3.5-mo-old male PGC-1 + / + ( n = 8 ) and PGC-1  /  ( n = 11 ) mice using a photobeam system as described in Materials and Methods .
# ::tok General activity levels were measured in 3.5-mo-old male PGC-1 + / + ( n = 8 ) and PGC-1  /  ( n = 11 ) mice using a photobeam system as described in Materials and Methods .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.416
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Total ambulations ( left graph ) , and rearings ( center graph ) provide a general measure of locomotor activity .
# ::tok Total ambulations ( left graph ) , and rearings ( center graph ) provide a general measure of locomotor activity .
# ::alignments 19-20|0.0 18-19|0.0.1 16-17|0.0.0 15-16|0.0.0.1 13-14|0.0.0.0.0 11-12|0 10-11|0.1 8-9|0.0.0.0.2 7-8|0.0.0.0 4-5|0.0.0.0.0.0 3-4|0.0.0.0.0.0.0 1-2|0.0.0.0.1 0-1|0.0.0.0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.684
(g2 / graph 
      :ARG1-of (a / activity-06 
            :ARG1-of (m / measure-01 
                  :ARG0 (a2 / and 
                        :ARG1-of (p / provide-01 
                              :ARG0 (g3 / graph 
                                    :mod (l2 / left))) 
                        :op1 (a3 / ambulation 
                              :ARG1-of (t / total-01)) 
                        :op2 (r / rearing)) 
                  :ARG1-of (g / general-02)) 
            :mod (l / locomotor)) 
      :mod (c / center))

# ::snt Time spent on an inverted screen ( right graph ) represents a general measure of extremity muscle strength .
# ::tok Time spent on an inverted screen ( right graph ) represents a general measure of extremity muscle strength .
# ::alignments 17-18|0.1.3 16-17|0.1.3.0 15-16|0.1.3.0.0 13-14|0.1 12-13|0.1.2 10-11|0 8-9|0.0 7-8|0.0.0 5-6|0.1.1.0 4-5|0.1.1 1-2|0.1.1.0.0 0-1|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.818
(r / represent-01 
      :ARG0 (g2 / graph 
            :mod (r2 / right)) 
      :ARG1 (m2 / measure-01 
            :ARG0 (t / time) 
            :ARG1 (i / invert-01 
                  :ARG1 (s2 / screen 
                        :ARG1-of (s3 / spend-01))) 
            :ARG1-of (g / general-02) 
            :ARG2 (s / strength 
                  :ARG1-of (m / muscle-01 
                        :ARG0 (e / extremity)))))

# ::snt The results from two trials are shown .
# ::tok The results from two trials are shown .
# ::alignments 6-7|0 4-5|0.0.0.0 3-4|0.0.0.0.0 1-2|0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.878
(s / show-01 
      :ARG1 (t2 / thing 
            :ARG2-of (r / result-01 
                  :ARG1 (t / trial-06 
                        :quant 2))))

# ::snt * p < 0.05 compared to corresponding PGC-1 + / + .
# ::tok * p < 0.05 compared to corresponding PGC-1 + / + .
# ::alignments 9-10|0.0 6-7|0 4-5|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.892
(c / correspond-01 
      :ARG1 (s / slash) 
      :ARG1-of (c2 / compare-01))

# ::snt ( B ) Exercise studies .
# ::tok ( B ) Exercise studies .
# ::alignments 4-5|0.0.0 3-4|0.0 1-2|0.2+0.1.0+0.1+0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.912
(l / location 
      :ARG1-of (e / exercise-01 
            :ARG1-of (s / study-01)) 
      :name (n / name 
            :op1 "B") 
      :wiki -)

# ::snt Male 6 -- 8-mo-old PGC-1  /  and PGC-1 + / + mice were subjected to a run-to-exhaustion protocol on a motorized treadmill ( left graph ) as described in Materials and Methods .
# ::tok Male 6 -- 8-mo-old PGC-1  /  and PGC-1 + / + mice were subjected to a run-to-exhaustion protocol on a motorized treadmill ( left graph ) as described in Materials and Methods .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.913
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt * p < 0.001 compared to corresponding PGC-1 + / + values .
# ::tok * p < 0.001 compared to corresponding PGC-1 + / + values .
# ::alignments 11-12|0.0 9-10|0.0.1 6-7|0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:51.953
(c / correspond-01 
      :ARG1 (v / value 
            :ARG1-of (c2 / compare-01) 
            :op1-of (s / slash)))

# ::snt VO2max measurements were determined for 2-mo-old male mice for each genotype using a motorized treadmill at an elevation of 150 m and indirect calorimetry set-up ( right graph ) as described in Materials and Methods .
# ::tok VO2max measurements were determined for 2-mo-old male mice for each genotype using a motorized treadmill at an elevation of 150 m and indirect calorimetry set-up ( right graph ) as described in Materials and Methods .
# ::alignments 34-35|0.0.1.0.1 33-34|0.0.1.0 32-33|0.0.1.0.0 30-31|0.0.1 27-28|0.2.1.0.0 26-27|0.2.1.0.0.0 23-24|0.0.0.1 22-23|0.0.0 21-22|0.2.3 20-21|0.2.3.0 19-20|0.2.1.0.1 17-18|0.2.2 14-15|0.2.1 13-14|0.2.1.0 11-12|0.2 10-11|0.2.0 9-10|0.2.0.0 7-8|0.1 6-7|0.0.0.0 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:52.507
(d3 / determined-02 
      :ARG0 (m7 / measure-01 
            :ARG1 (d2 / direct-02 
                  :ARG0 (m6 / male) 
                  :ARG1 (c / calorimetry)) 
            :ARG1-of (d / describe-01 
                  :ARG2 (a / and 
                        :op1 (m2 / material) 
                        :op2 (m / method)))) 
      :ARG1 (m5 / mouse) 
      :manner (u / use-01 
            :ARG0 (g2 / genotype 
                  :mod (e2 / each)) 
            :ARG1 (t / treadmill 
                  :ARG1-of (m4 / motorize-01 
                        :ARG0 (g / graph 
                              :mod (r / right)) 
                        :time 150)) 
            :location (e / elevation) 
            :time (a2 / and 
                  :op1 (m3 / m))))

# ::snt * p < 0.05 compared to corresponding PGC-1 + / + values .
# ::tok * p < 0.05 compared to corresponding PGC-1 + / + values .
# ::alignments 11-12|0.0 9-10|0.0.1 6-7|0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:52.526
(c / correspond-01 
      :ARG1 (v / value 
            :ARG1-of (c2 / compare-01) 
            :op1-of (s / slash)))

# ::snt ( C ) Time course of fatigue following repeated stimulation of soleus muscle is shown for 4-mo-old male PGC-1  /  ( n = 5 ) and PGC-1 + / + ( n = 5 ) mice ( left graph ) .
# ::tok ( C ) Time course of fatigue following repeated stimulation of soleus muscle is shown for 4-mo-old male PGC-1  /  ( n = 5 ) and PGC-1 + / + ( n = 5 ) mice ( left graph ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:52.532
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The mean percent force remaining at 2 min ( Fatigue Resistance Index ) is shown ( right graph ) .
# ::tok The mean percent force remaining at 2 min ( Fatigue Resistance Index ) is shown ( right graph ) .
# ::alignments 17-18|0.1 16-17|0.1.0 14-15|0 9-12|0.0.0.0.0.2+0.0.0.0.0.1+0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 7-8|0.0.1.0 6-7|0.0.1.0.0 4-5|0.0.1 3-4|0.0 2-3|0.0.2 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:52.910
(s / show-01 
      :ARG1 (f / force 
            :ARG0-of (m2 / mean-01 
                  :ARG1 (t / thing 
                        :name (n / name 
                              :op1 "Fatigue" 
                              :op2 "Resistance" 
                              :op3 "Index"))) 
            :ARG1-of (r2 / remain-01 
                  :ARG2 (m / min 
                        :quant 2)) 
            :mod (p / percentage-entity)) 
      :ARG2 (g / graph 
            :mod (r / right)))

# ::snt * p < 0.05 compared to corresponding PGC-1 + / + values .
# ::tok * p < 0.05 compared to corresponding PGC-1 + / + values .
# ::alignments 11-12|0.0 9-10|0.0.1 6-7|0 4-5|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:52.935
(c / correspond-01 
      :ARG1 (v / value 
            :ARG1-of (c2 / compare-01) 
            :op1-of (s / slash)))

# ::snt Abnormal Cardiac Response to Physiologic Stress in PGC-1  /  Mice .
# ::tok Abnormal Cardiac Response to Physiologic Stress in PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:52.936
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( A ) Exercise echocardiographic studies .
# ::tok ( A ) Exercise echocardiographic studies .
# ::alignments 5-6|0 4-5|0.0 3-4|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:52.976
(s / study-01 
      :ARG1 (e / echocardiographic 
            :ARG1-of (e2 / exercise-01)))

# ::snt PGC-1 + / + ( n = 4 ) and PGC-1  /  ( n = 8 ) female mice aged 6 -- 8 mo were subjected to an exercise protocol on a motorized treadmill .
# ::tok PGC-1 + / + ( n = 4 ) and PGC-1  /  ( n = 8 ) female mice aged 6 -- 8 mo were subjected to an exercise protocol on a motorized treadmill .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:52.978
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt This protocol was designed such that the PGC-1  /  mice ran to exhaustion based on the results of the exercise studies shown in Figure 4 .
# ::tok This protocol was designed such that the PGC-1  /  mice ran to exhaustion based on the results of the exercise studies shown in Figure 4 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:52.986
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Accordingly , an exercise regimen of 60 s was used for both groups .
# ::tok Accordingly , an exercise regimen of 60 s was used for both groups .
# ::alignments 12-13|0.2 11-12|0.2.0 9-10|0 6-7|0.0 4-5|0.1 3-4|0.1.0 0-1|0.3 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:53.087
(u / use-01 
      :ARG0 60 
      :ARG1 (r / regimen 
            :mod (e / exercise-02)) 
      :ARG2 (g / group 
            :mod (b / both)) 
      :manner (a / accordingly))

# ::snt The graphs depict the heart rate ( left graph ) and echocardiographically-determined ventricular fractional shortening ( FS ) as a percent ( right graph ) .
# ::tok The graphs depict the heart rate ( left graph ) and echocardiographically-determined ventricular fractional shortening ( FS ) as a percent ( right graph ) .
# ::alignments 23-24|0.0.2 22-23|0.0.2.0 20-21|0.0.0.0.2 16-17|0.0.1.0.0 14-15|0.0.0.0 13-14|0.0.0.0.3 12-13|0.0.0.0.0 10-11|0 8-9|0.0.0.0.1.0 7-8|0.0.0.0.1 5-6|0.0.1 4-5|0.0.1.0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:53.376
(a / and 
      :op1 (d / depict-01 
            :ARG0 (g3 / graph 
                  :ARG0-of (s / shorten-01 
                        :ARG1 (v / ventricular) 
                        :ARG2 (l / left 
                              :mod-of (g2 / graph)) 
                        :example (p / percentage-entity) 
                        :mod (f2 / fractional))) 
            :ARG1 (r2 / rate 
                  :mod (h / heart 
                        :poss-of (f / f))) 
            :ARG2 (g / graph 
                  :mod (r / right))))

# ::snt Responses were monitored for 10 min immediately post exercise .
# ::tok Responses were monitored for 10 min immediately post exercise .
# ::alignments 8-9|0.0 7-8|0.0.1 6-7|0.0.1.0 5-6|0 4-5|0.0.0 2-3|0.0.2 0-1|0.0.2.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:53.434
(m / min 
      :ARG1-of (e / exercise-02 
            :ARG0 10 
            :duration (p / post 
                  :time (i / immediate)) 
            :purpose-of (m2 / monitor-01 
                  :ARG1 (r / respons))))

# ::snt ( B ) In vivo hemodynamic response to the 1,1-adrenergic agonist dobutamine .
# ::tok ( B ) In vivo hemodynamic response to the 1,1-adrenergic agonist dobutamine .
# ::alignments 11-12|0.0 10-11|0 6-7|0.0.0 5-6|0.0.0.1 1-2|0.0.0.0.1+0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:53.485
(a / agonist 
      :mod-of (d / dobutamine 
            :ARG1-of (r / respond-01 
                  :ARG0 (l / location 
                        :name (n / name 
                              :op1 "B") 
                        :wiki -) 
                  :mod (h / hemodynamic))))

# ::snt Male and female PGC-1 + / + ( n = 6 ) and PGC-1  /  ( n = 6 ) mice at 10 -- 12 wk of age were anesthetized and a 1.4-French Millar catheter was placed through the carotid artery into the left ventricle as described in Materials and Methods .
# ::tok Male and female PGC-1 + / + ( n = 6 ) and PGC-1  /  ( n = 6 ) mice at 10 -- 12 wk of age were anesthetized and a 1.4-French Millar catheter was placed through the carotid artery into the left ventricle as described in Materials and Methods .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:53.489
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Heart rate ( left graph ) and a measurement of ventricular systolic performance , dP/dt ( right graph ) , were measured following infusion of dobutamine .
# ::tok Heart rate ( left graph ) and a measurement of ventricular systolic performance , dP/dt ( right graph ) , were measured following infusion of dobutamine .
# ::alignments 25-26|0.0.1.1.0.1.1 23-24|0.0.1.1.0.1.2 22-23|0.0.1.1.0.1 21-22|0.0.1.1.0 17-18|0.0.1.1.0.1.0.0 16-17|0.0.1.1.0.1.0 12-13|0.0 11-12|0.0.0 10-11|0 8-9|0.0.1 6-7|0.0.1.1 4-5|0.0.1.0 3-4|0.0.1.0.0 1-2|0.0.1.1.0.0 0-1|0.0.1.1.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:54.206
(v / ventricular 
      :ARG0-of (p / perform-02 
            :ARG1 (s / systolic) 
            :ARG1-of (m2 / measure-01 
                  :ARG0 (g2 / graph 
                        :mod (l / left)) 
                  :op1-of (a / and 
                        :purpose-of (m / measure-01 
                              :ARG1 (r2 / rate 
                                    :mod (h / heart)) 
                              :time (f / follow-01 
                                    :ARG0 (r / right 
                                          :mod-of (g / graph)) 
                                    :ARG1 (d / dobutamine) 
                                    :ARG2 (i / infusion)))))))

# ::snt * p < 0.05 .
# ::tok * p < 0.05 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:54.220
(a / amr-empty)

# ::snt PGC-1  /  Mice Exhibit an Abnormal Thermogenic Response .
# ::tok PGC-1  /  Mice Exhibit an Abnormal Thermogenic Response .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:54.221
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( A ) PGC-1 + / + ( n = 15 ) and PGC-1  /  ( n = 21 ) mice aged 28 -- 37 d were subjected to cold ( 4 C ) .
# ::tok ( A ) PGC-1 + / + ( n = 15 ) and PGC-1  /  ( n = 21 ) mice aged 28 -- 37 d were subjected to cold ( 4 C ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:54.231
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Core rectal temperature was monitored over a 5-h period .
# ::tok Core rectal temperature was monitored over a 5-h period .
# ::alignments 8-9|0.1 4-5|0 2-3|0.0 1-2|0.0.1 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:54.280
(m / monitor-01 
      :ARG1 (t / temperature 
            :ARG1-of (c / core-01) 
            :mod (r / rectal)) 
      :ARG2 (p / period))

# ::snt The change in core temperature  SEM is shown in the graph ( left ) as a function of time .
# ::tok The change in core temperature  SEM is shown in the graph ( left ) as a function of time .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:54.282
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt * p < 0.05 .
# ::tok * p < 0.05 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:54.293
(a / amr-empty)

# ::snt ( B ) Representative Northern blot analysis ( blot and gel at top ) performed with RNA isolated from BAT to detect UCP-1 transcript at baseline ( RT ) and after 5 h of exposure to cold ( 4 C ) ( UCP1 ) .
# ::tok ( B ) Representative Northern blot analysis ( blot and gel at top ) performed with RNA isolated from BAT to detect UCP-1 transcript at baseline ( RT ) and after 5 h of exposure to cold ( 4 C ) ( UCP1 ) .
# ::alignments 39-40|0.0.1.0.2.2.0 38-39|0.0.1.0.2.3.0 36-37|0.0.0.0 34-35|0.0.0 32-33|0 31-32|0.0.1.0.0.0.0.0 30-31|0.0 29-30|0.0.1 25-26|0.0.1.1 23-24|0.0.1.0.2.1.0+0.0.1.0.2.1 21-22|0.0.1.0.2 19-20|0.0.1.0.2.2 17-18|0.0.1.0.2.3 16-17|0.0.1.0.2.3.1 14-15|0.0.1.0 12-13|0.0.1.0.1.0.0 10-11|0.0.1.0.1.1 9-10|0.0.1.0.1 8-9|0.0.1.0.1.0 6-7|0.0.1.0.0.0.0 5-6|0.0.1.0.0.0.0.1 4-5|0.0.1.0.0 3-4|0.0.1.0.0.0 1-2|0.0.1.0.2.0.1+0.0.1.0.2.0.0.0+0.0.1.0.2.0.0+0.0.1.0.2.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:55.790
(h / h 
      :op1-of (a / after 
            :op2 (e / expose-01 
                  :ARG1 (c2 / cold)) 
            :op2-of (a2 / and 
                  :ARG0-of (p / perform-02 
                        :ARG1 (N / "Northern_Ireland" 
                              :ARG0-of (r2 / represent-01 
                                    :location-of (a4 / analyze-01 
                                          :ARG1 5 
                                          :ARG1-of (b4 / blot-01)))) 
                        :op3-of (a3 / and 
                              :op1 (b3 / blot-01 
                                    :ARG1 (t3 / top)) 
                              :op2 (g / gel)) 
                        :purpose (d / detect-01 
                              :ARG0 (l / location 
                                    :name (n / name 
                                          :op1 "B") 
                                    :wiki -) 
                              :ARG1 (t / thing 
                                    :ARG1-of (t2 / transcribe-01)) 
                              :ARG1-of (b2 / bat-01 
                                    :ARG0 (c / C)) 
                              :purpose-of (i / isolate-01 
                                    :ARG0 4 
                                    :ARG1 (r / rna)))) 
                  :op1 (b / baseline))))

# ::snt Ethidium bromide ( Eth Br ) staining of ribosomal RNA is shown as a control .
# ::tok Ethidium bromide ( Eth Br ) staining of ribosomal RNA is shown as a control .
# ::alignments 14-15|0.1 11-12|0 9-10|0.0.1 6-7|0.0 3-5|0.0.0.0.1+0.0.0.0.0+0.0.0.0+0.0.0 1-2|0.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:55.828
(s / show-01 
      :ARG1 (s2 / stain-01 
            :ARG0 (p / person 
                  :name (n / name 
                        :op1 "Eth" 
                        :op2 "Br")) 
            :ARG1 (r / rna)) 
      :ARG2 (c / control-01 
            :ARG1 (b / bromide)))

# ::snt Quantitative real-time RT-PCR for UCP-1 transcript is shown on the graph at the bottom .
# ::tok Quantitative real-time RT-PCR for UCP-1 transcript is shown on the graph at the bottom .
# ::alignments 13-14|0.3 10-11|0.2 7-8|0 5-6|0.0.0+0.0 1-2|0.1.0 0-1|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:55.919
(s / show-01 
      :ARG0 (t / thing 
            :ARG1-of (t2 / transcribe-01)) 
      :ARG1 (q / quantitative 
            :degree-of (r / real-time)) 
      :ARG2 (g / graph) 
      :time (b / bottom))

# ::snt The values represent mean arbitrary units normalized to a 36B4 transcript ( control ) .
# ::tok The values represent mean arbitrary units normalized to a 36B4 transcript ( control ) .
# ::alignments 12-13|0.2 10-11|0.1.0.0.0+0.1.0.0 6-7|0.1.0 5-6|0.1.1 4-5|0.1.1.0 3-4|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.026
(r / represent-01 
      :ARG0 (v / value) 
      :ARG1 (m / mean-01 
            :ARG1 (n / normalize-01 
                  :ARG1 (t / thing 
                        :ARG1-of (t2 / transcribe-01))) 
            :ARG2 (u / unit 
                  :ARG1-of (a / arbitrary-02))) 
      :ARG1-of (c / control-01))

# ::snt ( C ) Altered response to 3-adrenergic agonist .
# ::tok ( C ) Altered response to 3-adrenergic agonist .
# ::alignments 7-8|0.0.1 4-5|0.0 3-4|0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.042
(a2 / alter-01 
      :ARG1 (r / respond-01 
            :ARG0 (c / C) 
            :ARG1 (a / agonist)))

# ::snt To evaluate the oxygen consumption ( VO2 ) in response to the stimulation of BAT uncoupled respiration , the 3-adrenergic agonist BRL 37344 was administered to littermate PGC-1 + / + ( n = 5 ) and PGC-1  /  ( n = 5 ) female mice followed by measurement of VO2 by indirect calorimetry .
# ::tok To evaluate the oxygen consumption ( VO2 ) in response to the stimulation of BAT uncoupled respiration , the 3-adrenergic agonist BRL 37344 was administered to littermate PGC-1 + / + ( n = 5 ) and PGC-1  /  ( n = 5 ) female mice followed by measurement of VO2 by indirect calorimetry .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.047
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Mean  SEM VO2 is shown .
# ::tok Mean  SEM VO2 is shown .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.051
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt * p < 0.05 .
# ::tok * p < 0.05 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.061
(a / amr-empty)

# ::snt Fasting-Induced Hepatic Steatosis Develops in PGC-1  /  Mice .
# ::tok Fasting-Induced Hepatic Steatosis Develops in PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.063
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( A ) The photograph depicts the development of a pale liver in PGC-1  /  mice subjected to a 24-h fast .
# ::tok ( A ) The photograph depicts the development of a pale liver in PGC-1  /  mice subjected to a 24-h fast .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.067
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( B ) Oil red O staining of histologic sections of liver taken from PGC-1  /  mice under fed and 24 h fasted conditions .
# ::tok ( B ) Oil red O staining of histologic sections of liver taken from PGC-1  /  mice under fed and 24 h fasted conditions .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.070
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The red staining indicates neutral lipid .
# ::tok The red staining indicates neutral lipid .
# ::alignments 5-6|0.1 4-5|0.1.0 3-4|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.095
(i / indicate-01 
      :ARG0 (s / stain-01 
            :mod (r / red)) 
      :ARG1 (l / lipid 
            :ARG1-of (n / neutral-02)))

# ::snt ( C ) Representative electron micrographs of the liver from PGC-1 + / + and PGC-1  /  mice following a 24-h fast .
# ::tok ( C ) Representative electron micrographs of the liver from PGC-1 + / + and PGC-1  /  mice following a 24-h fast .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.097
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The droplets are indicative of neutral lipid accumulation .
# ::tok The droplets are indicative of neutral lipid accumulation .
# ::alignments 7-8|0.1 6-7|0.1.1 5-6|0.1.0 3-4|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.134
(i / indicative 
      :domain (d / droplet) 
      :topic (a / accumulation 
            :ARG1-of (n / neutral-02) 
            :mod (l / lipid)))

# ::snt ( D ) Mean liver TAG levels in PGC-1 + / + ( n = 5 ) and PGC-1  /  ( n = 5 ) mice under fed and 24-h fasted conditions .
# ::tok ( D ) Mean liver TAG levels in PGC-1 + / + ( n = 5 ) and PGC-1  /  ( n = 5 ) mice under fed and 24-h fasted conditions .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.136
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt * p < 0.05 .
# ::tok * p < 0.05 .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.148
(a / amr-empty)

# ::snt Hepatocytes Isolated from PGC-1  /  Mice Exhibit Reduced Oxidative Capacity .
# ::tok Hepatocytes Isolated from PGC-1  /  Mice Exhibit Reduced Oxidative Capacity .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.149
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( A ) Oil red O staining of isolated hepatocytes exposed to BSA alone ( BSA ) or 50 M oleate complexed to BSA ( oleate ) .
# ::tok ( A ) Oil red O staining of isolated hepatocytes exposed to BSA alone ( BSA ) or 50 M oleate complexed to BSA ( oleate ) .
# ::alignments 20-21|0.1.1.1 19-20|0.1.1.1.0.1+0.1.1.1.0.0.0+0.1.1.1.0.0+0.1.1.1.0 18-19|0.0 17-18|0.1.1 13-14|0.3 12-13|0.2.0.0+0.2.0+0.2 10-11|0 9-10|0.1 8-9|0.1.0 6-7|0.1.0.0 5-6|0.1.0.0.0.1+0.1.0.0.0.0.0+0.1.0.0.0.0+0.1.0.0.0 4-5|0.1.0.0.1 3-4|0.1.1.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.420
(e / expose-01 
      :ARG0 50 
      :ARG1 (h / hepatocyt 
            :ARG1-of (i / isolate-01 
                  :ARG1-of (s / stain-01 
                        :ARG0 (p / person 
                              :name (n3 / name 
                                    :op1 "O'Reilly") 
                              :wiki "Bill_O'Reilly_(political_commentator)") 
                        :mod (r / red))) 
            :poss-of (o2 / or 
                  :op1 (o4 / oil) 
                  :op2 (o / oleate 
                        :mod (v / vehicle 
                              :name (n / name 
                                    :op1 "M1") 
                              :wiki "M1_Abrams")))) 
      :ARG2 (o3 / organization 
            :name (n2 / name 
                  :op1 "BSA")) 
      :manner (a / alone))

# ::snt ( B ) 3H-palmitate oxidation rates .
# ::tok ( B ) 3H-palmitate oxidation rates .
# ::alignments 5-6|0 1-2|0.0.1+0.0.0.0+0.0.0+0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.436
(r / rate 
      :mod (l / location 
            :name (n / name 
                  :op1 "B") 
            :wiki -))

# ::snt 3H-palmitate oxidation rates determined in hepatocytes isolated from PGC-1 + / + and PGC-1  /  mice under cell culture conditions containing BSA or BSA + 50 M oleate ( 2:1 oleate/BSA ratio ) .
# ::tok 3H-palmitate oxidation rates determined in hepatocytes isolated from PGC-1 + / + and PGC-1  /  mice under cell culture conditions containing BSA or BSA + 50 M oleate ( 2:1 oleate/BSA ratio ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.438
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Values were derived from ten sets of triplicates for each group using hepatocytes from 5 mice of each genotype .
# ::tok Values were derived from ten sets of triplicates for each group using hepatocytes from 5 mice of each genotype .
# ::alignments 18-19|0 17-18|0.0 15-16|0.1 14-15|0.1.0.0.0.0.0 12-13|0.1.0.1 11-12|0.1.0 10-11|0.1.0.0 9-10|0.1.0.0.1 7-8|0.1.0.0.0.1.0 5-6|0.1.0.0.0.1 2-3|0.1.0.0.0 0-1|0.1.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.658
(g / genotype 
      :mod (e / each) 
      :poss-of (m / mouse 
            :beneficiary-of (u / use-01 
                  :ARG0 (g2 / group 
                        :duration-of (d / derive-01 
                              :ARG1 (v / value-01 
                                    :ARG1 5) 
                              :ARG2 (s / set 
                                    :consist-of (t / triplicate))) 
                        :mod (e2 / each)) 
                  :ARG1 (h / hepatocyt))))

# ::snt The bars represent mean oxidation rates ( n = 100 ) normalized to the condition of PGC-1 + / + in BSA alone .
# ::tok The bars represent mean oxidation rates ( n = 100 ) normalized to the condition of PGC-1 + / + in BSA alone .
# ::alignments 22-23|0.1.1.0.2 21-22|0.2.0.0+0.2.0+0.2 18-19|0.1.0 14-15|0.1.1.0.1 11-12|0.1.1.0 9-10|0.1.1.0.0 5-6|0.1.1 4-5|0.1.1.1 3-4|0.1 2-3|0 1-2|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.806
(r2 / represent-01 
      :ARG0 (b / bar) 
      :ARG1 (m / mean-01 
            :ARG0 (s / slash) 
            :ARG1 (r / rate 
                  :ARG1-of (n2 / normalize-01 
                        :ARG0 100 
                        :ARG2 (c / condition) 
                        :manner (a / alone)) 
                  :mod (o2 / oxidation))) 
      :ARG2 (o / organization 
            :name (n / name 
                  :op1 "BSA")))

# ::snt * p < 0.05 compared to the corresponding PGC-1 + / + mice .
# ::tok * p < 0.05 compared to the corresponding PGC-1 + / + mice .
# ::alignments 12-13|0.0 10-11|0.0.0 7-8|0 4-5|0.1.0 1-2|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.829
(c / correspond-01 
      :ARG0 (m / mouse 
            :op1-of (s / slash)) 
      :ARG1 (p / p 
            :ARG0-of (c2 / compare-01)))

# ::snt  p < 0.05 compared to PGC-1 + / + with BSA treatment .
# ::tok  p < 0.05 compared to PGC-1 + / + with BSA treatment .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.830
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( C ) State 2 and 3 respiration rates determined for hepatocytes isolated from PGC-1 + / + ( n = 3 ) and PGC-1  /  ( n = 3 ) mice using succinate/rotenone as a substrate .
# ::tok ( C ) State 2 and 3 respiration rates determined for hepatocytes isolated from PGC-1 + / + ( n = 3 ) and PGC-1  /  ( n = 3 ) mice using succinate/rotenone as a substrate .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.836
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt * p < 0.05 compared to corresponding PGC-1 + / + .
# ::tok * p < 0.05 compared to corresponding PGC-1 + / + .
# ::alignments 9-10|0.0 6-7|0 4-5|0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.861
(c / correspond-01 
      :ARG1 (s / slash) 
      :ARG1-of (c2 / compare-01))

# ::snt ( D ) TAG synthesis rates in isolated hepatocytes .
# ::tok ( D ) TAG synthesis rates in isolated hepatocytes .
# ::alignments 8-9|0.0 7-8|0.0.0 5-6|0.1 3-4|0 1-2|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.891
(t / tag-01 
      :ARG0 (h / hepatocyt 
            :ARG1-of (i / isolate-01 
                  :ARG0 (d / D))) 
      :ARG1 (r / rate))

# ::snt The bars represent mean TAG synthesis rates ( glycerol incorporation , see Materials and Methods ) for hepatocytes isolated from PGC-1 + / + ( n = 6 ) and PGC-1  /  ( n = 6 ) mice .
# ::tok The bars represent mean TAG synthesis rates ( glycerol incorporation , see Materials and Methods ) for hepatocytes isolated from PGC-1 + / + ( n = 6 ) and PGC-1  /  ( n = 6 ) mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.895
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt * p < 0.05 compared to the corresponding PGC-1 + / + condition .
# ::tok * p < 0.05 compared to the corresponding PGC-1 + / + condition .
# ::alignments 12-13|0.0 10-11|0.0.0 7-8|0 4-5|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.920
(c2 / correspond-01 
      :ARG1 (c / condition 
            :op1-of (s / slash 
                  :ARG1-of (c3 / compare-01))))

# ::snt Female PGC-1  /  Mice Are More Glucose Tolerant and Insulin Sensitive Compared to PGC-1 + / + on High-Fat Diet .
# ::tok Female PGC-1  /  Mice Are More Glucose Tolerant and Insulin Sensitive Compared to PGC-1 + / + on High-Fat Diet .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.922
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( A ) At 4.5 mo of age , glucose tolerance testing ( GTT ) was performed on female PGC-1 + / + ( n = 6 ) and PGC-1  /  ( n = 6 ) mice maintained on standard chow .
# ::tok ( A ) At 4.5 mo of age , glucose tolerance testing ( GTT ) was performed on female PGC-1 + / + ( n = 6 ) and PGC-1  /  ( n = 6 ) mice maintained on standard chow .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.927
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( B ) At 8 wk of age , PGC-1 + / + ( n = 8 ) and PGC-1  /  ( n = 11 ) mice were provided a diet containing 43 % of its calories from fat ( HF chow ) .
# ::tok ( B ) At 8 wk of age , PGC-1 + / + ( n = 8 ) and PGC-1  /  ( n = 11 ) mice were provided a diet containing 43 % of its calories from fat ( HF chow ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.934
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The graphs depict blood glucose levels  SEM in PGC-1  /  mice during GTT ( left graph ) and ITT ( right graph ) studies .
# ::tok The graphs depict blood glucose levels  SEM in PGC-1  /  mice during GTT ( left graph ) and ITT ( right graph ) studies .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:56.937
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Studies were performed 5 wk ( GTT ) and 6 wk ( ITT ) after the initiation of the high-fat diet .
# ::tok Studies were performed 5 wk ( GTT ) and 6 wk ( ITT ) after the initiation of the high-fat diet .
# ::alignments 20-21|0.0.1.1 16-17|0.0.1.0 14-15|0.0.1 12-13|0.1.0.0+0.1.0+0.1 9-10|0.0.0.1 8-9|0 6-7|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 3-4|0.0.1.2 2-3|0.0 0-1|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.430
(a2 / and 
      :ARG1-of (p / perform-02 
            :ARG2 (s / study-01 
                  :ARG0 (o2 / organization 
                        :name (n2 / name 
                              :op1 "GTT")) 
                  :ARG1 6) 
            :time (a / after 
                  :op1 (i / initiation) 
                  :op2 (d / diet) 
                  :time-of 5)) 
      :op1 (o / organization 
            :name (n / name 
                  :op1 "ITT")))

# ::snt * p < 0.05 compared to PGC-1 + / + mice at the same time point .
# ::tok * p < 0.05 compared to PGC-1 + / + mice at the same time point .
# ::alignments 15-16|0.1 14-15|0.1.1 13-14|0.1.0 10-11|0 8-9|0.1.0.0 4-5|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.472
(m / mouse 
      :ARG1-of (c / compare-01) 
      :location (p / point 
            :ARG1-of (s / same-01 
                  :ARG0 (s2 / slash)) 
            :mod (t / time)))

# ::snt Neuropathology of the Central Nervous System of PGC-1  /  Mice .
# ::tok Neuropathology of the Central Nervous System of PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.474
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt ( A ) Light microscopic appearance of representative cerebral cortex of 2-mo-old PGC-1  /  mice demonstrates marked vacuolation of the neuropil ( arrows ) and scattered neuronal perikarya , which are absent in PGC-1 + / + mice ( hematoxylin and eosin ) .
# ::tok ( A ) Light microscopic appearance of representative cerebral cortex of 2-mo-old PGC-1  /  mice demonstrates marked vacuolation of the neuropil ( arrows ) and scattered neuronal perikarya , which are absent in PGC-1 + / + mice ( hematoxylin and eosin ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.477
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt The scale bar shown is applicable to all sections .
# ::tok The scale bar shown is applicable to all sections .
# ::alignments 8-9|0.1.0 7-8|0.1.0.0 5-6|0.1 3-4|0 2-3|0.0 1-2|0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.504
(s2 / show-01 
      :ARG0 (b / bar-01 
            :ARG1 (s3 / scale)) 
      :ARG1 (a2 / apply-02 
            :ARG2 (s / section 
                  :quant (a / all))))

# ::snt ( B ) Ultrastructural appearance of typical vacuoles containing membranous debris , denoted by the arrow , in the cerebral cortex of a representative PGC-1  /  mouse in comparison to PGC-1 + / + ( magnification 4000  ) .
# ::tok ( B ) Ultrastructural appearance of typical vacuoles containing membranous debris , denoted by the arrow , in the cerebral cortex of a representative PGC-1  /  mouse in comparison to PGC-1 + / + ( magnification 4000  ) .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.508
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Cardiac Hemodynamics Measured in Isolated Working Hearts of PGC-1 + / + and PGC-1  /  Mice .
# ::tok Cardiac Hemodynamics Measured in Isolated Working Hearts of PGC-1 + / + and PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.511
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Values represent mean  SEM .
# ::tok Values represent mean  SEM .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.518
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Metabolic Gene Expression in Liver of Fed and Fasted PGC-1 + / + and PGC-1  /  Mice .
# ::tok Metabolic Gene Expression in Liver of Fed and Fasted PGC-1 + / + and PGC-1  /  Mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.522
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt Values represent mean (  SEM ) ( n  6 for each group ) mRNA levels as determined by real-time RT-PCR corrected for GAPDH signal intensity and normalized ( to 1.0 ) to the value of fed PGC-1 + / + mice .
# ::tok Values represent mean (  SEM ) ( n  6 for each group ) mRNA levels as determined by real-time RT-PCR corrected for GAPDH signal intensity and normalized ( to 1.0 ) to the value of fed PGC-1 + / + mice .
# ::alignments 0-1|0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.524
# THERE WAS AN EXCEPTION IN THE PARSER.  Returning an empty graph.
# java.lang.AssertionError: assertion failed
# 	at scala.Predef$.assert(Predef.scala:165)
# 	at edu.cmu.lti.nlp.amr.Annotation$$anonfun$makeLeftRight$1.apply$mcVI$sp(Annotation.scala:86)
# 	at scala.collection.immutable.Range.foreach$mVc$sp(Range.scala:141)
# 	at edu.cmu.lti.nlp.amr.Annotation.makeLeftRight(Annotation.scala:67)
# 	at edu.cmu.lti.nlp.amr.Annotation.<init>(Annotation.scala:18)
# 	at edu.cmu.lti.nlp.amr.Input.<init>(Input.scala:24)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply$mcV$sp(AMRParser.scala:220)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3$$anonfun$apply$1.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.time(AMRParser.scala:93)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:214)
# 	at edu.cmu.lti.nlp.amr.AMRParser$$anonfun$main$3.apply(AMRParser.scala:212)
# 	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:772)
# 	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
# 	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:108)
# 	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:771)
# 	at edu.cmu.lti.nlp.amr.AMRParser$.main(AMRParser.scala:212)
# 	at edu.cmu.lti.nlp.amr.AMRParser.main(AMRParser.scala)
(a / amr-empty)

# ::snt a p < 0.05 versus fed mice of the same genotype .
# ::tok a p < 0.05 versus fed mice of the same genotype .
# ::alignments 10-11|0.0.0.0 9-10|0.0.0.0.0 6-7|0.0.0 5-6|0.0 4-5|0 1-2|0.0.0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.562
(v / versu 
      :ARG0-of (f / feed-up-03 
            :ARG1 (m / mouse 
                  :poss (g / genotype 
                        :ARG1-of (s / same-01 
                              :ARG0 (p / p))))))

# ::snt b p < 0.05 versus PGC-1 + / + mice of the same dietary treatment .
# ::tok b p < 0.05 versus PGC-1 + / + mice of the same dietary treatment .
# ::alignments 14-15|0.0.0 13-14|0.0.0.2 12-13|0.0 9-10|0.0.0.3 7-8|0.0.0.1 4-5|0 1-2|0.0.1 0-1|0.0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:57.658
(v / versu 
      :ARG2-of (s / same-01 
            :ARG1 (t / treat-03 
                  :ARG0 (b / b) 
                  :ARG1 (s2 / slash) 
                  :ARG2 (d / dietary) 
                  :poss-of (m / mouse)) 
            :op1-of (p / p)))

# ::snt L-CPT I , liver-type carnitine palmitoyltransferase ; MCAD , medium-chain acyl-CoA dehydrogenase ; SREBP , sterol regulatory element binding protein ; SCD , steroyl-CoA desaturase ; FAS , fatty acid synthase ; GPAT , glycerol-3-phosphate acyltransferase ; DGAT , diacylglycerol acyltransferase .
# ::tok L-CPT I , liver-type carnitine palmitoyltransferase ; MCAD , medium-chain acyl-CoA dehydrogenase ; SREBP , sterol regulatory element binding protein ; SCD , steroyl-CoA desaturase ; FAS , fatty acid synthase ; GPAT , glycerol-3-phosphate acyltransferase ; DGAT , diacylglycerol acyltransferase .
# ::alignments 35-36|0.0.3 30-31|0.0.4 29-30|0.0.4.0 28-29|0.0.4.1 26-27|0.0.1.0.0+0.0.1.0+0.0.1 24-25|0.0.5 21-22|0.0.0 19-20|0 18-19|0.1 17-18|0.1.0 16-17|0.0 15-16|0.0.2 13-14|0.1.3 11-12|0.1.1 6-7|0.0.1.1 5-6|0.0.1.1.0 4-5|0.0.1.1.0.0 1-2|0.1.2 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:58.198
(p / protein 
      :ARG0-of (r / regulate-01 
            :ARG1 (s2 / scd) 
            :ARG2 (o / organization 
                  :name (n / name 
                        :op1 "FAS") 
                  :op2-of (a3 / and 
                        :op1 (p2 / palmitoyltransferase 
                              :mod (c / carnitine)))) 
            :degree (s3 / sterol) 
            :op1-of (a / acyltransferase) 
            :op1-of (s / synthase 
                  :mod (a2 / acid) 
                  :mod (f / fatty)) 
            :op1-of (d / desaturase)) 
      :ARG1-of (b / binding-07 
            :ARG0 (e / element) 
            :ARG2 (d2 / dehydrogenase) 
            :manner (i / i) 
            :op1-of (s4 / SREBP)))

# ::snt Author contributions .
# ::tok Author contributions .
# ::alignments 1-2|0 0-1|0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:58.203
(c / contribute-01 
      :ARG1-of (a / author-01))

# ::snt TCL , JJL , BNF , PJS , and DPK conceived and designed the experiments .
# ::tok TCL , JJL , BNF , PJS , and DPK conceived and designed the experiments .
# ::alignments 14-15|0.4.1 12-13|0.4 11-12|0 10-11|0.4.2.0 9-10|0.3.0.0+0.3.0+0.3 8-9|0.4.2 6-7|0.2 4-5|0.1.0.0+0.1.0+0.1 2-3|0.0.0.0+0.0.0+0.0 0-1|0.4.0.0.0+0.4.0.0+0.4.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:58.347
(a / and 
      :op1 (c3 / country 
            :name (n3 / name 
                  :op1 "JJL")) 
      :op2 (c2 / country 
            :name (n2 / name 
                  :op1 "BNF")) 
      :op3 (p / pj) 
      :op4 (o / organization 
            :name (n / name 
                  :op1 "DPK")) 
      :op5 (d / design-01 
            :ARG0 (c4 / country 
                  :name (n4 / name 
                        :op1 "TCL")) 
            :ARG1 (e / experiment-01) 
            :op1-of (a2 / and 
                  :ARG0-of (c / conceive-01))))

# ::snt TCL , JJL , BNF , PJS , ARW , SB , MC , DFW , NS , CBM , ZC , DMM , RES , and EDA performed the experiments .
# ::tok TCL , JJL , BNF , PJS , ARW , SB , MC , DFW , NS , CBM , ZC , DMM , RES , and EDA performed the experiments .
# ::alignments 30-31|0.0.0 28-29|0.0 27-28|0.3.0.0+0.3.0+0.3 26-27|0 24-25|0.2 22-23|0.11.0.0+0.11.0+0.11 20-21|0.10.0.0+0.10.0+0.10 18-19|0.0.0.0.0.0+0.0.0.0.0+0.0.0.0 16-17|0.9.0.0+0.9.0+0.9 14-15|0.8.0.0+0.8.0+0.8 12-13|0.0.0.1.0.0+0.0.0.1.0+0.0.0.1 10-11|0.7 6-7|0.6 4-5|0.5.0.0+0.5.0+0.5 2-3|0.4.0.0+0.4.0+0.4 0-1|0.1.0.0+0.1.0+0.1 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:58:59.257
(a / and 
      :ARG0-of (p / perform-02 
            :ARG1 (e / experiment-01 
                  :ARG0 (c3 / country 
                        :name (n4 / name 
                              :op1 "CBM")) 
                  :ARG1 (p2 / person 
                        :name (n7 / name 
                              :op1 "MC")))) 
      :op1 (c8 / country 
            :name (n10 / name 
                  :op1 "TCL")) 
      :op10 (r / r) 
      :op11 (o / organization 
            :name (n / name 
                  :op1 "EDA")) 
      :op2 (c7 / country 
            :name (n9 / name 
                  :op1 "JJL")) 
      :op3 (c6 / country 
            :name (n8 / name 
                  :op1 "BNF")) 
      :op4 (p3 / pj) 
      :op5 (s / sb) 
      :op6 (c5 / country 
            :name (n6 / name 
                  :op1 "DFW")) 
      :op7 (c4 / country 
            :name (n5 / name 
                  :op1 "NS")) 
      :op8 (c2 / country 
            :name (n3 / name 
                  :op1 "ZC")) 
      :op9 (c / country 
            :name (n2 / name 
                  :op1 "DMM")))

# ::snt TCL , JJL , BNF , PJS , ARW , SB , MC , DFW , NS , CBM , ZC , JOH , DMM , RES , JES , EDA , CFS , and DPK analyzed the data .
# ::tok TCL , JJL , BNF , PJS , ARW , SB , MC , DFW , NS , CBM , ZC , JOH , DMM , RES , JES , EDA , CFS , and DPK analyzed the data .
# ::alignments 38-39|0.1 36-37|0 35-36|0.0.8.0.0+0.0.8.0+0.0.8 34-35|0.0 32-33|0.0.7.0.0+0.0.7.0+0.0.7 30-31|0.0.6.0.0+0.0.6.0+0.0.6 28-29|0.0.5 26-27|0.0.4 24-25|0.0.3.0.0+0.0.3.0+0.0.3 22-23|0.0.2.0.0+0.0.2.0+0.0.2 20-21|0.0.1.0.0+0.0.1.0+0.0.1 18-19|0.0.16.0.0+0.0.16.0+0.0.16 16-17|0.0.15.0.0+0.0.15.0+0.0.15 14-15|0.0.14.0.0+0.0.14.0+0.0.14 12-13|0.0.13.0.0+0.0.13.0+0.0.13 10-11|0.0.12 6-7|0.0.11 4-5|0.0.10.0.0+0.0.10.0+0.0.10 2-3|0.0.9.0.0+0.0.9.0+0.0.9 0-1|0.0.0.0.0+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:59:01.500
(a / analyze-01 
      :ARG0 (a2 / and 
            :op1 (c9 / country 
                  :name (n13 / name 
                        :op1 "TCL")) 
            :op10 (c3 / country 
                  :name (n6 / name 
                        :op1 "ZC")) 
            :op11 (c2 / country 
                  :name (n5 / name 
                        :op1 "JOH")) 
            :op12 (c / country 
                  :name (n4 / name 
                        :op1 "DMM")) 
            :op13 (r / r) 
            :op14 (j / j) 
            :op15 (o3 / organization 
                  :name (n3 / name 
                        :op1 "EDA")) 
            :op16 (o2 / organization 
                  :name (n2 / name 
                        :op1 "CFS")) 
            :op17 (o / organization 
                  :name (n / name 
                        :op1 "DPK")) 
            :op2 (c8 / country 
                  :name (n12 / name 
                        :op1 "JJL")) 
            :op3 (c7 / country 
                  :name (n11 / name 
                        :op1 "BNF")) 
            :op4 (p2 / pj) 
            :op5 (s / sb) 
            :op6 (p / person 
                  :name (n10 / name 
                        :op1 "MC")) 
            :op7 (c6 / country 
                  :name (n9 / name 
                        :op1 "DFW")) 
            :op8 (c5 / country 
                  :name (n8 / name 
                        :op1 "NS")) 
            :op9 (c4 / country 
                  :name (n7 / name 
                        :op1 "CBM"))) 
      :ARG1 (d / data))

# ::snt TCL , BNF , and DPK wrote the paper .
# ::tok TCL , BNF , and DPK wrote the paper .
# ::alignments 8-9|0.1 6-7|0 5-6|0.0.2.0.0+0.0.2.0+0.0.2 4-5|0.0 2-3|0.0.1.0.0+0.0.1.0+0.0.1 0-1|0.0.0.0.0+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:59:01.829
(w / write-01 
      :ARG0 (a / and 
            :op1 (c2 / country 
                  :name (n3 / name 
                        :op1 "TCL")) 
            :op2 (c / country 
                  :name (n2 / name 
                        :op1 "BNF")) 
            :op3 (o / organization 
                  :name (n / name 
                        :op1 "DPK"))) 
      :ARG1 (p / paper))

# ::snt Citation : Leone TC , Lehman JJ , Finck BN , Schaeffer PJ , Wende AR , et al. ( 2005 ) PGC-1-deficiency causes multi-system energy metabolic derangements : Muscle dysfunction , abnormal weight control and hepatic steatosis .
# ::tok Citation : Leone TC , Lehman JJ , Finck BN , Schaeffer PJ , Wende AR , et al. ( 2005 ) PGC-1-deficiency causes multi-system energy metabolic derangements : Muscle dysfunction , abnormal weight control and hepatic steatosis .
# ::alignments 37-38|0.1.4 36-37|0.1.4.0 35-36|0.1 34-35|0.1.3 33-34|0.1.3.1 32-33|0.1.3.1.1 30-31|0.1.2 29-30|0.1.2.0 27-28|0.0.0 26-27|0.0.0.0 25-26|0.0 23-24|0 20-21|0.1.3.2.1+0.1.3.2 17-19|0.1.2.0.0.0.1+0.1.2.0.0.0.0+0.1.2.0.0.0+0.1.2.0.0 14-16|0.1.4.0.0.0.1+0.1.4.0.0.0.0+0.1.4.0.0.0+0.1.4.0.0 11-13|0.1.3.1.0.0.1+0.1.3.1.0.0.0+0.1.3.1.0.0+0.1.3.1.0 8-10|0.1.1.0.1+0.1.1.0.0+0.1.1.0+0.1.1 5-7|0.1.3.0.0.1+0.1.3.0.0.0+0.1.3.0.0+0.1.3.0 2-4|0.1.0.0.1+0.1.0.0.0+0.1.0.0+0.1.0 0-1|0.1.3.2.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:59:04.054
(c2 / cause-01 
      :ARG1 (e / energy 
            :mod-of (d2 / derangement 
                  :mod (m2 / metabolic))) 
      :op3-of (a / and 
            :op1 (p3 / person 
                  :name (n6 / name 
                        :op1 "Leone" 
                        :op2 "TC")) 
            :op2 (p2 / person 
                  :name (n4 / name 
                        :op1 "Finck" 
                        :op2 "BN")) 
            :op4 (d / dysfunction 
                  :ARG1-of (m / muscle-01 
                        :ARG0 (t / thing 
                              :name (n / name 
                                    :op1 (e2 / et) 
                                    :op2 (a3 / al.))))) 
            :op5 (c / control-01 
                  :ARG0 (o / organization 
                        :name (n5 / name 
                              :op1 "Lehman" 
                              :op2 "JJ")) 
                  :ARG1 (w / weight 
                        :mod (t3 / thing 
                              :name (n3 / name 
                                    :op1 (s2 / Schaeffer) 
                                    :op2 (p / PJ))) 
                        :quant (a2 / abnormal)) 
                  :op1-of (d3 / date-entity 
                        :poss (c3 / citation) 
                        :year 2005)) 
            :op6 (s / steatosi 
                  :mod (h / hepatic 
                        :mod-of (t2 / thing 
                              :name (n2 / name 
                                    :op1 (w2 / Wende) 
                                    :op2 (a4 / AR)))))))

# ::snt PLoS Biol 3 ( 4 ) : e101 .
# ::tok PLoS Biol 3 ( 4 ) : e101 .
# ::alignments 7-8|0 4-5|0.0 2-3|0.1 0-2|0.0.0.0.1+0.0.0.0.0+0.0.0.0+0.0.0 ::annotator JAMR dev v0.3 ::date 2018-04-22T00:59:04.098
(e / e101 
      :quant (4 / 4 
            :op1-of (o / organization 
                  :name (n / name 
                        :op1 "PLoS" 
                        :op2 "Biol"))) 
      :time 3)

